{"version":3,"file":"wavesurfer.js","mappings":"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AAU,CAAC1U,GAAD,EAAM;IACZ,KAAKye,cAAL,GAAsBze,GAAtB;EACH;;AA5uB+C;;;;;;;;;;ACZpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;;;;;;UCrEA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMoiB,WAAN,CAAkB;EACd;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIzD,MAAM,CAACvZ,MAAD,EAAS,CAAE;EACjB;AACJ;AACA;AACA;AACA;AACA;;;EACI1F,WAAW,CAAC0F,MAAD,EAASid,EAAT,EAAa,CAAE;EAC1B;AACJ;AACA;AACA;AACA;AACA;;;EACIhX,IAAI,GAAG,CAAE;EACT;AACJ;AACA;AACA;AACA;AACA;;;EACI9G,OAAO,GAAG,CAAE;;AAhCE;AAmClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACe,MAAM+d,UAAN,SAAyBtd,2CAAzB,CAAuC;EAClD;EACAud,aAAa,GAAG;IACZhF,YAAY,EAAE,IADF;IAEZsC,oBAAoB,EAAE,IAFV;IAGZtP,SAAS,EAAE,CAHC;IAIZtG,UAAU,EAAE,IAJA;IAKZT,cAAc,EAAE,CALJ;IAMZW,qBAAqB,EAAE,KANX;IAOZqY,OAAO,EAAE,UAPG;IAQZC,eAAe,EAAE,IARL;IASZ7S,SAAS,EAAE,CATC;IAUZxE,SAAS,EAAE,CAVC;IAWZgC,MAAM,EAAE,IAXI;IAYZQ,Y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","sources":["webpack://WaveSurfer/webpack/universalModuleDefinition","webpack://WaveSurfer/./src/drawer.canvasentry.js","webpack://WaveSurfer/./src/drawer.js","webpack://WaveSurfer/./src/drawer.multicanvas.js","webpack://WaveSurfer/./src/mediaelement-webaudio.js","webpack://WaveSurfer/./src/mediaelement.js","webpack://WaveSurfer/./src/peakcache.js","webpack://WaveSurfer/./src/util/absMax.js","webpack://WaveSurfer/./src/util/clamp.js","webpack://WaveSurfer/./src/util/fetch.js","webpack://WaveSurfer/./src/util/frame.js","webpack://WaveSurfer/./src/util/get-id.js","webpack://WaveSurfer/./src/util/index.js","webpack://WaveSurfer/./src/util/max.js","webpack://WaveSurfer/./src/util/min.js","webpack://WaveSurfer/./src/util/observer.js","webpack://WaveSurfer/./src/util/orientation.js","webpack://WaveSurfer/./src/util/prevent-click.js","webpack://WaveSurfer/./src/util/request-animation-frame.js","webpack://WaveSurfer/./src/util/silence-mode.js","webpack://WaveSurfer/./src/util/style.js","webpack://WaveSurfer/./src/webaudio.js","webpack://WaveSurfer/./node_modules/debounce/index.js","webpack://WaveSurfer/webpack/bootstrap","webpack://WaveSurfer/webpack/runtime/compat get default export","webpack://WaveSurfer/webpack/runtime/define property getters","webpack://WaveSurfer/webpack/runtime/hasOwnProperty shorthand","webpack://WaveSurfer/webpack/runtime/make namespace object","webpack://WaveSurfer/./src/wavesurfer.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"WaveSurfer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WaveSurfer\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = factory();\n})(self, () => {\nreturn ","/**\r\n * @since 3.0.0\r\n */\r\n\r\nimport style from './util/style';\r\nimport getId from './util/get-id';\r\n\r\n/**\r\n * The `CanvasEntry` class represents an element consisting of a wave `canvas`\r\n * and an (optional) progress wave `canvas`.\r\n *\r\n * The `MultiCanvas` renderer uses one or more `CanvasEntry` instances to\r\n * render a waveform, depending on the zoom level.\r\n */\r\nexport default class CanvasEntry {\r\n    constructor() {\r\n        /**\r\n         * The wave node\r\n         *\r\n         * @type {HTMLCanvasElement}\r\n         */\r\n        this.wave = null;\r\n        /**\r\n         * The wave canvas rendering context\r\n         *\r\n         * @type {CanvasRenderingContext2D}\r\n         */\r\n        this.waveCtx = null;\r\n        /**\r\n         * The (optional) progress wave node\r\n         *\r\n         * @type {HTMLCanvasElement}\r\n         */\r\n        this.progress = null;\r\n        /**\r\n         * The (optional) progress wave canvas rendering context\r\n         *\r\n         * @type {CanvasRenderingContext2D}\r\n         */\r\n        this.progressCtx = null;\r\n        /**\r\n         * Start of the area the canvas should render, between 0 and 1\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.start = 0;\r\n        /**\r\n         * End of the area the canvas should render, between 0 and 1\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.end = 1;\r\n        /**\r\n         * Unique identifier for this entry\r\n         *\r\n         * @type {string}\r\n         */\r\n        this.id = getId(\r\n            typeof this.constructor.name !== 'undefined'\r\n                ? this.constructor.name.toLowerCase() + '_'\r\n                : 'canvasentry_'\r\n        );\r\n        /**\r\n         * Canvas 2d context attributes\r\n         *\r\n         * @type {object}\r\n         */\r\n        this.canvasContextAttributes = {};\r\n    }\r\n\r\n    /**\r\n     * Store the wave canvas element and create the 2D rendering context\r\n     *\r\n     * @param {HTMLCanvasElement} element The wave `canvas` element.\r\n     */\r\n    initWave(element) {\r\n        this.wave = element;\r\n        this.waveCtx = this.wave.getContext('2d', this.canvasContextAttributes);\r\n    }\r\n\r\n    /**\r\n     * Store the progress wave canvas element and create the 2D rendering\r\n     * context\r\n     *\r\n     * @param {HTMLCanvasElement} element The progress wave `canvas` element.\r\n     */\r\n    initProgress(element) {\r\n        this.progress = element;\r\n        this.progressCtx = this.progress.getContext(\r\n            '2d',\r\n            this.canvasContextAttributes\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Update the dimensions\r\n     *\r\n     * @param {number} elementWidth Width of the entry\r\n     * @param {number} totalWidth Total width of the multi canvas renderer\r\n     * @param {number} width The new width of the element\r\n     * @param {number} height The new height of the element\r\n     */\r\n    updateDimensions(elementWidth, totalWidth, width, height) {\r\n        // where the canvas starts and ends in the waveform, represented as a\r\n        // decimal between 0 and 1\r\n        this.start = this.wave.offsetLeft / totalWidth || 0;\r\n        this.end = this.start + elementWidth / totalWidth;\r\n\r\n        // set wave canvas dimensions\r\n        this.wave.width = width;\r\n        this.wave.height = height;\r\n        let elementSize = { width: elementWidth + 'px' };\r\n        style(this.wave, elementSize);\r\n\r\n        if (this.hasProgressCanvas) {\r\n            // set progress canvas dimensions\r\n            this.progress.width = width;\r\n            this.progress.height = height;\r\n            style(this.progress, elementSize);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clear the wave and progress rendering contexts\r\n     */\r\n    clearWave() {\r\n        // wave\r\n        this.waveCtx.clearRect(\r\n            0,\r\n            0,\r\n            this.waveCtx.canvas.width,\r\n            this.waveCtx.canvas.height\r\n        );\r\n\r\n        // progress\r\n        if (this.hasProgressCanvas) {\r\n            this.progressCtx.clearRect(\r\n                0,\r\n                0,\r\n                this.progressCtx.canvas.width,\r\n                this.progressCtx.canvas.height\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set the fill styles for wave and progress\r\n     * @param {string|string[]} waveColor Fill color for the wave canvas,\r\n     * or an array of colors to apply as a gradient\r\n     * @param {?string|string[]} progressColor Fill color for the progress canvas,\r\n     * or an array of colors to apply as a gradient\r\n     */\r\n    setFillStyles(waveColor, progressColor) {\r\n        this.waveCtx.fillStyle = this.getFillStyle(this.waveCtx, waveColor);\r\n\r\n        if (this.hasProgressCanvas) {\r\n            this.progressCtx.fillStyle = this.getFillStyle(this.progressCtx, progressColor);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Utility function to handle wave color arguments\r\n     *\r\n     * When the color argument type is a string or CanvasGradient instance,\r\n     * it will be returned as is. Otherwise, it will be treated as an array,\r\n     * and a new CanvasGradient will be returned\r\n     *\r\n     * @since 6.0.0\r\n     * @param {CanvasRenderingContext2D} ctx Rendering context of target canvas\r\n     * @param {string|string[]|CanvasGradient} color Either a single fill color\r\n     *     for the wave canvas, an existing CanvasGradient instance, or an array\r\n     *     of colors to apply as a gradient\r\n     * @returns {string|CanvasGradient} Returns a string fillstyle value, or a\r\n     *     canvas gradient\r\n     */\r\n    getFillStyle(ctx, color) {\r\n        if (typeof color == 'string' || color instanceof CanvasGradient) {\r\n            return color;\r\n        }\r\n\r\n        const waveGradient = ctx.createLinearGradient(0, 0, 0, ctx.canvas.height);\r\n        color.forEach((value, index) => waveGradient.addColorStop((index / color.length), value));\r\n\r\n        return waveGradient;\r\n    }\r\n\r\n    /**\r\n     * Set the canvas transforms for wave and progress\r\n     *\r\n     * @param {boolean} vertical Whether to render vertically\r\n     */\r\n    applyCanvasTransforms(vertical) {\r\n        if (vertical) {\r\n            // Reflect the waveform across the line y = -x\r\n            this.waveCtx.setTransform(0, 1, 1, 0, 0, 0);\r\n\r\n            if (this.hasProgressCanvas) {\r\n                this.progressCtx.setTransform(0, 1, 1, 0, 0, 0);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Draw a rectangle for wave and progress\r\n     *\r\n     * @param {number} x X start position\r\n     * @param {number} y Y start position\r\n     * @param {number} width Width of the rectangle\r\n     * @param {number} height Height of the rectangle\r\n     * @param {number} radius Radius of the rectangle\r\n     */\r\n    fillRects(x, y, width, height, radius) {\r\n        this.fillRectToContext(this.waveCtx, x, y, width, height, radius);\r\n\r\n        if (this.hasProgressCanvas) {\r\n            this.fillRectToContext(\r\n                this.progressCtx,\r\n                x,\r\n                y,\r\n                width,\r\n                height,\r\n                radius\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Draw the actual rectangle on a `canvas` element\r\n     *\r\n     * @param {CanvasRenderingContext2D} ctx Rendering context of target canvas\r\n     * @param {number} x X start position\r\n     * @param {number} y Y start position\r\n     * @param {number} width Width of the rectangle\r\n     * @param {number} height Height of the rectangle\r\n     * @param {number} radius Radius of the rectangle\r\n     */\r\n    fillRectToContext(ctx, x, y, width, height, radius) {\r\n        if (!ctx) {\r\n            return;\r\n        }\r\n\r\n        if (radius) {\r\n            this.drawRoundedRect(ctx, x, y, width, height, radius);\r\n        } else {\r\n            ctx.fillRect(x, y, width, height);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Draw a rounded rectangle on Canvas\r\n     *\r\n     * @param {CanvasRenderingContext2D} ctx Canvas context\r\n     * @param {number} x X-position of the rectangle\r\n     * @param {number} y Y-position of the rectangle\r\n     * @param {number} width Width of the rectangle\r\n     * @param {number} height Height of the rectangle\r\n     * @param {number} radius Radius of the rectangle\r\n     *\r\n     * @return {void}\r\n     * @example drawRoundedRect(ctx, 50, 50, 5, 10, 3)\r\n     */\r\n    drawRoundedRect(ctx, x, y, width, height, radius) {\r\n        if (height === 0) {\r\n            return;\r\n        }\r\n        // peaks are float values from -1 to 1. Use absolute height values in\r\n        // order to correctly calculate rounded rectangle coordinates\r\n        if (height < 0) {\r\n            height *= -1;\r\n            y -= height;\r\n        }\r\n        ctx.beginPath();\r\n        ctx.moveTo(x + radius, y);\r\n        ctx.lineTo(x + width - radius, y);\r\n        ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n        ctx.lineTo(x + width, y + height - radius);\r\n        ctx.quadraticCurveTo(\r\n            x + width,\r\n            y + height,\r\n            x + width - radius,\r\n            y + height\r\n        );\r\n        ctx.lineTo(x + radius, y + height);\r\n        ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n        ctx.lineTo(x, y + radius);\r\n        ctx.quadraticCurveTo(x, y, x + radius, y);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n\r\n    /**\r\n     * Render the actual wave and progress lines\r\n     *\r\n     * @param {number[]} peaks Array with peaks data\r\n     * @param {number} absmax Maximum peak value (absolute)\r\n     * @param {number} halfH Half the height of the waveform\r\n     * @param {number} offsetY Offset to the top\r\n     * @param {number} start The x-offset of the beginning of the area that\r\n     * should be rendered\r\n     * @param {number} end The x-offset of the end of the area that\r\n     * should be rendered\r\n     */\r\n    drawLines(peaks, absmax, halfH, offsetY, start, end) {\r\n        this.drawLineToContext(\r\n            this.waveCtx,\r\n            peaks,\r\n            absmax,\r\n            halfH,\r\n            offsetY,\r\n            start,\r\n            end\r\n        );\r\n\r\n        if (this.hasProgressCanvas) {\r\n            this.drawLineToContext(\r\n                this.progressCtx,\r\n                peaks,\r\n                absmax,\r\n                halfH,\r\n                offsetY,\r\n                start,\r\n                end\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Render the actual waveform line on a `canvas` element\r\n     *\r\n     * @param {CanvasRenderingContext2D} ctx Rendering context of target canvas\r\n     * @param {number[]} peaks Array with peaks data\r\n     * @param {number} absmax Maximum peak value (absolute)\r\n     * @param {number} halfH Half the height of the waveform\r\n     * @param {number} offsetY Offset to the top\r\n     * @param {number} start The x-offset of the beginning of the area that\r\n     * should be rendered\r\n     * @param {number} end The x-offset of the end of the area that\r\n     * should be rendered\r\n     */\r\n    drawLineToContext(ctx, peaks, absmax, halfH, offsetY, start, end) {\r\n        if (!ctx) {\r\n            return;\r\n        }\r\n\r\n        const length = peaks.length / 2;\r\n        const first = Math.round(length * this.start);\r\n\r\n        // use one more peak value to make sure we join peaks at ends -- unless,\r\n        // of course, this is the last canvas\r\n        const last = Math.round(length * this.end) + 1;\r\n\r\n        const canvasStart = first;\r\n        const canvasEnd = last;\r\n        const scale = this.wave.width / (canvasEnd - canvasStart - 1);\r\n\r\n        // optimization\r\n        const halfOffset = halfH + offsetY;\r\n        const absmaxHalf = absmax / halfH;\r\n\r\n        ctx.beginPath();\r\n        ctx.moveTo((canvasStart - first) * scale, halfOffset);\r\n\r\n        ctx.lineTo(\r\n            (canvasStart - first) * scale,\r\n            halfOffset - Math.round((peaks[2 * canvasStart] || 0) / absmaxHalf)\r\n        );\r\n\r\n        let i, peak, h;\r\n        for (i = canvasStart; i < canvasEnd; i++) {\r\n            peak = peaks[2 * i] || 0;\r\n            h = Math.round(peak / absmaxHalf);\r\n            ctx.lineTo((i - first) * scale + this.halfPixel, halfOffset - h);\r\n        }\r\n\r\n        // draw the bottom edge going backwards, to make a single\r\n        // closed hull to fill\r\n        let j = canvasEnd - 1;\r\n        for (j; j >= canvasStart; j--) {\r\n            peak = peaks[2 * j + 1] || 0;\r\n            h = Math.round(peak / absmaxHalf);\r\n            ctx.lineTo((j - first) * scale + this.halfPixel, halfOffset - h);\r\n        }\r\n\r\n        ctx.lineTo(\r\n            (canvasStart - first) * scale,\r\n            halfOffset -\r\n            Math.round((peaks[2 * canvasStart + 1] || 0) / absmaxHalf)\r\n        );\r\n\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n\r\n    /**\r\n     * Destroys this entry\r\n     */\r\n    destroy() {\r\n        this.waveCtx = null;\r\n        this.wave = null;\r\n\r\n        this.progressCtx = null;\r\n        this.progress = null;\r\n    }\r\n\r\n    /**\r\n     * Return image data of the wave `canvas` element\r\n     *\r\n     * When using a `type` of `'blob'`, this will return a `Promise` that\r\n     * resolves with a `Blob` instance.\r\n     *\r\n     * @param {string} format='image/png' An optional value of a format type.\r\n     * @param {number} quality=0.92 An optional value between 0 and 1.\r\n     * @param {string} type='dataURL' Either 'dataURL' or 'blob'.\r\n     * @return {string|Promise} When using the default `'dataURL'` `type` this\r\n     * returns a data URL. When using the `'blob'` `type` this returns a\r\n     * `Promise` that resolves with a `Blob` instance.\r\n     */\r\n    getImage(format, quality, type) {\r\n        if (type === 'blob') {\r\n            return new Promise(resolve => {\r\n                this.wave.toBlob(resolve, format, quality);\r\n            });\r\n        } else if (type === 'dataURL') {\r\n            return this.wave.toDataURL(format, quality);\r\n        }\r\n    }\r\n}\r\n","import * as util from './util';\r\n\r\n/**\r\n * Parent class for renderers\r\n *\r\n * @extends {Observer}\r\n */\r\nexport default class Drawer extends util.Observer {\r\n    /**\r\n     * @param {HTMLElement} container The container node of the wavesurfer instance\r\n     * @param {WavesurferParams} params The wavesurfer initialisation options\r\n     */\r\n    constructor(container, params) {\r\n        super();\r\n\r\n        this.container = util.withOrientation(container, params.vertical);\r\n        /**\r\n         * @type {WavesurferParams}\r\n         */\r\n        this.params = params;\r\n        /**\r\n         * The width of the renderer\r\n         * @type {number}\r\n         */\r\n        this.width = 0;\r\n        /**\r\n         * The height of the renderer\r\n         * @type {number}\r\n         */\r\n        this.height = params.height * this.params.pixelRatio;\r\n\r\n        this.lastPos = 0;\r\n        /**\r\n         * The `<wave>` element which is added to the container\r\n         * @type {HTMLElement}\r\n         */\r\n        this.wrapper = null;\r\n    }\r\n\r\n    /**\r\n     * Alias of `util.style`\r\n     *\r\n     * @param {HTMLElement} el The element that the styles will be applied to\r\n     * @param {Object} styles The map of propName: attribute, both are used as-is\r\n     * @return {HTMLElement} el\r\n     */\r\n    style(el, styles) {\r\n        return util.style(el, styles);\r\n    }\r\n\r\n    /**\r\n     * Create the wrapper `<wave>` element, style it and set up the events for\r\n     * interaction\r\n     */\r\n    createWrapper() {\r\n        this.wrapper = util.withOrientation(\r\n            this.container.appendChild(document.createElement('wave')),\r\n            this.params.vertical\r\n        );\r\n\r\n        this.style(this.wrapper, {\r\n            display: 'block',\r\n            position: 'relative',\r\n            userSelect: 'none',\r\n            webkitUserSelect: 'none',\r\n            height: this.params.height + 'px'\r\n        });\r\n\r\n        if (this.params.fillParent || this.params.scrollParent) {\r\n            this.style(this.wrapper, {\r\n                width: '100%',\r\n                cursor: this.params.hideCursor ? 'none' : 'auto',\r\n                overflowX: this.params.hideScrollbar ? 'hidden' : 'auto',\r\n                overflowY: 'hidden'\r\n            });\r\n        }\r\n\r\n        this.setupWrapperEvents();\r\n    }\r\n\r\n    /**\r\n     * Handle click event\r\n     *\r\n     * @param {Event} e Click event\r\n     * @param {?boolean} noPrevent Set to true to not call `e.preventDefault()`\r\n     * @return {number} Playback position from 0 to 1\r\n     */\r\n    handleEvent(e, noPrevent) {\r\n        !noPrevent && e.preventDefault();\r\n\r\n        const clientX = util.withOrientation(\r\n            e.targetTouches ? e.targetTouches[0] : e,\r\n            this.params.vertical\r\n        ).clientX;\r\n        const bbox = this.wrapper.getBoundingClientRect();\r\n\r\n        const nominalWidth = this.width;\r\n        const parentWidth = this.getWidth();\r\n        const progressPixels = this.getProgressPixels(bbox, clientX);\r\n\r\n        let progress;\r\n        if (!this.params.fillParent && nominalWidth < parentWidth) {\r\n            progress = progressPixels *\r\n                (this.params.pixelRatio / nominalWidth) || 0;\r\n        } else {\r\n            progress = (progressPixels + this.wrapper.scrollLeft) /\r\n                this.wrapper.scrollWidth || 0;\r\n        }\r\n\r\n        return util.clamp(progress, 0, 1);\r\n    }\r\n\r\n    getProgressPixels(wrapperBbox, clientX) {\r\n        if (this.params.rtl) {\r\n            return wrapperBbox.right - clientX;\r\n        } else {\r\n            return clientX - wrapperBbox.left;\r\n        }\r\n    }\r\n\r\n    setupWrapperEvents() {\r\n        this.wrapper.addEventListener('click', e => {\r\n            const orientedEvent = util.withOrientation(e, this.params.vertical);\r\n            const scrollbarHeight = this.wrapper.offsetHeight -\r\n                  this.wrapper.clientHeight;\r\n\r\n            if (scrollbarHeight !== 0) {\r\n                // scrollbar is visible.  Check if click was on it\r\n                const bbox = this.wrapper.getBoundingClientRect();\r\n                if (orientedEvent.clientY >= bbox.bottom - scrollbarHeight) {\r\n                    // ignore mousedown as it was on the scrollbar\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (this.params.interact) {\r\n                this.fireEvent('click', e, this.handleEvent(e));\r\n            }\r\n        });\r\n\r\n        this.wrapper.addEventListener('dblclick', e => {\r\n            if (this.params.interact) {\r\n                this.fireEvent('dblclick', e, this.handleEvent(e));\r\n            }\r\n        });\r\n\r\n        this.wrapper.addEventListener('scroll', e =>\r\n            this.fireEvent('scroll', e)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Draw peaks on the canvas\r\n     *\r\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\r\n     * for split channel rendering\r\n     * @param {number} length The width of the area that should be drawn\r\n     * @param {number} start The x-offset of the beginning of the area that\r\n     * should be rendered\r\n     * @param {number} end The x-offset of the end of the area that should be\r\n     * rendered\r\n     */\r\n    drawPeaks(peaks, length, start, end) {\r\n        if (!this.setWidth(length)) {\r\n            this.clearWave();\r\n        }\r\n\r\n        this.params.barWidth\r\n            ? this.drawBars(peaks, 0, start, end)\r\n            : this.drawWave(peaks, 0, start, end);\r\n    }\r\n\r\n    /**\r\n     * Scroll to the beginning\r\n     */\r\n    resetScroll() {\r\n        if (this.wrapper !== null) {\r\n            this.wrapper.scrollLeft = 0;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Recenter the view-port at a certain percent of the waveform\r\n     *\r\n     * @param {number} percent Value from 0 to 1 on the waveform\r\n     */\r\n    recenter(percent) {\r\n        const position = this.wrapper.scrollWidth * percent;\r\n        this.recenterOnPosition(position, true);\r\n    }\r\n\r\n    /**\r\n     * Recenter the view-port on a position, either scroll there immediately or\r\n     * in steps of 5 pixels\r\n     *\r\n     * @param {number} position X-offset in pixels\r\n     * @param {boolean} immediate Set to true to immediately scroll somewhere\r\n     */\r\n    recenterOnPosition(position, immediate) {\r\n        const scrollLeft = this.wrapper.scrollLeft;\r\n        const half = ~~(this.wrapper.clientWidth / 2);\r\n        const maxScroll = this.wrapper.scrollWidth - this.wrapper.clientWidth;\r\n        let target = position - half;\r\n        let offset = target - scrollLeft;\r\n\r\n        if (maxScroll == 0) {\r\n            // no need to continue if scrollbar is not there\r\n            return;\r\n        }\r\n\r\n        // if the cursor is currently visible...\r\n        if (!immediate && -half <= offset && offset < half) {\r\n            // set rate at which waveform is centered\r\n            let rate = this.params.autoCenterRate;\r\n\r\n            // make rate depend on width of view and length of waveform\r\n            rate /= half;\r\n            rate *= maxScroll;\r\n\r\n            offset = Math.max(-rate, Math.min(rate, offset));\r\n            target = scrollLeft + offset;\r\n        }\r\n\r\n        // limit target to valid range (0 to maxScroll)\r\n        target = Math.max(0, Math.min(maxScroll, target));\r\n        // no use attempting to scroll if we're not moving\r\n        if (target != scrollLeft) {\r\n            this.wrapper.scrollLeft = target;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the current scroll position in pixels\r\n     *\r\n     * @return {number} Horizontal scroll position in pixels\r\n     */\r\n    getScrollX() {\r\n        let x = 0;\r\n        if (this.wrapper) {\r\n            const pixelRatio = this.params.pixelRatio;\r\n            x = Math.round(this.wrapper.scrollLeft * pixelRatio);\r\n\r\n            // In cases of elastic scroll (safari with mouse wheel) you can\r\n            // scroll beyond the limits of the container\r\n            // Calculate and floor the scrollable extent to make sure an out\r\n            // of bounds value is not returned\r\n            // Ticket #1312\r\n            if (this.params.scrollParent) {\r\n                const maxScroll = ~~(\r\n                    this.wrapper.scrollWidth * pixelRatio -\r\n                    this.getWidth()\r\n                );\r\n                x = Math.min(maxScroll, Math.max(0, x));\r\n            }\r\n        }\r\n        return x;\r\n    }\r\n\r\n    /**\r\n     * Get the width of the container\r\n     *\r\n     * @return {number} The width of the container\r\n     */\r\n    getWidth() {\r\n        return Math.round(this.container.clientWidth * this.params.pixelRatio);\r\n    }\r\n\r\n    /**\r\n     * Set the width of the container\r\n     *\r\n     * @param {number} width The new width of the container\r\n     * @return {boolean} Whether the width of the container was updated or not\r\n     */\r\n    setWidth(width) {\r\n        if (this.width == width) {\r\n            return false;\r\n        }\r\n\r\n        this.width = width;\r\n\r\n        if (this.params.fillParent || this.params.scrollParent) {\r\n            this.style(this.wrapper, {\r\n                width: ''\r\n            });\r\n        } else {\r\n            const newWidth = ~~(this.width / this.params.pixelRatio) + 'px';\r\n            this.style(this.wrapper, {\r\n                width: newWidth\r\n            });\r\n        }\r\n\r\n        this.updateSize();\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Set the height of the container\r\n     *\r\n     * @param {number} height The new height of the container.\r\n     * @return {boolean} Whether the height of the container was updated or not\r\n     */\r\n    setHeight(height) {\r\n        if (height == this.height) {\r\n            return false;\r\n        }\r\n        this.height = height;\r\n\r\n        this.style(this.wrapper, {\r\n            height: ~~(this.height / this.params.pixelRatio) + 'px'\r\n        });\r\n\r\n        this.updateSize();\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Called by wavesurfer when progress should be rendered\r\n     *\r\n     * @param {number} progress From 0 to 1\r\n     */\r\n    progress(progress) {\r\n        const minPxDelta = 1 / this.params.pixelRatio;\r\n        const pos = Math.round(progress * this.width) * minPxDelta;\r\n\r\n        if (pos < this.lastPos || pos - this.lastPos >= minPxDelta) {\r\n            this.lastPos = pos;\r\n\r\n            if (this.params.scrollParent && this.params.autoCenter) {\r\n                const newPos = ~~(this.wrapper.scrollWidth * progress);\r\n                this.recenterOnPosition(\r\n                    newPos,\r\n                    this.params.autoCenterImmediately\r\n                );\r\n            }\r\n\r\n            this.updateProgress(pos);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This is called when wavesurfer is destroyed\r\n     */\r\n    destroy() {\r\n        this.unAll();\r\n        if (this.wrapper) {\r\n            if (this.wrapper.parentNode == this.container.domElement) {\r\n                this.container.removeChild(this.wrapper.domElement);\r\n            }\r\n            this.wrapper = null;\r\n        }\r\n    }\r\n\r\n    /* Renderer-specific methods */\r\n\r\n    /**\r\n     * Called after cursor related params have changed.\r\n     *\r\n     * @abstract\r\n     */\r\n    updateCursor() {}\r\n\r\n    /**\r\n     * Called when the size of the container changes so the renderer can adjust\r\n     *\r\n     * @abstract\r\n     */\r\n    updateSize() {}\r\n\r\n    /**\r\n     * Draw a waveform with bars\r\n     *\r\n     * @abstract\r\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for split channel\r\n     * rendering\r\n     * @param {number} channelIndex The index of the current channel. Normally\r\n     * should be 0\r\n     * @param {number} start The x-offset of the beginning of the area that\r\n     * should be rendered\r\n     * @param {number} end The x-offset of the end of the area that should be\r\n     * rendered\r\n     */\r\n    drawBars(peaks, channelIndex, start, end) {}\r\n\r\n    /**\r\n     * Draw a waveform\r\n     *\r\n     * @abstract\r\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for split channel\r\n     * rendering\r\n     * @param {number} channelIndex The index of the current channel. Normally\r\n     * should be 0\r\n     * @param {number} start The x-offset of the beginning of the area that\r\n     * should be rendered\r\n     * @param {number} end The x-offset of the end of the area that should be\r\n     * rendered\r\n     */\r\n    drawWave(peaks, channelIndex, start, end) {}\r\n\r\n    /**\r\n     * Clear the waveform\r\n     *\r\n     * @abstract\r\n     */\r\n    clearWave() {}\r\n\r\n    /**\r\n     * Render the new progress\r\n     *\r\n     * @abstract\r\n     * @param {number} position X-Offset of progress position in pixels\r\n     */\r\n    updateProgress(position) {}\r\n}\r\n","import Drawer from './drawer';\r\nimport * as util from './util';\r\nimport CanvasEntry from './drawer.canvasentry';\r\n\r\n/**\r\n * MultiCanvas renderer for wavesurfer. Is currently the default and sole\r\n * builtin renderer.\r\n *\r\n * A `MultiCanvas` consists of one or more `CanvasEntry` instances, depending\r\n * on the zoom level.\r\n */\r\nexport default class MultiCanvas extends Drawer {\r\n    /**\r\n     * @param {HTMLElement} container The container node of the wavesurfer instance\r\n     * @param {WavesurferParams} params The wavesurfer initialisation options\r\n     */\r\n    constructor(container, params) {\r\n        super(container, params);\r\n\r\n        /**\r\n         * @type {number}\r\n         */\r\n        this.maxCanvasWidth = params.maxCanvasWidth;\r\n\r\n        /**\r\n         * @type {number}\r\n         */\r\n        this.maxCanvasElementWidth = Math.round(\r\n            params.maxCanvasWidth / params.pixelRatio\r\n        );\r\n\r\n        /**\r\n         * Whether or not the progress wave is rendered. If the `waveColor`\r\n         * and `progressColor` are the same color it is not.\r\n         *\r\n         * @type {boolean}\r\n         */\r\n        this.hasProgressCanvas = params.waveColor != params.progressColor;\r\n\r\n        /**\r\n         * @type {number}\r\n         */\r\n        this.halfPixel = 0.5 / params.pixelRatio;\r\n\r\n        /**\r\n         * List of `CanvasEntry` instances.\r\n         *\r\n         * @type {Array}\r\n         */\r\n        this.canvases = [];\r\n\r\n        /**\r\n         * @type {HTMLElement}\r\n         */\r\n        this.progressWave = null;\r\n\r\n        /**\r\n         * Class used to generate entries.\r\n         *\r\n         * @type {function}\r\n         */\r\n        this.EntryClass = CanvasEntry;\r\n\r\n        /**\r\n         * Canvas 2d context attributes.\r\n         *\r\n         * @type {object}\r\n         */\r\n        this.canvasContextAttributes = params.drawingContextAttributes;\r\n\r\n        /**\r\n         * Overlap added between entries to prevent vertical white stripes\r\n         * between `canvas` elements.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.overlap = 2 * Math.ceil(params.pixelRatio / 2);\r\n\r\n        /**\r\n         * The radius of the wave bars. Makes bars rounded\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.barRadius = params.barRadius || 0;\r\n\r\n        /**\r\n         * Whether to render the waveform vertically. Defaults to false.\r\n         *\r\n         * @type {boolean}\r\n         */\r\n        this.vertical = params.vertical;\r\n    }\r\n\r\n    /**\r\n     * Initialize the drawer\r\n     */\r\n    init() {\r\n        this.createWrapper();\r\n        this.createElements();\r\n    }\r\n\r\n    /**\r\n     * Create the canvas elements and style them\r\n     *\r\n     */\r\n    createElements() {\r\n        this.progressWave = util.withOrientation(\r\n            this.wrapper.appendChild(document.createElement('wave')),\r\n            this.params.vertical\r\n        );\r\n        this.style(this.progressWave, {\r\n            position: 'absolute',\r\n            zIndex: 3,\r\n            left: 0,\r\n            top: 0,\r\n            bottom: 0,\r\n            overflow: 'hidden',\r\n            width: '0',\r\n            display: 'none',\r\n            boxSizing: 'border-box',\r\n            borderRightStyle: 'solid',\r\n            pointerEvents: 'none'\r\n        });\r\n\r\n        this.addCanvas();\r\n        this.updateCursor();\r\n    }\r\n\r\n    /**\r\n     * Update cursor style\r\n     */\r\n    updateCursor() {\r\n        this.style(this.progressWave, {\r\n            borderRightWidth: this.params.cursorWidth + 'px',\r\n            borderRightColor: this.params.cursorColor\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Adjust to the updated size by adding or removing canvases\r\n     */\r\n    updateSize() {\r\n        const totalWidth = Math.round(this.width / this.params.pixelRatio);\r\n        const requiredCanvases = Math.ceil(\r\n            totalWidth / (this.maxCanvasElementWidth + this.overlap)\r\n        );\r\n\r\n        // add required canvases\r\n        while (this.canvases.length < requiredCanvases) {\r\n            this.addCanvas();\r\n        }\r\n\r\n        // remove older existing canvases, if any\r\n        while (this.canvases.length > requiredCanvases) {\r\n            this.removeCanvas();\r\n        }\r\n\r\n        let canvasWidth = this.maxCanvasWidth + this.overlap;\r\n        const lastCanvas = this.canvases.length - 1;\r\n        this.canvases.forEach((entry, i) => {\r\n            if (i == lastCanvas) {\r\n                canvasWidth = this.width - this.maxCanvasWidth * lastCanvas;\r\n            }\r\n            this.updateDimensions(entry, canvasWidth, this.height);\r\n\r\n            entry.clearWave();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Add a canvas to the canvas list\r\n     *\r\n     */\r\n    addCanvas() {\r\n        const entry = new this.EntryClass();\r\n        entry.canvasContextAttributes = this.canvasContextAttributes;\r\n        entry.hasProgressCanvas = this.hasProgressCanvas;\r\n        entry.halfPixel = this.halfPixel;\r\n        const leftOffset = this.maxCanvasElementWidth * this.canvases.length;\r\n\r\n        // wave\r\n        let wave = util.withOrientation(\r\n            this.wrapper.appendChild(document.createElement('canvas')),\r\n            this.params.vertical\r\n        );\r\n        this.style(wave, {\r\n            position: 'absolute',\r\n            zIndex: 2,\r\n            left: leftOffset + 'px',\r\n            top: 0,\r\n            bottom: 0,\r\n            height: '100%',\r\n            pointerEvents: 'none'\r\n        });\r\n        entry.initWave(wave);\r\n\r\n        // progress\r\n        if (this.hasProgressCanvas) {\r\n            let progress = util.withOrientation(\r\n                this.progressWave.appendChild(document.createElement('canvas')),\r\n                this.params.vertical\r\n            );\r\n            this.style(progress, {\r\n                position: 'absolute',\r\n                left: leftOffset + 'px',\r\n                top: 0,\r\n                bottom: 0,\r\n                height: '100%'\r\n            });\r\n            entry.initProgress(progress);\r\n        }\r\n\r\n        this.canvases.push(entry);\r\n    }\r\n\r\n    /**\r\n     * Pop single canvas from the list\r\n     *\r\n     */\r\n    removeCanvas() {\r\n        let lastEntry = this.canvases[this.canvases.length - 1];\r\n\r\n        // wave\r\n        lastEntry.wave.parentElement.removeChild(lastEntry.wave.domElement);\r\n\r\n        // progress\r\n        if (this.hasProgressCanvas) {\r\n            lastEntry.progress.parentElement.removeChild(lastEntry.progress.domElement);\r\n        }\r\n\r\n        // cleanup\r\n        if (lastEntry) {\r\n            lastEntry.destroy();\r\n            lastEntry = null;\r\n        }\r\n\r\n        this.canvases.pop();\r\n    }\r\n\r\n    /**\r\n     * Update the dimensions of a canvas element\r\n     *\r\n     * @param {CanvasEntry} entry Target entry\r\n     * @param {number} width The new width of the element\r\n     * @param {number} height The new height of the element\r\n     */\r\n    updateDimensions(entry, width, height) {\r\n        const elementWidth = Math.round(width / this.params.pixelRatio);\r\n        const totalWidth = Math.round(this.width / this.params.pixelRatio);\r\n\r\n        // update canvas dimensions\r\n        entry.updateDimensions(elementWidth, totalWidth, width, height);\r\n\r\n        // style element\r\n        this.style(this.progressWave, { display: 'block' });\r\n    }\r\n\r\n    /**\r\n     * Clear the whole multi-canvas\r\n     */\r\n    clearWave() {\r\n        util.frame(() => {\r\n            this.canvases.forEach(entry => entry.clearWave());\r\n        })();\r\n    }\r\n\r\n    /**\r\n     * Draw a waveform with bars\r\n     *\r\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\r\n     * for split channel rendering\r\n     * @param {number} channelIndex The index of the current channel. Normally\r\n     * should be 0. Must be an integer.\r\n     * @param {number} start The x-offset of the beginning of the area that\r\n     * should be rendered\r\n     * @param {number} end The x-offset of the end of the area that should be\r\n     * rendered\r\n     * @returns {void}\r\n     */\r\n    drawBars(peaks, channelIndex, start, end) {\r\n        return this.prepareDraw(\r\n            peaks,\r\n            channelIndex,\r\n            start,\r\n            end,\r\n            ({ absmax, hasMinVals, height, offsetY, halfH, peaks, channelIndex: ch }) => {\r\n                // if drawBars was called within ws.empty we don't pass a start and\r\n                // don't want anything to happen\r\n                if (start === undefined) {\r\n                    return;\r\n                }\r\n                // Skip every other value if there are negatives.\r\n                const peakIndexScale = hasMinVals ? 2 : 1;\r\n                const length = peaks.length / peakIndexScale;\r\n                const bar = this.params.barWidth * this.params.pixelRatio;\r\n                const gap =\r\n                    this.params.barGap === null\r\n                        ? Math.max(this.params.pixelRatio, ~~(bar / 2))\r\n                        : Math.max(\r\n                            this.params.pixelRatio,\r\n                            this.params.barGap * this.params.pixelRatio\r\n                        );\r\n                const step = bar + gap;\r\n\r\n                const scale = length / this.width;\r\n                const first = start;\r\n                const last = end;\r\n                let peakIndex = first;\r\n                for (peakIndex; peakIndex < last; peakIndex += step) {\r\n\r\n                    // search for the highest peak in the range this bar falls into\r\n                    let peak = 0;\r\n                    let peakIndexRange = Math.floor(peakIndex * scale) * peakIndexScale; // start index\r\n                    const peakIndexEnd = Math.floor((peakIndex + step) * scale) * peakIndexScale;\r\n                    do { // do..while makes sure at least one peak is always evaluated\r\n                        const newPeak = Math.abs(peaks[peakIndexRange]); // for arrays starting with negative values\r\n                        if (newPeak > peak) {\r\n                            peak = newPeak; // higher\r\n                        }\r\n                        peakIndexRange += peakIndexScale; // skip every other value for negatives\r\n                    } while (peakIndexRange < peakIndexEnd);\r\n\r\n                    // calculate the height of this bar according to the highest peak found\r\n                    let h = Math.round((peak / absmax) * halfH);\r\n\r\n                    // in case of silences, allow the user to specify that we\r\n                    // always draw *something* (normally a 1px high bar)\r\n                    if (h == 0 && this.params.barMinHeight) {\r\n                        h = this.params.barMinHeight;\r\n                    }\r\n\r\n                    this.fillRect(\r\n                        peakIndex + this.halfPixel,\r\n                        halfH - h + offsetY,\r\n                        bar + this.halfPixel,\r\n                        h * 2,\r\n                        this.barRadius,\r\n                        ch\r\n                    );\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Draw a waveform\r\n     *\r\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\r\n     * for split channel rendering\r\n     * @param {number} channelIndex The index of the current channel. Normally\r\n     * should be 0\r\n     * @param {number?} start The x-offset of the beginning of the area that\r\n     * should be rendered (If this isn't set only a flat line is rendered)\r\n     * @param {number?} end The x-offset of the end of the area that should be\r\n     * rendered\r\n     * @returns {void}\r\n     */\r\n    drawWave(peaks, channelIndex, start, end) {\r\n        return this.prepareDraw(\r\n            peaks,\r\n            channelIndex,\r\n            start,\r\n            end,\r\n            ({ absmax, hasMinVals, height, offsetY, halfH, peaks, channelIndex }) => {\r\n                if (!hasMinVals) {\r\n                    const reflectedPeaks = [];\r\n                    const len = peaks.length;\r\n                    let i = 0;\r\n                    for (i; i < len; i++) {\r\n                        reflectedPeaks[2 * i] = peaks[i];\r\n                        reflectedPeaks[2 * i + 1] = -peaks[i];\r\n                    }\r\n                    peaks = reflectedPeaks;\r\n                }\r\n\r\n                // if drawWave was called within ws.empty we don't pass a start and\r\n                // end and simply want a flat line\r\n                if (start !== undefined) {\r\n                    this.drawLine(peaks, absmax, halfH, offsetY, start, end, channelIndex);\r\n                }\r\n\r\n                // always draw a median line\r\n                this.fillRect(\r\n                    0,\r\n                    halfH + offsetY - this.halfPixel,\r\n                    this.width,\r\n                    this.halfPixel,\r\n                    this.barRadius,\r\n                    channelIndex\r\n                );\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Tell the canvas entries to render their portion of the waveform\r\n     *\r\n     * @param {number[]} peaks Peaks data\r\n     * @param {number} absmax Maximum peak value (absolute)\r\n     * @param {number} halfH Half the height of the waveform\r\n     * @param {number} offsetY Offset to the top\r\n     * @param {number} start The x-offset of the beginning of the area that\r\n     * should be rendered\r\n     * @param {number} end The x-offset of the end of the area that\r\n     * should be rendered\r\n     * @param {channelIndex} channelIndex The channel index of the line drawn\r\n     */\r\n    drawLine(peaks, absmax, halfH, offsetY, start, end, channelIndex) {\r\n        const { waveColor, progressColor } = this.params.splitChannelsOptions.channelColors[channelIndex] || {};\r\n        this.canvases.forEach((entry, i) => {\r\n            this.setFillStyles(entry, waveColor, progressColor);\r\n            this.applyCanvasTransforms(entry, this.params.vertical);\r\n            entry.drawLines(peaks, absmax, halfH, offsetY, start, end);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Draw a rectangle on the multi-canvas\r\n     *\r\n     * @param {number} x X-position of the rectangle\r\n     * @param {number} y Y-position of the rectangle\r\n     * @param {number} width Width of the rectangle\r\n     * @param {number} height Height of the rectangle\r\n     * @param {number} radius Radius of the rectangle\r\n     * @param {channelIndex} channelIndex The channel index of the bar drawn\r\n     */\r\n    fillRect(x, y, width, height, radius, channelIndex) {\r\n        const startCanvas = Math.floor(x / this.maxCanvasWidth);\r\n        const endCanvas = Math.min(\r\n            Math.ceil((x + width) / this.maxCanvasWidth) + 1,\r\n            this.canvases.length\r\n        );\r\n        let i = startCanvas;\r\n        for (i; i < endCanvas; i++) {\r\n            const entry = this.canvases[i];\r\n            const leftOffset = i * this.maxCanvasWidth;\r\n\r\n            const intersection = {\r\n                x1: Math.max(x, i * this.maxCanvasWidth),\r\n                y1: y,\r\n                x2: Math.min(\r\n                    x + width,\r\n                    i * this.maxCanvasWidth + entry.wave.width\r\n                ),\r\n                y2: y + height\r\n            };\r\n\r\n            if (intersection.x1 < intersection.x2) {\r\n                const { waveColor, progressColor } = this.params.splitChannelsOptions.channelColors[channelIndex] || {};\r\n                this.setFillStyles(entry, waveColor, progressColor);\r\n                this.applyCanvasTransforms(entry, this.params.vertical);\r\n\r\n                entry.fillRects(\r\n                    intersection.x1 - leftOffset,\r\n                    intersection.y1,\r\n                    intersection.x2 - intersection.x1,\r\n                    intersection.y2 - intersection.y1,\r\n                    radius\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns whether to hide the channel from being drawn based on params.\r\n     *\r\n     * @param {number} channelIndex The index of the current channel.\r\n     * @returns {bool} True to hide the channel, false to draw.\r\n     */\r\n    hideChannel(channelIndex) {\r\n        return this.params.splitChannels && this.params.splitChannelsOptions.filterChannels.includes(channelIndex);\r\n    }\r\n\r\n    /**\r\n     * Performs preparation tasks and calculations which are shared by `drawBars`\r\n     * and `drawWave`\r\n     *\r\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for\r\n     * split channel rendering\r\n     * @param {number} channelIndex The index of the current channel. Normally\r\n     * should be 0\r\n     * @param {number?} start The x-offset of the beginning of the area that\r\n     * should be rendered. If this isn't set only a flat line is rendered\r\n     * @param {number?} end The x-offset of the end of the area that should be\r\n     * rendered\r\n     * @param {function} fn The render function to call, e.g. `drawWave`\r\n     * @param {number} drawIndex The index of the current channel after filtering.\r\n     * @param {number?} normalizedMax Maximum modulation value across channels for use with relativeNormalization. Ignored when undefined\r\n     * @returns {void}\r\n     */\r\n    prepareDraw(peaks, channelIndex, start, end, fn, drawIndex, normalizedMax) {\r\n        return util.frame(() => {\r\n            // Split channels and call this function with the channelIndex set\r\n            if (peaks[0] instanceof Array) {\r\n                const channels = peaks;\r\n\r\n                if (this.params.splitChannels) {\r\n                    const filteredChannels = channels.filter((c, i) => !this.hideChannel(i));\r\n                    if (!this.params.splitChannelsOptions.overlay) {\r\n                        this.setHeight(\r\n                            Math.max(filteredChannels.length, 1) *\r\n                                this.params.height *\r\n                                this.params.pixelRatio\r\n                        );\r\n                    }\r\n\r\n                    let overallAbsMax;\r\n                    if (this.params.splitChannelsOptions && this.params.splitChannelsOptions.relativeNormalization) {\r\n                        // calculate maximum peak across channels to use for normalization\r\n                        overallAbsMax = util.max(channels.map((channelPeaks => util.absMax(channelPeaks))));\r\n                    }\r\n\r\n\r\n                    return channels.forEach((channelPeaks, i) =>\r\n                        this.prepareDraw(channelPeaks, i, start, end, fn, filteredChannels.indexOf(channelPeaks), overallAbsMax)\r\n                    );\r\n                }\r\n                peaks = channels[0];\r\n            }\r\n\r\n            // Return and do not draw channel peaks if hidden.\r\n            if (this.hideChannel(channelIndex)) {\r\n                return;\r\n            }\r\n\r\n            // calculate maximum modulation value, either from the barHeight\r\n            // parameter or if normalize=true from the largest value in the peak\r\n            // set\r\n            let absmax = 1 / this.params.barHeight;\r\n            if (this.params.normalize) {\r\n                absmax = normalizedMax === undefined ? util.absMax(peaks) : normalizedMax;\r\n            }\r\n\r\n            // Bar wave draws the bottom only as a reflection of the top,\r\n            // so we don't need negative values\r\n            const hasMinVals = [].some.call(peaks, val => val < 0);\r\n            const height = this.params.height * this.params.pixelRatio;\r\n            const halfH = height / 2;\r\n\r\n            let offsetY = height * drawIndex || 0;\r\n\r\n            // Override offsetY if overlay is true\r\n            if (this.params.splitChannelsOptions && this.params.splitChannelsOptions.overlay) {\r\n                offsetY = 0;\r\n            }\r\n\r\n            return fn({\r\n                absmax: absmax,\r\n                hasMinVals: hasMinVals,\r\n                height: height,\r\n                offsetY: offsetY,\r\n                halfH: halfH,\r\n                peaks: peaks,\r\n                channelIndex: channelIndex\r\n            });\r\n        })();\r\n    }\r\n\r\n    /**\r\n     * Set the fill styles for a certain entry (wave and progress)\r\n     *\r\n     * @param {CanvasEntry} entry Target entry\r\n     * @param {string} waveColor Wave color to draw this entry\r\n     * @param {string} progressColor Progress color to draw this entry\r\n     */\r\n    setFillStyles(entry, waveColor = this.params.waveColor, progressColor = this.params.progressColor) {\r\n        entry.setFillStyles(waveColor, progressColor);\r\n    }\r\n\r\n    /**\r\n     * Set the canvas transforms for a certain entry (wave and progress)\r\n     *\r\n     * @param {CanvasEntry} entry Target entry\r\n     * @param {boolean} vertical Whether to render the waveform vertically\r\n     */\r\n    applyCanvasTransforms(entry, vertical = false) {\r\n        entry.applyCanvasTransforms(vertical);\r\n    }\r\n\r\n    /**\r\n     * Return image data of the multi-canvas\r\n     *\r\n     * When using a `type` of `'blob'`, this will return a `Promise`.\r\n     *\r\n     * @param {string} format='image/png' An optional value of a format type.\r\n     * @param {number} quality=0.92 An optional value between 0 and 1.\r\n     * @param {string} type='dataURL' Either 'dataURL' or 'blob'.\r\n     * @return {string|string[]|Promise} When using the default `'dataURL'`\r\n     * `type` this returns a single data URL or an array of data URLs,\r\n     * one for each canvas. When using the `'blob'` `type` this returns a\r\n     * `Promise` that resolves with an array of `Blob` instances, one for each\r\n     * canvas.\r\n     */\r\n    getImage(format, quality, type) {\r\n        if (type === 'blob') {\r\n            return Promise.all(\r\n                this.canvases.map(entry => {\r\n                    return entry.getImage(format, quality, type);\r\n                })\r\n            );\r\n        } else if (type === 'dataURL') {\r\n            let images = this.canvases.map(entry =>\r\n                entry.getImage(format, quality, type)\r\n            );\r\n            return images.length > 1 ? images : images[0];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Render the new progress\r\n     *\r\n     * @param {number} position X-offset of progress position in pixels\r\n     */\r\n    updateProgress(position) {\r\n        this.style(this.progressWave, { width: position + 'px' });\r\n    }\r\n}\r\n","import MediaElement from './mediaelement';\r\n\r\n/**\r\n * MediaElementWebAudio backend: load audio via an HTML5 audio tag, but playback with the WebAudio API.\r\n * The advantage here is that the html5 <audio> tag can perform range requests on the server and not\r\n * buffer the entire file in one request, and you still get the filtering and scripting functionality\r\n * of the webaudio API.\r\n * Note that in order to use range requests and prevent buffering, you must provide peak data.\r\n *\r\n * @since 3.2.0\r\n */\r\nexport default class MediaElementWebAudio extends MediaElement {\r\n    /**\r\n     * Construct the backend\r\n     *\r\n     * @param {WavesurferParams} params Wavesurfer parameters\r\n     */\r\n    constructor(params) {\r\n        super(params);\r\n        /** @private */\r\n        this.params = params;\r\n        /** @private */\r\n        this.sourceMediaElement = null;\r\n    }\r\n\r\n    /**\r\n     * Initialise the backend, called in `wavesurfer.createBackend()`\r\n     */\r\n    init() {\r\n        this.setPlaybackRate(this.params.audioRate);\r\n        this.createTimer();\r\n        this.createVolumeNode();\r\n        this.createScriptNode();\r\n        this.createAnalyserNode();\r\n    }\r\n    /**\r\n     * Private method called by both `load` (from url)\r\n     * and `loadElt` (existing media element) methods.\r\n     *\r\n     * @param {HTMLMediaElement} media HTML5 Audio or Video element\r\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\r\n     * @param {string} preload HTML 5 preload attribute value\r\n     * @private\r\n     */\r\n    _load(media, peaks, preload) {\r\n        super._load(media, peaks, preload);\r\n        this.createMediaElementSource(media);\r\n    }\r\n\r\n    /**\r\n     * Create MediaElementSource node\r\n     *\r\n     * @since 3.2.0\r\n     * @param {HTMLMediaElement} mediaElement HTML5 Audio to load\r\n     */\r\n    createMediaElementSource(mediaElement) {\r\n        this.sourceMediaElement = this.ac.createMediaElementSource(\r\n            mediaElement\r\n        );\r\n        this.sourceMediaElement.connect(this.analyser);\r\n    }\r\n\r\n    play(start, end) {\r\n        this.resumeAudioContext();\r\n        return super.play(start, end);\r\n    }\r\n\r\n    /**\r\n     * This is called when wavesurfer is destroyed\r\n     *\r\n     */\r\n    destroy() {\r\n        super.destroy();\r\n\r\n        this.destroyWebAudio();\r\n    }\r\n}\r\n","import WebAudio from './webaudio';\r\nimport * as util from './util';\r\n\r\n/**\r\n * MediaElement backend\r\n */\r\nexport default class MediaElement extends WebAudio {\r\n    /**\r\n     * Construct the backend\r\n     *\r\n     * @param {WavesurferParams} params Wavesurfer parameters\r\n     */\r\n    constructor(params) {\r\n        super(params);\r\n        /** @private */\r\n        this.params = params;\r\n\r\n        /**\r\n         * Initially a dummy media element to catch errors. Once `_load` is\r\n         * called, this will contain the actual `HTMLMediaElement`.\r\n         * @private\r\n         */\r\n        this.media = {\r\n            currentTime: 0,\r\n            duration: 0,\r\n            paused: true,\r\n            playbackRate: 1,\r\n            play() {},\r\n            pause() {},\r\n            volume: 0\r\n        };\r\n\r\n        /** @private */\r\n        this.mediaType = params.mediaType.toLowerCase();\r\n        /** @private */\r\n        this.elementPosition = params.elementPosition;\r\n        /** @private */\r\n        this.peaks = null;\r\n        /** @private */\r\n        this.playbackRate = 1;\r\n        /** @private */\r\n        this.volume = 1;\r\n        /** @private */\r\n        this.isMuted = false;\r\n        /** @private */\r\n        this.buffer = null;\r\n        /** @private */\r\n        this.onPlayEnd = null;\r\n        /** @private */\r\n        this.mediaListeners = {};\r\n    }\r\n\r\n    /**\r\n     * Initialise the backend, called in `wavesurfer.createBackend()`\r\n     */\r\n    init() {\r\n        this.setPlaybackRate(this.params.audioRate);\r\n        this.createTimer();\r\n    }\r\n\r\n    /**\r\n     * Attach event listeners to media element.\r\n     */\r\n    _setupMediaListeners() {\r\n        this.mediaListeners.error = () => {\r\n            this.fireEvent('error', 'Error loading media element');\r\n        };\r\n        this.mediaListeners.canplay = () => {\r\n            this.fireEvent('canplay');\r\n        };\r\n        this.mediaListeners.ended = () => {\r\n            this.fireEvent('finish');\r\n        };\r\n        // listen to and relay play, pause and seeked events to enable\r\n        // playback control from the external media element\r\n        this.mediaListeners.play = () => {\r\n            this.fireEvent('play');\r\n        };\r\n        this.mediaListeners.pause = () => {\r\n            this.fireEvent('pause');\r\n        };\r\n        this.mediaListeners.seeked = event => {\r\n            this.fireEvent('seek');\r\n        };\r\n        this.mediaListeners.volumechange = event => {\r\n            this.isMuted = this.media.muted;\r\n            if (this.isMuted) {\r\n                this.volume = 0;\r\n            } else {\r\n                this.volume = this.media.volume;\r\n            }\r\n            this.fireEvent('volume');\r\n        };\r\n\r\n        // reset event listeners\r\n        Object.keys(this.mediaListeners).forEach(id => {\r\n            this.media.removeEventListener(id, this.mediaListeners[id]);\r\n            this.media.addEventListener(id, this.mediaListeners[id]);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Create a timer to provide a more precise `audioprocess` event.\r\n     */\r\n    createTimer() {\r\n        const onAudioProcess = () => {\r\n            if (this.isPaused()) {\r\n                return;\r\n            }\r\n            this.fireEvent('audioprocess', this.getCurrentTime());\r\n\r\n            // Call again in the next frame\r\n            util.frame(onAudioProcess)();\r\n        };\r\n\r\n        this.on('play', onAudioProcess);\r\n\r\n        // Update the progress one more time to prevent it from being stuck in\r\n        // case of lower framerates\r\n        this.on('pause', () => {\r\n            this.fireEvent('audioprocess', this.getCurrentTime());\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Create media element with url as its source,\r\n     * and append to container element.\r\n     *\r\n     * @param {string} url Path to media file\r\n     * @param {HTMLElement} container HTML element\r\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\r\n     * @param {string} preload HTML 5 preload attribute value\r\n     * @throws Will throw an error if the `url` argument is not a valid media\r\n     * element.\r\n     */\r\n    load(url, container, peaks, preload) {\r\n        const media = document.createElement(this.mediaType);\r\n        media.controls = this.params.mediaControls;\r\n        media.autoplay = this.params.autoplay || false;\r\n        media.preload = preload == null ? 'auto' : preload;\r\n        media.src = url;\r\n        media.style.width = '100%';\r\n\r\n        const prevMedia = container.querySelector(this.mediaType);\r\n        if (prevMedia) {\r\n            container.removeChild(prevMedia);\r\n        }\r\n        container.appendChild(media);\r\n\r\n        this._load(media, peaks, preload);\r\n    }\r\n\r\n    /**\r\n     * Load existing media element.\r\n     *\r\n     * @param {HTMLMediaElement} elt HTML5 Audio or Video element\r\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\r\n     */\r\n    loadElt(elt, peaks) {\r\n        elt.controls = this.params.mediaControls;\r\n        elt.autoplay = this.params.autoplay || false;\r\n\r\n        this._load(elt, peaks, elt.preload);\r\n    }\r\n\r\n    /**\r\n     * Method called by both `load` (from url)\r\n     * and `loadElt` (existing media element) methods.\r\n     *\r\n     * @param {HTMLMediaElement} media HTML5 Audio or Video element\r\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\r\n     * @param {string} preload HTML 5 preload attribute value\r\n     * @throws Will throw an error if the `media` argument is not a valid media\r\n     * element.\r\n     * @private\r\n     */\r\n    _load(media, peaks, preload) {\r\n        // verify media element is valid\r\n        if (\r\n            !(media instanceof HTMLMediaElement) ||\r\n            typeof media.addEventListener === 'undefined'\r\n        ) {\r\n            throw new Error('media parameter is not a valid media element');\r\n        }\r\n\r\n        // load must be called manually on iOS, otherwise peaks won't draw\r\n        // until a user interaction triggers load --> 'ready' event\r\n        //\r\n        // note that we avoid calling media.load here when given peaks and preload == 'none'\r\n        // as this almost always triggers some browser fetch of the media.\r\n        if (typeof media.load == 'function' && !(peaks && preload == 'none')) {\r\n            // Resets the media element and restarts the media resource. Any\r\n            // pending events are discarded. How much media data is fetched is\r\n            // still affected by the preload attribute.\r\n            media.load();\r\n        }\r\n\r\n        this.media = media;\r\n        this._setupMediaListeners();\r\n        this.peaks = peaks;\r\n        this.onPlayEnd = null;\r\n        this.buffer = null;\r\n        this.isMuted = media.muted;\r\n        this.setPlaybackRate(this.playbackRate);\r\n        this.setVolume(this.volume);\r\n    }\r\n\r\n    /**\r\n     * Used by `wavesurfer.isPlaying()` and `wavesurfer.playPause()`\r\n     *\r\n     * @return {boolean} Media paused or not\r\n     */\r\n    isPaused() {\r\n        return !this.media || this.media.paused;\r\n    }\r\n\r\n    /**\r\n     * Used by `wavesurfer.getDuration()`\r\n     *\r\n     * @return {number} Duration\r\n     */\r\n    getDuration() {\r\n        if (this.explicitDuration) {\r\n            return this.explicitDuration;\r\n        }\r\n        let duration = (this.buffer || this.media).duration;\r\n        if (duration >= Infinity) {\r\n            // streaming audio\r\n            duration = this.media.seekable.end(0);\r\n        }\r\n        return duration;\r\n    }\r\n\r\n    /**\r\n     * Returns the current time in seconds relative to the audio-clip's\r\n     * duration.\r\n     *\r\n     * @return {number} Current time\r\n     */\r\n    getCurrentTime() {\r\n        return this.media && this.media.currentTime;\r\n    }\r\n\r\n    /**\r\n     * Get the position from 0 to 1\r\n     *\r\n     * @return {number} Current position\r\n     */\r\n    getPlayedPercents() {\r\n        return this.getCurrentTime() / this.getDuration() || 0;\r\n    }\r\n\r\n    /**\r\n     * Get the audio source playback rate.\r\n     *\r\n     * @return {number} Playback rate\r\n     */\r\n    getPlaybackRate() {\r\n        return this.playbackRate || this.media.playbackRate;\r\n    }\r\n\r\n    /**\r\n     * Set the audio source playback rate.\r\n     *\r\n     * @param {number} value Playback rate\r\n     */\r\n    setPlaybackRate(value) {\r\n        this.playbackRate = value || 1;\r\n        this.media.playbackRate = this.playbackRate;\r\n    }\r\n\r\n    /**\r\n     * Used by `wavesurfer.seekTo()`\r\n     *\r\n     * @param {number} start Position to start at in seconds\r\n     */\r\n    seekTo(start) {\r\n        if (start != null && !isNaN(start)) {\r\n            this.media.currentTime = start;\r\n        }\r\n        this.clearPlayEnd();\r\n    }\r\n\r\n    /**\r\n     * Plays the loaded audio region.\r\n     *\r\n     * @param {number} start Start offset in seconds, relative to the beginning\r\n     * of a clip.\r\n     * @param {number} end When to stop, relative to the beginning of a clip.\r\n     * @emits MediaElement#play\r\n     * @return {Promise} Result\r\n     */\r\n    play(start, end) {\r\n        this.seekTo(start);\r\n        const promise = this.media.play();\r\n        end && this.setPlayEnd(end);\r\n\r\n        return promise;\r\n    }\r\n\r\n    /**\r\n     * Pauses the loaded audio.\r\n     *\r\n     * @emits MediaElement#pause\r\n     * @return {Promise} Result\r\n     */\r\n    pause() {\r\n        let promise;\r\n\r\n        if (this.media) {\r\n            promise = this.media.pause();\r\n        }\r\n        this.clearPlayEnd();\r\n\r\n        return promise;\r\n    }\r\n\r\n    /**\r\n     * Set the play end\r\n     *\r\n     * @param {number} end Where to end\r\n     */\r\n    setPlayEnd(end) {\r\n        this.clearPlayEnd();\r\n\r\n        this._onPlayEnd = time => {\r\n            if (time >= end) {\r\n                this.pause();\r\n                this.seekTo(end);\r\n            }\r\n        };\r\n        this.on('audioprocess', this._onPlayEnd);\r\n    }\r\n\r\n    /** @private */\r\n    clearPlayEnd() {\r\n        if (this._onPlayEnd) {\r\n            this.un('audioprocess', this._onPlayEnd);\r\n            this._onPlayEnd = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Compute the max and min value of the waveform when broken into\r\n     * <length> subranges.\r\n     *\r\n     * @param {number} length How many subranges to break the waveform into.\r\n     * @param {number} first First sample in the required range.\r\n     * @param {number} last Last sample in the required range.\r\n     * @return {number[]|Number.<Array[]>} Array of 2*<length> peaks or array of\r\n     * arrays of peaks consisting of (max, min) values for each subrange.\r\n     */\r\n    getPeaks(length, first, last) {\r\n        if (this.buffer) {\r\n            return super.getPeaks(length, first, last);\r\n        }\r\n        return this.peaks || [];\r\n    }\r\n\r\n    /**\r\n     * Set the sink id for the media player\r\n     *\r\n     * @param {string} deviceId String value representing audio device id.\r\n     * @returns {Promise} A Promise that resolves to `undefined` when there\r\n     * are no errors.\r\n     */\r\n    setSinkId(deviceId) {\r\n        if (deviceId) {\r\n            if (!this.media.setSinkId) {\r\n                return Promise.reject(\r\n                    new Error('setSinkId is not supported in your browser')\r\n                );\r\n            }\r\n            return this.media.setSinkId(deviceId);\r\n        }\r\n\r\n        return Promise.reject(new Error('Invalid deviceId: ' + deviceId));\r\n    }\r\n\r\n    /**\r\n     * Get the current volume\r\n     *\r\n     * @return {number} value A floating point value between 0 and 1.\r\n     */\r\n    getVolume() {\r\n        return this.volume;\r\n    }\r\n\r\n    /**\r\n     * Set the audio volume\r\n     *\r\n     * @param {number} value A floating point value between 0 and 1.\r\n     */\r\n    setVolume(value) {\r\n        this.volume = value;\r\n        // no need to change when it's already at that volume\r\n        if (this.media.volume !== this.volume) {\r\n            this.media.volume = this.volume;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Enable or disable muted audio\r\n     *\r\n     * @since 4.0.0\r\n     * @param {boolean} muted Specify `true` to mute audio.\r\n     */\r\n    setMute(muted) {\r\n        // This causes a volume change to be emitted too through the\r\n        // volumechange event listener.\r\n        this.isMuted = this.media.muted = muted;\r\n    }\r\n\r\n    /**\r\n     * This is called when wavesurfer is destroyed\r\n     *\r\n     */\r\n    destroy() {\r\n        this.pause();\r\n        this.unAll();\r\n        this.destroyed = true;\r\n\r\n        // cleanup media event listeners\r\n        Object.keys(this.mediaListeners).forEach(id => {\r\n            if (this.media) {\r\n                this.media.removeEventListener(id, this.mediaListeners[id]);\r\n            }\r\n        });\r\n\r\n        if (\r\n            this.params.removeMediaElementOnDestroy &&\r\n            this.media &&\r\n            this.media.parentNode\r\n        ) {\r\n            this.media.parentNode.removeChild(this.media);\r\n        }\r\n\r\n        this.media = null;\r\n    }\r\n}\r\n","/**\r\n * Caches the decoded peaks data to improve rendering speed for large audio\r\n *\r\n * Is used if the option parameter `partialRender` is set to `true`\r\n */\r\nexport default class PeakCache {\r\n    /**\r\n     * Instantiate cache\r\n     */\r\n    constructor() {\r\n        this.clearPeakCache();\r\n    }\r\n\r\n    /**\r\n     * Empty the cache\r\n     */\r\n    clearPeakCache() {\r\n        /**\r\n         * Flat array with entries that are always in pairs to mark the\r\n         * beginning and end of each subrange.  This is a convenience so we can\r\n         * iterate over the pairs for easy set difference operations.\r\n         * @private\r\n         */\r\n        this.peakCacheRanges = [];\r\n        /**\r\n         * Length of the entire cachable region, used for resetting the cache\r\n         * when this changes (zoom events, for instance).\r\n         * @private\r\n         */\r\n        this.peakCacheLength = -1;\r\n    }\r\n\r\n    /**\r\n     * Add a range of peaks to the cache\r\n     *\r\n     * @param {number} length The length of the range\r\n     * @param {number} start The x offset of the start of the range\r\n     * @param {number} end The x offset of the end of the range\r\n     * @return {Number.<Array[]>} Array with arrays of numbers\r\n     */\r\n    addRangeToPeakCache(length, start, end) {\r\n        if (length != this.peakCacheLength) {\r\n            this.clearPeakCache();\r\n            this.peakCacheLength = length;\r\n        }\r\n\r\n        // Return ranges that weren't in the cache before the call.\r\n        let uncachedRanges = [];\r\n        let i = 0;\r\n        // Skip ranges before the current start.\r\n        while (\r\n            i < this.peakCacheRanges.length &&\r\n            this.peakCacheRanges[i] < start\r\n        ) {\r\n            i++;\r\n        }\r\n        // If |i| is even, |start| falls after an existing range.  Otherwise,\r\n        // |start| falls between an existing range, and the uncached region\r\n        // starts when we encounter the next node in |peakCacheRanges| or\r\n        // |end|, whichever comes first.\r\n        if (i % 2 == 0) {\r\n            uncachedRanges.push(start);\r\n        }\r\n        while (\r\n            i < this.peakCacheRanges.length &&\r\n            this.peakCacheRanges[i] <= end\r\n        ) {\r\n            uncachedRanges.push(this.peakCacheRanges[i]);\r\n            i++;\r\n        }\r\n        // If |i| is even, |end| is after all existing ranges.\r\n        if (i % 2 == 0) {\r\n            uncachedRanges.push(end);\r\n        }\r\n\r\n        // Filter out the 0-length ranges.\r\n        uncachedRanges = uncachedRanges.filter((item, pos, arr) => {\r\n            if (pos == 0) {\r\n                return item != arr[pos + 1];\r\n            } else if (pos == arr.length - 1) {\r\n                return item != arr[pos - 1];\r\n            }\r\n            return item != arr[pos - 1] && item != arr[pos + 1];\r\n        });\r\n\r\n        // Merge the two ranges together, uncachedRanges will either contain\r\n        // wholly new points, or duplicates of points in peakCacheRanges.  If\r\n        // duplicates are detected, remove both and extend the range.\r\n        this.peakCacheRanges = this.peakCacheRanges.concat(uncachedRanges);\r\n        this.peakCacheRanges = this.peakCacheRanges\r\n            .sort((a, b) => a - b)\r\n            .filter((item, pos, arr) => {\r\n                if (pos == 0) {\r\n                    return item != arr[pos + 1];\r\n                } else if (pos == arr.length - 1) {\r\n                    return item != arr[pos - 1];\r\n                }\r\n                return item != arr[pos - 1] && item != arr[pos + 1];\r\n            });\r\n\r\n        // Push the uncached ranges into an array of arrays for ease of\r\n        // iteration in the functions that call this.\r\n        const uncachedRangePairs = [];\r\n        for (i = 0; i < uncachedRanges.length; i += 2) {\r\n            uncachedRangePairs.push([uncachedRanges[i], uncachedRanges[i + 1]]);\r\n        }\r\n\r\n        return uncachedRangePairs;\r\n    }\r\n\r\n    /**\r\n     * For testing\r\n     *\r\n     * @return {Number.<Array[]>} Array with arrays of numbers\r\n     */\r\n    getCacheRanges() {\r\n        const peakCacheRangePairs = [];\r\n        let i;\r\n        for (i = 0; i < this.peakCacheRanges.length; i += 2) {\r\n            peakCacheRangePairs.push([\r\n                this.peakCacheRanges[i],\r\n                this.peakCacheRanges[i + 1]\r\n            ]);\r\n        }\r\n        return peakCacheRangePairs;\r\n    }\r\n}\r\n","import utilMax from './max';\r\nimport utilmin from './min';\r\n\r\n/**\r\n * Get the largest absolute value in an array\r\n *\r\n * @param   {Array} values Array of numbers\r\n * @returns {Number} Largest number found\r\n * @example console.log(max([-3, 2, 1]), max([-3, 2, 4])); // logs 3 4\r\n * @since 4.3.0\r\n */\r\nexport default function absMax(values) {\r\n    const max = utilMax(values);\r\n    const min = utilmin(values);\r\n    return -min > max ? -min : max;\r\n}\r\n","/**\r\n * Returns a number limited to the given range.\r\n *\r\n * @param {number} val The number to be limited to a range\r\n * @param {number} min The lower boundary of the limit range\r\n * @param {number} max The upper boundary of the limit range\r\n * @returns {number} A number in the range [min, max]\r\n */\r\nexport default function clamp(val, min, max) {\r\n    return Math.min(Math.max(min, val), max);\r\n}\r\n","/**\r\n * @since 3.0.0\r\n */\r\n\r\nimport Observer from './observer';\r\n\r\nclass ProgressHandler {\r\n    /**\r\n     * Instantiate ProgressHandler\r\n     *\r\n     * @param {Observer} instance The `fetchFile` observer instance.\r\n     * @param {Number} contentLength Content length.\r\n     * @param {Response} response Response object.\r\n     */\r\n    constructor(instance, contentLength, response) {\r\n        this.instance = instance;\r\n        this.instance._reader = response.body.getReader();\r\n\r\n        this.total = parseInt(contentLength, 10);\r\n        this.loaded = 0;\r\n    }\r\n\r\n    /**\r\n     * A method that is called once, immediately after the `ReadableStream``\r\n     * is constructed.\r\n     *\r\n     * @param {ReadableStreamDefaultController} controller Controller instance\r\n     *     used to control the stream.\r\n     */\r\n    start(controller) {\r\n        const read = () => {\r\n            // instance._reader.read() returns a promise that resolves\r\n            // when a value has been received\r\n            this.instance._reader\r\n                .read()\r\n                .then(({ done, value }) => {\r\n                    // result objects contain two properties:\r\n                    // done  - true if the stream has already given you all its data.\r\n                    // value - some data. Always undefined when done is true.\r\n                    if (done) {\r\n                        // ensure onProgress called when content-length=0\r\n                        if (this.total === 0) {\r\n                            this.instance.onProgress.call(this.instance, {\r\n                                loaded: this.loaded,\r\n                                total: this.total,\r\n                                lengthComputable: false\r\n                            });\r\n                        }\r\n                        // no more data needs to be consumed, close the stream\r\n                        controller.close();\r\n                        return;\r\n                    }\r\n\r\n                    this.loaded += value.byteLength;\r\n                    this.instance.onProgress.call(this.instance, {\r\n                        loaded: this.loaded,\r\n                        total: this.total,\r\n                        lengthComputable: !(this.total === 0)\r\n                    });\r\n                    // enqueue the next data chunk into our target stream\r\n                    controller.enqueue(value);\r\n                    read();\r\n                })\r\n                .catch(error => {\r\n                    controller.error(error);\r\n                });\r\n        };\r\n\r\n        read();\r\n    }\r\n}\r\n\r\n/**\r\n * Load a file using `fetch`.\r\n *\r\n * @param {object} options Request options to use. See example below.\r\n * @returns {Observer} Observer instance\r\n * @example\r\n * // default options\r\n * let options = {\r\n *     url: undefined,\r\n *     method: 'GET',\r\n *     mode: 'cors',\r\n *     credentials: 'same-origin',\r\n *     cache: 'default',\r\n *     responseType: 'json',\r\n *     requestHeaders: [],\r\n *     redirect: 'follow',\r\n *     referrer: 'client'\r\n * };\r\n *\r\n * // override some options\r\n * options.url = '../media/demo.wav';\r\n\r\n * // available types: 'arraybuffer', 'blob', 'json' or 'text'\r\n * options.responseType = 'arraybuffer';\r\n *\r\n * // make fetch call\r\n * let request = util.fetchFile(options);\r\n *\r\n * // listen for events\r\n * request.on('progress', e => {\r\n *     console.log('progress', e);\r\n * });\r\n *\r\n * request.on('success', data => {\r\n *     console.log('success!', data);\r\n * });\r\n *\r\n * request.on('error', e => {\r\n *     console.warn('fetchFile error: ', e);\r\n * });\r\n */\r\nexport default function fetchFile(options) {\r\n    if (!options) {\r\n        throw new Error('fetch options missing');\r\n    } else if (!options.url) {\r\n        throw new Error('fetch url missing');\r\n    }\r\n    const instance = new Observer();\r\n    const fetchHeaders = new Headers();\r\n    const fetchRequest = new Request(options.url);\r\n\r\n    // add ability to abort\r\n    instance.controller = new AbortController();\r\n\r\n    // check if headers have to be added\r\n    if (options && options.requestHeaders) {\r\n        // add custom request headers\r\n        options.requestHeaders.forEach(header => {\r\n            fetchHeaders.append(header.key, header.value);\r\n        });\r\n    }\r\n\r\n    // parse fetch options\r\n    const responseType = options.responseType || 'json';\r\n    const fetchOptions = {\r\n        method: options.method || 'GET',\r\n        headers: fetchHeaders,\r\n        mode: options.mode || 'cors',\r\n        credentials: options.credentials || 'same-origin',\r\n        cache: options.cache || 'default',\r\n        redirect: options.redirect || 'follow',\r\n        referrer: options.referrer || 'client',\r\n        signal: instance.controller.signal\r\n    };\r\n\r\n    fetch(fetchRequest, fetchOptions)\r\n        .then(response => {\r\n            // store response reference\r\n            instance.response = response;\r\n\r\n            let progressAvailable = true;\r\n            if (!response.body) {\r\n                // ReadableStream is not yet supported in this browser\r\n                // see https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream\r\n                progressAvailable = false;\r\n            }\r\n\r\n            // Server must send CORS header \"Access-Control-Expose-Headers: content-length\"\r\n            const contentLength = response.headers.get('content-length');\r\n            if (contentLength === null) {\r\n                // Content-Length server response header missing.\r\n                // Don't evaluate download progress if we can't compare against a total size\r\n                // see https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Access-Control-Expose-Headers\r\n                progressAvailable = false;\r\n            }\r\n\r\n            if (!progressAvailable) {\r\n                // not able to check download progress so skip it\r\n                return response;\r\n            }\r\n\r\n            // fire progress event when during load\r\n            instance.onProgress = e => {\r\n                instance.fireEvent('progress', e);\r\n            };\r\n\r\n            return new Response(\r\n                new ReadableStream(\r\n                    new ProgressHandler(instance, contentLength, response)\r\n                ),\r\n                fetchOptions\r\n            );\r\n        })\r\n        .then(response => {\r\n            let errMsg;\r\n            if (response.ok) {\r\n                switch (responseType) {\r\n                    case 'arraybuffer':\r\n                        return response.arrayBuffer();\r\n\r\n                    case 'json':\r\n                        return response.json();\r\n\r\n                    case 'blob':\r\n                        return response.blob();\r\n\r\n                    case 'text':\r\n                        return response.text();\r\n\r\n                    default:\r\n                        errMsg = 'Unknown responseType: ' + responseType;\r\n                        break;\r\n                }\r\n            }\r\n            if (!errMsg) {\r\n                errMsg = 'HTTP error status: ' + response.status;\r\n            }\r\n            throw new Error(errMsg);\r\n        })\r\n        .then(response => {\r\n            instance.fireEvent('success', response);\r\n        })\r\n        .catch(error => {\r\n            instance.fireEvent('error', error);\r\n        });\r\n\r\n    // return the fetch request\r\n    instance.fetchRequest = fetchRequest;\r\n    return instance;\r\n}\r\n","import reqAnimationFrame from './request-animation-frame';\r\n\r\n/**\r\n * Create a function which will be called at the next requestAnimationFrame\r\n * cycle\r\n *\r\n * @param {function} func The function to call\r\n *\r\n * @return {func} The function wrapped within a requestAnimationFrame\r\n */\r\nexport default function frame(func) {\r\n    return (...args) => reqAnimationFrame(() => func(...args));\r\n}\r\n","/**\r\n * Get a random prefixed ID\r\n *\r\n * @param {String} prefix Prefix to use. Default is `'wavesurfer_'`.\r\n * @returns {String} Random prefixed ID\r\n * @example\r\n * console.log(getId()); // logs 'wavesurfer_b5pors4ru6g'\r\n *\r\n * let prefix = 'foo-';\r\n * console.log(getId(prefix)); // logs 'foo-b5pors4ru6g'\r\n */\r\nexport default function getId(prefix) {\r\n    if (prefix === undefined) {\r\n        prefix = 'wavesurfer_';\r\n    }\r\n    return (\r\n        prefix +\r\n        Math.random()\r\n            .toString(32)\r\n            .substring(2)\r\n    );\r\n}\r\n","export { default as getId } from './get-id';\r\nexport { default as max } from './max';\r\nexport { default as min } from './min';\r\nexport { default as absMax } from './absMax';\r\nexport { default as Observer } from './observer';\r\nexport { default as style } from './style';\r\nexport { default as requestAnimationFrame } from './request-animation-frame';\r\nexport { default as frame } from './frame';\r\nexport { default as debounce } from 'debounce';\r\nexport { default as preventClick } from './prevent-click';\r\nexport { default as fetchFile } from './fetch';\r\nexport { default as clamp } from './clamp';\r\nexport { default as withOrientation } from './orientation';\r\nexport { default as ignoreSilenceMode } from './silence-mode';\r\n","/**\r\n * Get the largest value\r\n *\r\n * @param   {Array} values Array of numbers\r\n * @returns {Number} Largest number found\r\n * @example console.log(max([1, 2, 3])); // logs 3\r\n */\r\nexport default function max(values) {\r\n    let largest = -Infinity;\r\n    Object.keys(values).forEach(i => {\r\n        if (values[i] > largest) {\r\n            largest = values[i];\r\n        }\r\n    });\r\n    return largest;\r\n}\r\n","/**\r\n * Get the smallest value\r\n *\r\n * @param   {Array} values Array of numbers\r\n * @returns {Number} Smallest number found\r\n * @example console.log(min([1, 2, 3])); // logs 1\r\n */\r\nexport default function min(values) {\r\n    let smallest = Number(Infinity);\r\n    Object.keys(values).forEach(i => {\r\n        if (values[i] < smallest) {\r\n            smallest = values[i];\r\n        }\r\n    });\r\n    return smallest;\r\n}\r\n","/**\r\n * @typedef {Object} ListenerDescriptor\r\n * @property {string} name The name of the event\r\n * @property {function} callback The callback\r\n * @property {function} un The function to call to remove the listener\r\n */\r\n\r\n/**\r\n * Observer class\r\n */\r\nexport default class Observer {\r\n    /**\r\n     * Instantiate Observer\r\n     */\r\n    constructor() {\r\n        /**\r\n         * @private\r\n         * @todo Initialise the handlers here already and remove the conditional\r\n         * assignment in `on()`\r\n         */\r\n        this._disabledEventEmissions = [];\r\n        this.handlers = null;\r\n    }\r\n    /**\r\n     * Attach a handler function for an event.\r\n     *\r\n     * @param {string} event Name of the event to listen to\r\n     * @param {function} fn The callback to trigger when the event is fired\r\n     * @return {ListenerDescriptor} The event descriptor\r\n     */\r\n    on(event, fn) {\r\n        if (!this.handlers) {\r\n            this.handlers = {};\r\n        }\r\n\r\n        let handlers = this.handlers[event];\r\n        if (!handlers) {\r\n            handlers = this.handlers[event] = [];\r\n        }\r\n        handlers.push(fn);\r\n\r\n        // Return an event descriptor\r\n        return {\r\n            name: event,\r\n            callback: fn,\r\n            un: (e, fn) => this.un(e, fn)\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Remove an event handler.\r\n     *\r\n     * @param {string} event Name of the event the listener that should be\r\n     * removed listens to\r\n     * @param {function} fn The callback that should be removed\r\n     */\r\n    un(event, fn) {\r\n        if (!this.handlers) {\r\n            return;\r\n        }\r\n\r\n        const handlers = this.handlers[event];\r\n        let i;\r\n        if (handlers) {\r\n            if (fn) {\r\n                for (i = handlers.length - 1; i >= 0; i--) {\r\n                    if (handlers[i] == fn) {\r\n                        handlers.splice(i, 1);\r\n                    }\r\n                }\r\n            } else {\r\n                handlers.length = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Remove all event handlers.\r\n     */\r\n    unAll() {\r\n        this.handlers = null;\r\n    }\r\n\r\n    /**\r\n     * Attach a handler to an event. The handler is executed at most once per\r\n     * event type.\r\n     *\r\n     * @param {string} event The event to listen to\r\n     * @param {function} handler The callback that is only to be called once\r\n     * @return {ListenerDescriptor} The event descriptor\r\n     */\r\n    once(event, handler) {\r\n        const fn = (...args) => {\r\n            /*  eslint-disable no-invalid-this */\r\n            handler.apply(this, args);\r\n            /*  eslint-enable no-invalid-this */\r\n            setTimeout(() => {\r\n                this.un(event, fn);\r\n            }, 0);\r\n        };\r\n        return this.on(event, fn);\r\n    }\r\n\r\n    /**\r\n     * Disable firing a list of events by name. When specified, event handlers for any event type\r\n     * passed in here will not be called.\r\n     *\r\n     * @since 4.0.0\r\n     * @param {string[]} eventNames an array of event names to disable emissions for\r\n     * @example\r\n     * // disable seek and interaction events\r\n     * wavesurfer.setDisabledEventEmissions(['seek', 'interaction']);\r\n     */\r\n    setDisabledEventEmissions(eventNames) {\r\n        this._disabledEventEmissions = eventNames;\r\n    }\r\n\r\n    /**\r\n     * plugins borrow part of this class without calling the constructor,\r\n     * so we have to be careful about _disabledEventEmissions\r\n     */\r\n\r\n    _isDisabledEventEmission(event) {\r\n        return this._disabledEventEmissions && this._disabledEventEmissions.includes(event);\r\n    }\r\n\r\n    /**\r\n     * Manually fire an event\r\n     *\r\n     * @param {string} event The event to fire manually\r\n     * @param {...any} args The arguments with which to call the listeners\r\n     */\r\n    fireEvent(event, ...args) {\r\n        if (!this.handlers || this._isDisabledEventEmission(event)) {\r\n            return;\r\n        }\r\n\r\n        const handlers = this.handlers[event];\r\n        handlers &&\r\n            handlers.forEach(fn => {\r\n                fn(...args);\r\n            });\r\n    }\r\n}\r\n","const verticalPropMap = {\r\n    width: 'height',\r\n    height: 'width',\r\n\r\n    overflowX: 'overflowY',\r\n    overflowY: 'overflowX',\r\n\r\n    clientWidth: 'clientHeight',\r\n    clientHeight: 'clientWidth',\r\n\r\n    clientX: 'clientY',\r\n    clientY: 'clientX',\r\n\r\n    scrollWidth: 'scrollHeight',\r\n    scrollLeft: 'scrollTop',\r\n\r\n    offsetLeft: 'offsetTop',\r\n    offsetTop: 'offsetLeft',\r\n    offsetHeight: 'offsetWidth',\r\n    offsetWidth: 'offsetHeight',\r\n\r\n    left: 'top',\r\n    right: 'bottom',\r\n    top: 'left',\r\n    bottom: 'right',\r\n\r\n    borderRightStyle: 'borderBottomStyle',\r\n    borderRightWidth: 'borderBottomWidth',\r\n    borderRightColor: 'borderBottomColor'\r\n};\r\n\r\n/**\r\n * Convert a horizontally-oriented property name to a vertical one.\r\n *\r\n * @param {string} prop A property name\r\n * @param {bool} vertical Whether the element is oriented vertically\r\n * @returns {string} prop, converted appropriately\r\n */\r\nfunction mapProp(prop, vertical) {\r\n    if (Object.prototype.hasOwnProperty.call(verticalPropMap, prop)) {\r\n        return vertical ? verticalPropMap[prop] : prop;\r\n    } else {\r\n        return prop;\r\n    }\r\n}\r\n\r\nconst isProxy = Symbol(\"isProxy\");\r\n\r\n/**\r\n * Returns an appropriately oriented object based on vertical.\r\n * If vertical is true, attribute getting and setting will be mapped through\r\n * verticalPropMap, so that e.g. getting the object's .width will give its\r\n * .height instead.\r\n * Certain methods of an oriented object will return oriented objects as well.\r\n * Oriented objects can't be added to the DOM directly since they are Proxy objects\r\n * and thus fail typechecks. Use domElement to get the actual element for this.\r\n *\r\n * @param {object} target The object to be wrapped and oriented\r\n * @param {bool} vertical Whether the element is oriented vertically\r\n * @returns {Proxy} An oriented object with attr translation via verticalAttrMap\r\n * @since 5.0.0\r\n */\r\nexport default function withOrientation(target, vertical) {\r\n    if (target[isProxy]) {\r\n        return target;\r\n    } else {\r\n        return new Proxy(\r\n            target, {\r\n                get: function(obj, prop, receiver) {\r\n                    if (prop === isProxy) {\r\n                        return true;\r\n                    } else if (prop === 'domElement') {\r\n                        return obj;\r\n                    } else if (prop === 'style') {\r\n                        return withOrientation(obj.style, vertical);\r\n                    } else if (prop === 'canvas') {\r\n                        return withOrientation(obj.canvas, vertical);\r\n                    } else if (prop === 'getBoundingClientRect') {\r\n                        return function(...args) {\r\n                            return withOrientation(obj.getBoundingClientRect(...args), vertical);\r\n                        };\r\n                    } else if (prop === 'getContext') {\r\n                        return function(...args) {\r\n                            return withOrientation(obj.getContext(...args), vertical);\r\n                        };\r\n                    } else {\r\n                        let value = obj[mapProp(prop, vertical)];\r\n                        return typeof value == 'function' ? value.bind(obj) : value;\r\n                    }\r\n                },\r\n                set: function(obj, prop, value) {\r\n                    obj[mapProp(prop, vertical)] = value;\r\n                    return true;\r\n                }\r\n            }\r\n        );\r\n    }\r\n}\r\n","/**\r\n * Stops propagation of click event and removes event listener\r\n *\r\n * @private\r\n * @param {object} event The click event\r\n */\r\nfunction preventClickHandler(event) {\r\n    event.stopPropagation();\r\n    document.body.removeEventListener('click', preventClickHandler, true);\r\n}\r\n\r\n/**\r\n * Starts listening for click event and prevent propagation\r\n *\r\n * @param {object} values Values\r\n */\r\nexport default function preventClick(values) {\r\n    document.body.addEventListener('click', preventClickHandler, true);\r\n}\r\n","/* eslint-disable valid-jsdoc */\r\n/**\r\n * Returns the `requestAnimationFrame` function for the browser, or a shim with\r\n * `setTimeout` if the function is not found\r\n *\r\n * @return {function} Available `requestAnimationFrame` function for the browser\r\n */\r\nexport default (\r\n    window.requestAnimationFrame ||\r\n    window.webkitRequestAnimationFrame ||\r\n    window.mozRequestAnimationFrame ||\r\n    window.oRequestAnimationFrame ||\r\n    window.msRequestAnimationFrame ||\r\n    ((callback, element) => setTimeout(callback, 1000 / 60))\r\n).bind(window);\r\n","/**\r\n * Ignores device silence mode when using the `WebAudio` backend.\r\n *\r\n * Many mobile devices contain a hardware button to mute the ringtone for incoming\r\n * calls and messages. Unfortunately, on some platforms like iOS, this also mutes\r\n * wavesurfer's audio when using the `WebAudio` backend. This function creates a\r\n * temporary `<audio>` element that makes sure the WebAudio backend keeps playing\r\n * when muting the device ringer.\r\n *\r\n * @since 5.2.0\r\n */\r\nexport default function ignoreSilenceMode() {\r\n    // Set the src to a short bit of url encoded as a silent mp3\r\n    // NOTE The silence MP3 must be high quality, when web audio sounds are played\r\n    // in parallel the web audio sound is mixed to match the bitrate of the html sound\r\n    // 0.01 seconds of silence VBR220-260 Joint Stereo 859B\r\n    const audioData = \"data:audio/mpeg;base64,//uQxAAAAAAAAAAAAAAAAAAAAAAAWGluZwAAAA8AAAACAAACcQCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA//////////////////////////////////////////////////////////////////8AAABhTEFNRTMuMTAwA8MAAAAAAAAAABQgJAUHQQAB9AAAAnGMHkkIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//sQxAADgnABGiAAQBCqgCRMAAgEAH///////////////7+n/9FTuQsQH//////2NG0jWUGlio5gLQTOtIoeR2WX////X4s9Atb/JRVCbBUpeRUq//////////////////9RUi0f2jn/+xDECgPCjAEQAABN4AAANIAAAAQVTEFNRTMuMTAwVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVQ==\";\r\n\r\n    // disable iOS Airplay (setting the attribute in js doesn't work)\r\n    let tmp = document.createElement(\"div\");\r\n    tmp.innerHTML = '<audio x-webkit-airplay=\"deny\"></audio>';\r\n\r\n    let audioSilentMode = tmp.children.item(0);\r\n    audioSilentMode.src = audioData;\r\n    audioSilentMode.preload = \"auto\";\r\n    audioSilentMode.type = \"audio/mpeg\";\r\n    audioSilentMode.disableRemotePlayback = true;\r\n\r\n    // play\r\n    audioSilentMode.play();\r\n\r\n    // cleanup\r\n    audioSilentMode.remove();\r\n    tmp.remove();\r\n}\r\n","/**\r\n * Apply a map of styles to an element\r\n *\r\n * @param {HTMLElement} el The element that the styles will be applied to\r\n * @param {Object} styles The map of propName: attribute, both are used as-is\r\n *\r\n * @return {HTMLElement} el\r\n */\r\nexport default function style(el, styles) {\r\n    Object.keys(styles).forEach(prop => {\r\n        if (el.style[prop] !== styles[prop]) {\r\n            el.style[prop] = styles[prop];\r\n        }\r\n    });\r\n    return el;\r\n}\r\n","import * as util from './util';\r\n\r\n// using constants to prevent someone writing the string wrong\r\nconst PLAYING = 'playing';\r\nconst PAUSED = 'paused';\r\nconst FINISHED = 'finished';\r\n\r\n/**\r\n * WebAudio backend\r\n *\r\n * @extends {Observer}\r\n */\r\nexport default class WebAudio extends util.Observer {\r\n    /** scriptBufferSize: size of the processing buffer */\r\n    static scriptBufferSize = 256;\r\n    /** audioContext: allows to process audio with WebAudio API */\r\n    audioContext = null;\r\n    /** @private */\r\n    offlineAudioContext = null;\r\n    /** @private */\r\n    stateBehaviors = {\r\n        [PLAYING]: {\r\n            init() {\r\n                this.addOnAudioProcess();\r\n            },\r\n            getPlayedPercents() {\r\n                const duration = this.getDuration();\r\n                return this.getCurrentTime() / duration || 0;\r\n            },\r\n            getCurrentTime() {\r\n                return this.startPosition + this.getPlayedTime();\r\n            }\r\n        },\r\n        [PAUSED]: {\r\n            init() {\r\n                this.removeOnAudioProcess();\r\n            },\r\n            getPlayedPercents() {\r\n                const duration = this.getDuration();\r\n                return this.getCurrentTime() / duration || 0;\r\n            },\r\n            getCurrentTime() {\r\n                return this.startPosition;\r\n            }\r\n        },\r\n        [FINISHED]: {\r\n            init() {\r\n                this.removeOnAudioProcess();\r\n                this.fireEvent('finish');\r\n            },\r\n            getPlayedPercents() {\r\n                return 1;\r\n            },\r\n            getCurrentTime() {\r\n                return this.getDuration();\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Does the browser support this backend\r\n     *\r\n     * @return {boolean} Whether or not this browser supports this backend\r\n     */\r\n    supportsWebAudio() {\r\n        return !!(window.AudioContext || window.webkitAudioContext);\r\n    }\r\n\r\n    /**\r\n     * Get the audio context used by this backend or create one\r\n     *\r\n     * @return {AudioContext} Existing audio context, or creates a new one\r\n     */\r\n    getAudioContext() {\r\n        if (!window.WaveSurferAudioContext) {\r\n            window.WaveSurferAudioContext = new (window.AudioContext ||\r\n                window.webkitAudioContext)();\r\n        }\r\n        return window.WaveSurferAudioContext;\r\n    }\r\n\r\n    /**\r\n     * Get the offline audio context used by this backend or create one\r\n     *\r\n     * @param {number} sampleRate The sample rate to use\r\n     * @return {OfflineAudioContext} Existing offline audio context, or creates\r\n     * a new one\r\n     */\r\n    getOfflineAudioContext(sampleRate) {\r\n        if (!window.WaveSurferOfflineAudioContext) {\r\n            window.WaveSurferOfflineAudioContext = new (window.OfflineAudioContext ||\r\n                window.webkitOfflineAudioContext)(1, 2, sampleRate);\r\n        }\r\n        return window.WaveSurferOfflineAudioContext;\r\n    }\r\n\r\n    /**\r\n     * Construct the backend\r\n     *\r\n     * @param {WavesurferParams} params Wavesurfer parameters\r\n     */\r\n    constructor(params) {\r\n        super();\r\n        /** @private */\r\n        this.params = params;\r\n        /** ac: Audio Context instance */\r\n        this.ac =\r\n            params.audioContext ||\r\n            (this.supportsWebAudio() ? this.getAudioContext() : {});\r\n        /**@private */\r\n        this.lastPlay = this.ac.currentTime;\r\n        /** @private */\r\n        this.startPosition = 0;\r\n        /** @private */\r\n        this.scheduledPause = null;\r\n        /** @private */\r\n        this.states = {\r\n            [PLAYING]: Object.create(this.stateBehaviors[PLAYING]),\r\n            [PAUSED]: Object.create(this.stateBehaviors[PAUSED]),\r\n            [FINISHED]: Object.create(this.stateBehaviors[FINISHED])\r\n        };\r\n        /** @private */\r\n        this.buffer = null;\r\n        /** @private */\r\n        this.filters = [];\r\n        /** gainNode: allows to control audio volume */\r\n        this.gainNode = null;\r\n        /** @private */\r\n        this.mergedPeaks = null;\r\n        /** @private */\r\n        this.offlineAc = null;\r\n        /** @private */\r\n        this.peaks = null;\r\n        /** @private */\r\n        this.playbackRate = 1;\r\n        /** analyser: provides audio analysis information */\r\n        this.analyser = null;\r\n        /** scriptNode: allows processing audio */\r\n        this.scriptNode = null;\r\n        /** @private */\r\n        this.source = null;\r\n        /** @private */\r\n        this.splitPeaks = [];\r\n        /** @private */\r\n        this.state = null;\r\n        /** @private */\r\n        this.explicitDuration = params.duration;\r\n        /**\r\n         * Boolean indicating if the backend was destroyed.\r\n         */\r\n        this.destroyed = false;\r\n    }\r\n\r\n    /**\r\n     * Initialise the backend, called in `wavesurfer.createBackend()`\r\n     */\r\n    init() {\r\n        this.createVolumeNode();\r\n        this.createScriptNode();\r\n        this.createAnalyserNode();\r\n\r\n        this.setState(PAUSED);\r\n        this.setPlaybackRate(this.params.audioRate);\r\n        this.setLength(0);\r\n    }\r\n\r\n    /** @private */\r\n    disconnectFilters() {\r\n        if (this.filters) {\r\n            this.filters.forEach(filter => {\r\n                filter && filter.disconnect();\r\n            });\r\n            this.filters = null;\r\n            // Reconnect direct path\r\n            this.analyser.connect(this.gainNode);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     *\r\n     * @param {string} state The new state\r\n     */\r\n    setState(state) {\r\n        if (this.state !== this.states[state]) {\r\n            this.state = this.states[state];\r\n            this.state.init.call(this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Unpacked `setFilters()`\r\n     *\r\n     * @param {...AudioNode} filters One or more filters to set\r\n     */\r\n    setFilter(...filters) {\r\n        this.setFilters(filters);\r\n    }\r\n\r\n    /**\r\n     * Insert custom Web Audio nodes into the graph\r\n     *\r\n     * @param {AudioNode[]} filters Packed filters array\r\n     * @example\r\n     * const lowpass = wavesurfer.backend.ac.createBiquadFilter();\r\n     * wavesurfer.backend.setFilter(lowpass);\r\n     */\r\n    setFilters(filters) {\r\n        // Remove existing filters\r\n        this.disconnectFilters();\r\n\r\n        // Insert filters if filter array not empty\r\n        if (filters && filters.length) {\r\n            this.filters = filters;\r\n\r\n            // Disconnect direct path before inserting filters\r\n            this.analyser.disconnect();\r\n\r\n            // Connect each filter in turn\r\n            filters\r\n                .reduce((prev, curr) => {\r\n                    prev.connect(curr);\r\n                    return curr;\r\n                }, this.analyser)\r\n                .connect(this.gainNode);\r\n        }\r\n    }\r\n    /** Create ScriptProcessorNode to process audio */\r\n    createScriptNode() {\r\n        if (this.params.audioScriptProcessor) {\r\n            this.scriptNode = this.params.audioScriptProcessor;\r\n        } else {\r\n            if (this.ac.createScriptProcessor) {\r\n                this.scriptNode = this.ac.createScriptProcessor(\r\n                    WebAudio.scriptBufferSize\r\n                );\r\n            } else {\r\n                this.scriptNode = this.ac.createJavaScriptNode(\r\n                    WebAudio.scriptBufferSize\r\n                );\r\n            }\r\n        }\r\n        this.scriptNode.connect(this.ac.destination);\r\n    }\r\n\r\n    /** @private */\r\n    addOnAudioProcess() {\r\n        this.scriptNode.onaudioprocess = () => {\r\n            const time = this.getCurrentTime();\r\n\r\n            if (time >= this.getDuration()) {\r\n                this.setState(FINISHED);\r\n                this.fireEvent('pause');\r\n            } else if (time >= this.scheduledPause) {\r\n                this.pause();\r\n            } else if (this.state === this.states[PLAYING]) {\r\n                this.fireEvent('audioprocess', time);\r\n            }\r\n        };\r\n    }\r\n\r\n    /** @private */\r\n    removeOnAudioProcess() {\r\n        this.scriptNode.onaudioprocess = null;\r\n    }\r\n    /** Create analyser node to perform audio analysis */\r\n    createAnalyserNode() {\r\n        this.analyser = this.ac.createAnalyser();\r\n        this.analyser.connect(this.gainNode);\r\n    }\r\n\r\n    /**\r\n     * Create the gain node needed to control the playback volume.\r\n     *\r\n     */\r\n    createVolumeNode() {\r\n        // Create gain node using the AudioContext\r\n        if (this.ac.createGain) {\r\n            this.gainNode = this.ac.createGain();\r\n        } else {\r\n            this.gainNode = this.ac.createGainNode();\r\n        }\r\n        // Add the gain node to the graph\r\n        this.gainNode.connect(this.ac.destination);\r\n    }\r\n\r\n    /**\r\n     * Set the sink id for the media player\r\n     *\r\n     * @param {string} deviceId String value representing audio device id.\r\n     * @returns {Promise} A Promise that resolves to `undefined` when there\r\n     * are no errors.\r\n     */\r\n    setSinkId(deviceId) {\r\n        if (deviceId) {\r\n            /**\r\n             * The webaudio API doesn't currently support setting the device\r\n             * output. Here we create an HTMLAudioElement, connect the\r\n             * webaudio stream to that element and setSinkId there.\r\n             */\r\n            let audio = new window.Audio();\r\n            if (!audio.setSinkId) {\r\n                return Promise.reject(\r\n                    new Error('setSinkId is not supported in your browser')\r\n                );\r\n            }\r\n            audio.autoplay = true;\r\n            const dest = this.ac.createMediaStreamDestination();\r\n            this.gainNode.disconnect();\r\n            this.gainNode.connect(dest);\r\n            audio.srcObject = dest.stream;\r\n\r\n            return audio.setSinkId(deviceId);\r\n        } else {\r\n            return Promise.reject(new Error('Invalid deviceId: ' + deviceId));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set the audio volume\r\n     *\r\n     * @param {number} value A floating point value between 0 and 1.\r\n     */\r\n    setVolume(value) {\r\n        this.gainNode.gain.setValueAtTime(value, this.ac.currentTime);\r\n    }\r\n\r\n    /**\r\n     * Get the current volume\r\n     *\r\n     * @return {number} value A floating point value between 0 and 1.\r\n     */\r\n    getVolume() {\r\n        return this.gainNode.gain.value;\r\n    }\r\n\r\n    /**\r\n     * Decode an array buffer and pass data to a callback\r\n     *\r\n     * @private\r\n     * @param {ArrayBuffer} arraybuffer The array buffer to decode\r\n     * @param {function} callback The function to call on complete.\r\n     * @param {function} errback The function to call on error.\r\n     */\r\n    decodeArrayBuffer(arraybuffer, callback, errback) {\r\n        if (!this.offlineAc) {\r\n            this.offlineAc = this.getOfflineAudioContext(\r\n                this.ac && this.ac.sampleRate ? this.ac.sampleRate : 44100\r\n            );\r\n        }\r\n        if ('webkitAudioContext' in window) {\r\n            // Safari: no support for Promise-based decodeAudioData enabled\r\n            // Enable it in Safari using the Experimental Features > Modern WebAudio API option\r\n            this.offlineAc.decodeAudioData(\r\n                arraybuffer,\r\n                data => callback(data),\r\n                errback\r\n            );\r\n        } else {\r\n            this.offlineAc.decodeAudioData(arraybuffer).then(\r\n                (data) => callback(data)\r\n            ).catch(\r\n                (err) => errback(err)\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set pre-decoded peaks\r\n     *\r\n     * @param {number[]|Number.<Array[]>} peaks Peaks data\r\n     * @param {?number} duration Explicit duration\r\n     */\r\n    setPeaks(peaks, duration) {\r\n        if (duration != null) {\r\n            this.explicitDuration = duration;\r\n        }\r\n        this.peaks = peaks;\r\n    }\r\n\r\n    /**\r\n     * Set the rendered length (different from the length of the audio)\r\n     *\r\n     * @param {number} length The rendered length\r\n     */\r\n    setLength(length) {\r\n        // No resize, we can preserve the cached peaks.\r\n        if (this.mergedPeaks && length == 2 * this.mergedPeaks.length - 1 + 2) {\r\n            return;\r\n        }\r\n\r\n        this.splitPeaks = [];\r\n        this.mergedPeaks = [];\r\n        // Set the last element of the sparse array so the peak arrays are\r\n        // appropriately sized for other calculations.\r\n        const channels = this.buffer ? this.buffer.numberOfChannels : 1;\r\n        let c;\r\n        for (c = 0; c < channels; c++) {\r\n            this.splitPeaks[c] = [];\r\n            this.splitPeaks[c][2 * (length - 1)] = 0;\r\n            this.splitPeaks[c][2 * (length - 1) + 1] = 0;\r\n        }\r\n        this.mergedPeaks[2 * (length - 1)] = 0;\r\n        this.mergedPeaks[2 * (length - 1) + 1] = 0;\r\n    }\r\n\r\n    /**\r\n     * Compute the max and min value of the waveform when broken into <length> subranges.\r\n     *\r\n     * @param {number} length How many subranges to break the waveform into.\r\n     * @param {number} first First sample in the required range.\r\n     * @param {number} last Last sample in the required range.\r\n     * @return {number[]|Number.<Array[]>} Array of 2*<length> peaks or array of arrays of\r\n     * peaks consisting of (max, min) values for each subrange.\r\n     */\r\n    getPeaks(length, first, last) {\r\n        if (this.peaks) {\r\n            return this.peaks;\r\n        }\r\n        if (!this.buffer) {\r\n            return [];\r\n        }\r\n\r\n        first = first || 0;\r\n        last = last || length - 1;\r\n\r\n        this.setLength(length);\r\n\r\n        if (!this.buffer) {\r\n            return this.params.splitChannels\r\n                ? this.splitPeaks\r\n                : this.mergedPeaks;\r\n        }\r\n\r\n        /**\r\n         * The following snippet fixes a buffering data issue on the Safari\r\n         * browser which returned undefined It creates the missing buffer based\r\n         * on 1 channel, 4096 samples and the sampleRate from the current\r\n         * webaudio context 4096 samples seemed to be the best fit for rendering\r\n         * will review this code once a stable version of Safari TP is out\r\n         */\r\n        if (!this.buffer.length) {\r\n            const newBuffer = this.createBuffer(1, 4096, this.sampleRate);\r\n            this.buffer = newBuffer.buffer;\r\n        }\r\n\r\n        const sampleSize = this.buffer.length / length;\r\n        const sampleStep = ~~(sampleSize / 10) || 1;\r\n        const channels = this.buffer.numberOfChannels;\r\n        let c;\r\n\r\n        for (c = 0; c < channels; c++) {\r\n            const peaks = this.splitPeaks[c];\r\n            const chan = this.buffer.getChannelData(c);\r\n            let i;\r\n\r\n            for (i = first; i <= last; i++) {\r\n                const start = ~~(i * sampleSize);\r\n                const end = ~~(start + sampleSize);\r\n                /**\r\n                 * Initialize the max and min to the first sample of this\r\n                 * subrange, so that even if the samples are entirely\r\n                 * on one side of zero, we still return the true max and\r\n                 * min values in the subrange.\r\n                 */\r\n                let min = chan[start];\r\n                let max = min;\r\n                let j;\r\n\r\n                for (j = start; j < end; j += sampleStep) {\r\n                    const value = chan[j];\r\n\r\n                    if (value > max) {\r\n                        max = value;\r\n                    }\r\n\r\n                    if (value < min) {\r\n                        min = value;\r\n                    }\r\n                }\r\n\r\n                peaks[2 * i] = max;\r\n                peaks[2 * i + 1] = min;\r\n\r\n                if (c == 0 || max > this.mergedPeaks[2 * i]) {\r\n                    this.mergedPeaks[2 * i] = max;\r\n                }\r\n\r\n                if (c == 0 || min < this.mergedPeaks[2 * i + 1]) {\r\n                    this.mergedPeaks[2 * i + 1] = min;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this.params.splitChannels ? this.splitPeaks : this.mergedPeaks;\r\n    }\r\n\r\n    /**\r\n     * Get the position from 0 to 1\r\n     *\r\n     * @return {number} Position\r\n     */\r\n    getPlayedPercents() {\r\n        return this.state.getPlayedPercents.call(this);\r\n    }\r\n\r\n    /** @private */\r\n    disconnectSource() {\r\n        if (this.source) {\r\n            this.source.disconnect();\r\n        }\r\n    }\r\n    /**\r\n     * Destroy all references with WebAudio, disconnecting audio nodes and closing Audio Context\r\n     */\r\n    destroyWebAudio() {\r\n        this.disconnectFilters();\r\n        this.disconnectSource();\r\n        this.gainNode.disconnect();\r\n        this.scriptNode.disconnect();\r\n        this.analyser.disconnect();\r\n\r\n        // close the audioContext if closeAudioContext option is set to true\r\n        if (this.params.closeAudioContext) {\r\n            // check if browser supports AudioContext.close()\r\n            if (\r\n                typeof this.ac.close === 'function' &&\r\n                this.ac.state != 'closed'\r\n            ) {\r\n                this.ac.close();\r\n            }\r\n            // clear the reference to the audiocontext\r\n            this.ac = null;\r\n            // clear the actual audiocontext, either passed as param or the\r\n            // global singleton\r\n            if (!this.params.audioContext) {\r\n                window.WaveSurferAudioContext = null;\r\n            } else {\r\n                this.params.audioContext = null;\r\n            }\r\n            // clear the offlineAudioContext\r\n            window.WaveSurferOfflineAudioContext = null;\r\n        }\r\n    }\r\n    /**\r\n     * This is called when wavesurfer is destroyed\r\n     */\r\n    destroy() {\r\n        if (!this.isPaused()) {\r\n            this.pause();\r\n        }\r\n        this.unAll();\r\n        this.buffer = null;\r\n        this.destroyed = true;\r\n\r\n        this.destroyWebAudio();\r\n    }\r\n\r\n    /**\r\n     * Loaded a decoded audio buffer\r\n     *\r\n     * @param {Object} buffer Decoded audio buffer to load\r\n     */\r\n    load(buffer) {\r\n        this.startPosition = 0;\r\n        this.lastPlay = this.ac.currentTime;\r\n        this.buffer = buffer;\r\n        this.createSource();\r\n    }\r\n\r\n    /** @private */\r\n    createSource() {\r\n        this.disconnectSource();\r\n        this.source = this.ac.createBufferSource();\r\n\r\n        // adjust for old browsers\r\n        this.source.start = this.source.start || this.source.noteGrainOn;\r\n        this.source.stop = this.source.stop || this.source.noteOff;\r\n\r\n        this.setPlaybackRate(this.playbackRate);\r\n        this.source.buffer = this.buffer;\r\n        this.source.connect(this.analyser);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     *\r\n     * some browsers require an explicit call to #resume before they will play back audio\r\n     */\r\n    resumeAudioContext() {\r\n        if (this.ac.state == 'suspended') {\r\n            this.ac.resume && this.ac.resume();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Used by `wavesurfer.isPlaying()` and `wavesurfer.playPause()`\r\n     *\r\n     * @return {boolean} Whether or not this backend is currently paused\r\n     */\r\n    isPaused() {\r\n        return this.state !== this.states[PLAYING];\r\n    }\r\n\r\n    /**\r\n     * Used by `wavesurfer.getDuration()`\r\n     *\r\n     * @return {number} Duration of loaded buffer\r\n     */\r\n    getDuration() {\r\n        if (this.explicitDuration) {\r\n            return this.explicitDuration;\r\n        }\r\n        if (!this.buffer) {\r\n            return 0;\r\n        }\r\n        return this.buffer.duration;\r\n    }\r\n\r\n    /**\r\n     * Used by `wavesurfer.seekTo()`\r\n     *\r\n     * @param {number} start Position to start at in seconds\r\n     * @param {number} end Position to end at in seconds\r\n     * @return {{start: number, end: number}} Object containing start and end\r\n     * positions\r\n     */\r\n    seekTo(start, end) {\r\n        if (!this.buffer) {\r\n            return;\r\n        }\r\n\r\n        this.scheduledPause = null;\r\n\r\n        if (start == null) {\r\n            start = this.getCurrentTime();\r\n            if (start >= this.getDuration()) {\r\n                start = 0;\r\n            }\r\n        }\r\n        if (end == null) {\r\n            end = this.getDuration();\r\n        }\r\n\r\n        this.startPosition = start;\r\n        this.lastPlay = this.ac.currentTime;\r\n\r\n        if (this.state === this.states[FINISHED]) {\r\n            this.setState(PAUSED);\r\n        }\r\n\r\n        return {\r\n            start: start,\r\n            end: end\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Get the playback position in seconds\r\n     *\r\n     * @return {number} The playback position in seconds\r\n     */\r\n    getPlayedTime() {\r\n        return (this.ac.currentTime - this.lastPlay) * this.playbackRate;\r\n    }\r\n\r\n    /**\r\n     * Plays the loaded audio region.\r\n     *\r\n     * @param {number} start Start offset in seconds, relative to the beginning\r\n     * of a clip.\r\n     * @param {number} end When to stop relative to the beginning of a clip.\r\n     */\r\n    play(start, end) {\r\n        if (!this.buffer) {\r\n            return;\r\n        }\r\n\r\n        // need to re-create source on each playback\r\n        this.createSource();\r\n\r\n        const adjustedTime = this.seekTo(start, end);\r\n\r\n        start = adjustedTime.start;\r\n        end = adjustedTime.end;\r\n\r\n        this.scheduledPause = end;\r\n\r\n        this.source.start(0, start);\r\n\r\n        this.resumeAudioContext();\r\n\r\n        this.setState(PLAYING);\r\n\r\n        this.fireEvent('play');\r\n    }\r\n\r\n    /**\r\n     * Pauses the loaded audio.\r\n     */\r\n    pause() {\r\n        this.scheduledPause = null;\r\n\r\n        this.startPosition += this.getPlayedTime();\r\n        try {\r\n            this.source && this.source.stop(0);\r\n        } catch (err) {\r\n            // Calling stop can throw the following 2 errors:\r\n            // - RangeError (The value specified for when is negative.)\r\n            // - InvalidStateNode (The node has not been started by calling start().)\r\n            // We can safely ignore both errors, because:\r\n            // - The range is surely correct\r\n            // - The node might not have been started yet, in which case we just want to carry on without causing any trouble.\r\n        }\r\n\r\n        this.setState(PAUSED);\r\n\r\n        this.fireEvent('pause');\r\n    }\r\n\r\n    /**\r\n     * Returns the current time in seconds relative to the audio-clip's\r\n     * duration.\r\n     *\r\n     * @return {number} The current time in seconds\r\n     */\r\n    getCurrentTime() {\r\n        return this.state.getCurrentTime.call(this);\r\n    }\r\n\r\n    /**\r\n     * Returns the current playback rate. (0=no playback, 1=normal playback)\r\n     *\r\n     * @return {number} The current playback rate\r\n     */\r\n    getPlaybackRate() {\r\n        return this.playbackRate;\r\n    }\r\n\r\n    /**\r\n     * Set the audio source playback rate.\r\n     *\r\n     * @param {number} value The playback rate to use\r\n     */\r\n    setPlaybackRate(value) {\r\n        this.playbackRate = value || 1;\r\n        this.source && this.source.playbackRate.setValueAtTime(\r\n            this.playbackRate,\r\n            this.ac.currentTime\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Set a point in seconds for playback to stop at.\r\n     *\r\n     * @param {number} end Position to end at\r\n     * @version 3.3.0\r\n     */\r\n    setPlayEnd(end) {\r\n        this.scheduledPause = end;\r\n    }\r\n}\r\n","/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\nfunction debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function(){\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n  \n  debounced.flush = function() {\n    if (timeout) {\n      result = func.apply(context, args);\n      context = args = null;\n      \n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n\n// Adds compatibility for ES modules\ndebounce.debounce = debounce;\n\nmodule.exports = debounce;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import * as util from './util';\r\nimport MultiCanvas from './drawer.multicanvas';\r\nimport WebAudio from './webaudio';\r\nimport MediaElement from './mediaelement';\r\nimport PeakCache from './peakcache';\r\nimport MediaElementWebAudio from './mediaelement-webaudio';\r\n\r\n/*\r\n * This work is licensed under a BSD-3-Clause License.\r\n */\r\n\r\n/** @external {HTMLElement} https://developer.mozilla.org/en/docs/Web/API/HTMLElement */\r\n/** @external {OfflineAudioContext} https://developer.mozilla.org/en-US/docs/Web/API/OfflineAudioContext */\r\n/** @external {File} https://developer.mozilla.org/en-US/docs/Web/API/File */\r\n/** @external {Blob} https://developer.mozilla.org/en-US/docs/Web/API/Blob */\r\n/** @external {CanvasRenderingContext2D} https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D */\r\n/** @external {MediaStreamConstraints} https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamConstraints */\r\n/** @external {AudioNode} https://developer.mozilla.org/de/docs/Web/API/AudioNode */\r\n\r\n/**\r\n * @typedef {Object} WavesurferParams\r\n * @property {AudioContext} audioContext=null Use your own previously\r\n * initialized AudioContext or leave blank.\r\n * @property {number} audioRate=1 Speed at which to play audio. Lower number is\r\n * slower.\r\n * @property {ScriptProcessorNode} audioScriptProcessor=null Use your own previously\r\n * initialized ScriptProcessorNode or leave blank.\r\n * @property {boolean} autoCenter=true If a scrollbar is present, center the\r\n * waveform on current progress\r\n * @property {number} autoCenterRate=5 If autoCenter is active, rate at which the\r\n * waveform is centered\r\n * @property {boolean} autoCenterImmediately=false If autoCenter is active, immediately\r\n * center waveform on current progress\r\n * @property {string} backend='WebAudio' `'WebAudio'|'MediaElement'|'MediaElementWebAudio'` In most cases\r\n * you don't have to set this manually. MediaElement is a fallback for unsupported browsers.\r\n * MediaElementWebAudio allows to use WebAudio API also with big audio files, loading audio like with\r\n * MediaElement backend (HTML5 audio tag). You have to use the same methods of MediaElement backend for loading and\r\n * playback, giving also peaks, so the audio data are not decoded. In this way you can use WebAudio features, like filters,\r\n * also with audio with big duration. For example:\r\n * ` wavesurfer.load(url | HTMLMediaElement, peaks, preload, duration);\r\n *   wavesurfer.play();\r\n *   wavesurfer.setFilter(customFilter);\r\n * `\r\n * @property {string} backgroundColor=null Change background color of the\r\n * waveform container.\r\n * @property {number} barHeight=1 The height of the wave bars.\r\n * @property {number} barRadius=0 The radius of the wave bars. Makes bars rounded\r\n * @property {number} barGap=null The optional spacing between bars of the wave,\r\n * if not provided will be calculated in legacy format.\r\n * @property {number} barWidth=null Draw the waveform using bars.\r\n * @property {number} barMinHeight=null If specified, draw at least a bar of this height,\r\n * eliminating waveform gaps\r\n * @property {boolean} closeAudioContext=false Close and nullify all audio\r\n * contexts when the destroy method is called.\r\n * @property {!string|HTMLElement} container CSS selector or HTML element where\r\n * the waveform should be drawn. This is the only required parameter.\r\n * @property {string} cursorColor='#333' The fill color of the cursor indicating\r\n * the playhead position.\r\n * @property {number} cursorWidth=1 Measured in pixels.\r\n * @property {object} drawingContextAttributes={desynchronized: false} Drawing context\r\n * attributes.\r\n * @property {number} duration=null Optional audio length so pre-rendered peaks\r\n * can be display immediately for example.\r\n * @property {boolean} fillParent=true Whether to fill the entire container or\r\n * draw only according to `minPxPerSec`.\r\n * @property {boolean} forceDecode=false Force decoding of audio using web audio\r\n * when zooming to get a more detailed waveform.\r\n * @property {number} height=128 The height of the waveform. Measured in\r\n * pixels.\r\n * @property {boolean} hideScrollbar=false Whether to hide the horizontal\r\n * scrollbar when one would normally be shown.\r\n * @property {boolean} hideCursor=false Whether to hide the mouse cursor\r\n * when one would normally be shown by default.\r\n * @property {boolean} ignoreSilenceMode=false If true, ignores device silence mode\r\n * when using the `WebAudio` backend.\r\n * @property {boolean} interact=true Whether the mouse interaction will be\r\n * enabled at initialization. You can switch this parameter at any time later\r\n * on.\r\n * @property {boolean} loopSelection=true (Use with regions plugin) Enable\r\n * looping of selected regions\r\n * @property {number} maxCanvasWidth=4000 Maximum width of a single canvas in\r\n * pixels, excluding a small overlap (2 * `pixelRatio`, rounded up to the next\r\n * even integer). If the waveform is longer than this value, additional canvases\r\n * will be used to render the waveform, which is useful for very large waveforms\r\n * that may be too wide for browsers to draw on a single canvas.\r\n * @property {boolean} mediaControls=false (Use with backend `MediaElement` or `MediaElementWebAudio`)\r\n * this enables the native controls for the media element\r\n * @property {string} mediaType='audio' (Use with backend `MediaElement` or `MediaElementWebAudio`)\r\n * `'audio'|'video'` ('video' only for `MediaElement`)\r\n * @property {number} minPxPerSec=20 Minimum number of pixels per second of\r\n * audio.\r\n * @property {boolean} normalize=false If true, normalize by the maximum peak\r\n * instead of 1.0.\r\n * @property {boolean} partialRender=false Use the PeakCache to improve\r\n * rendering speed of large waveforms\r\n * @property {number} pixelRatio=window.devicePixelRatio The pixel ratio used to\r\n * calculate display\r\n * @property {PluginDefinition[]} plugins=[] An array of plugin definitions to\r\n * register during instantiation, they will be directly initialised unless they\r\n * are added with the `deferInit` property set to true.\r\n * @property {string} progressColor='#555' The fill color of the part of the\r\n * waveform behind the cursor. When `progressColor` and `waveColor` are the same\r\n * the progress wave is not rendered at all.\r\n * @property {boolean} removeMediaElementOnDestroy=true Set to false to keep the\r\n * media element in the DOM when the player is destroyed. This is useful when\r\n * reusing an existing media element via the `loadMediaElement` method.\r\n * @property {Object} renderer=MultiCanvas Can be used to inject a custom\r\n * renderer.\r\n * @property {boolean|number} responsive=false If set to `true` resize the\r\n * waveform, when the window is resized. This is debounced with a `100ms`\r\n * timeout by default. If this parameter is a number it represents that timeout.\r\n * @property {boolean} rtl=false If set to `true`, renders waveform from\r\n * right-to-left.\r\n * @property {boolean} scrollParent=false Whether to scroll the container with a\r\n * lengthy waveform. Otherwise the waveform is shrunk to the container width\r\n * (see fillParent).\r\n * @property {number} skipLength=2 Number of seconds to skip with the\r\n * skipForward() and skipBackward() methods.\r\n * @property {boolean} splitChannels=false Render with separate waveforms for\r\n * the channels of the audio\r\n * @property {SplitChannelOptions} splitChannelsOptions={} Options for splitChannel rendering\r\n * @property {boolean} vertical=false Render the waveform vertically instead of horizontally.\r\n * @property {string} waveColor='#999' The fill color of the waveform after the\r\n * cursor.\r\n * @property {object} xhr={} XHR options. For example:\r\n * `let xhr = {\r\n *     cache: 'default',\r\n *     mode: 'cors',\r\n *     method: 'GET',\r\n *     credentials: 'same-origin',\r\n *     redirect: 'follow',\r\n *     referrer: 'client',\r\n *     requestHeaders: [\r\n *         {\r\n *             key: 'Authorization',\r\n *             value: 'my-token'\r\n *         }\r\n *     ]\r\n * };`\r\n */\r\n\r\n/**\r\n * @typedef {Object} PluginDefinition\r\n * @desc The Object used to describe a plugin\r\n * @example wavesurfer.addPlugin(pluginDefinition);\r\n * @property {string} name The name of the plugin, the plugin instance will be\r\n * added as a property to the wavesurfer instance under this name\r\n * @property {?Object} staticProps The properties that should be added to the\r\n * wavesurfer instance as static properties\r\n * @property {?boolean} deferInit Don't initialise plugin\r\n * automatically\r\n * @property {Object} params={} The plugin parameters, they are the first parameter\r\n * passed to the plugin class constructor function\r\n * @property {PluginClass} instance The plugin instance factory, is called with\r\n * the dependency specified in extends. Returns the plugin class.\r\n */\r\n\r\n/**\r\n * @typedef {Object} SplitChannelOptions\r\n * @desc parameters applied when splitChannels option is true\r\n * @property {boolean} overlay=false determines whether channels are rendered on top of each other or on separate tracks\r\n * @property {object} channelColors={} object describing color for each channel. Example:\r\n * {\r\n *     0: {\r\n *         progressColor: 'green',\r\n *         waveColor: 'pink'\r\n *     },\r\n *     1: {\r\n *         progressColor: 'orange',\r\n *         waveColor: 'purple'\r\n *     }\r\n * }\r\n * @property {number[]} filterChannels=[] indexes of channels to be hidden from rendering\r\n * @property {boolean} relativeNormalization=false determines whether\r\n * normalization is done per channel or maintains proportionality between\r\n * channels. Only applied when normalize and splitChannels are both true.\r\n * @since 4.3.0\r\n */\r\n\r\n/**\r\n * @interface PluginClass\r\n *\r\n * @desc This is the interface which is implemented by all plugin classes. Note\r\n * that this only turns into an observer after being passed through\r\n * `wavesurfer.addPlugin`.\r\n *\r\n * @extends {Observer}\r\n */\r\nclass PluginClass {\r\n    /**\r\n     * Plugin definition factory\r\n     *\r\n     * This function must be used to create a plugin definition which can be\r\n     * used by wavesurfer to correctly instantiate the plugin.\r\n     *\r\n     * It returns a `PluginDefinition` object representing the plugin.\r\n     *\r\n     * @param {Object} params={} The plugin params (specific to the plugin)\r\n     */\r\n    create(params) {}\r\n    /**\r\n     * Construct the plugin\r\n     *\r\n     * @param {Object} params={} The plugin params (specific to the plugin)\r\n     * @param {Object} ws The wavesurfer instance\r\n     */\r\n    constructor(params, ws) {}\r\n    /**\r\n     * Initialise the plugin\r\n     *\r\n     * Start doing something. This is called by\r\n     * `wavesurfer.initPlugin(pluginName)`\r\n     */\r\n    init() {}\r\n    /**\r\n     * Destroy the plugin instance\r\n     *\r\n     * Stop doing something. This is called by\r\n     * `wavesurfer.destroyPlugin(pluginName)`\r\n     */\r\n    destroy() {}\r\n}\r\n\r\n/**\r\n * WaveSurfer core library class\r\n *\r\n * @extends {Observer}\r\n * @example\r\n * const params = {\r\n *   container: '#waveform',\r\n *   waveColor: 'violet',\r\n *   progressColor: 'purple'\r\n * };\r\n *\r\n * // initialise like this\r\n * const wavesurfer = WaveSurfer.create(params);\r\n *\r\n * // or like this ...\r\n * const wavesurfer = new WaveSurfer(params);\r\n * wavesurfer.init();\r\n *\r\n * // load audio file\r\n * wavesurfer.load('example/media/demo.wav');\r\n */\r\nexport default class WaveSurfer extends util.Observer {\r\n    /** @private */\r\n    defaultParams = {\r\n        audioContext: null,\r\n        audioScriptProcessor: null,\r\n        audioRate: 1,\r\n        autoCenter: true,\r\n        autoCenterRate: 5,\r\n        autoCenterImmediately: false,\r\n        backend: 'WebAudio',\r\n        backgroundColor: null,\r\n        barHeight: 1,\r\n        barRadius: 0,\r\n        barGap: null,\r\n        barMinHeight: null,\r\n        container: null,\r\n        cursorColor: '#333',\r\n        cursorWidth: 1,\r\n        dragSelection: true,\r\n        drawingContextAttributes: {\r\n            // Boolean that hints the user agent to reduce the latency\r\n            // by desynchronizing the canvas paint cycle from the event\r\n            // loop\r\n            desynchronized: false\r\n        },\r\n        duration: null,\r\n        fillParent: true,\r\n        forceDecode: false,\r\n        height: 128,\r\n        hideScrollbar: false,\r\n        hideCursor: false,\r\n        ignoreSilenceMode: false,\r\n        interact: true,\r\n        loopSelection: true,\r\n        maxCanvasWidth: 4000,\r\n        mediaContainer: null,\r\n        mediaControls: false,\r\n        mediaType: 'audio',\r\n        minPxPerSec: 20,\r\n        normalize: false,\r\n        partialRender: false,\r\n        pixelRatio:\r\n            window.devicePixelRatio || screen.deviceXDPI / screen.logicalXDPI,\r\n        plugins: [],\r\n        progressColor: '#555',\r\n        removeMediaElementOnDestroy: true,\r\n        renderer: MultiCanvas,\r\n        responsive: false,\r\n        rtl: false,\r\n        scrollParent: false,\r\n        skipLength: 2,\r\n        splitChannels: false,\r\n        splitChannelsOptions: {\r\n            overlay: false,\r\n            channelColors: {},\r\n            filterChannels: [],\r\n            relativeNormalization: false\r\n        },\r\n        vertical: false,\r\n        waveColor: '#999',\r\n        xhr: {}\r\n    };\r\n\r\n    /** @private */\r\n    backends = {\r\n        MediaElement,\r\n        WebAudio,\r\n        MediaElementWebAudio\r\n    };\r\n\r\n    /**\r\n     * Instantiate this class, call its `init` function and returns it\r\n     *\r\n     * @param {WavesurferParams} params The wavesurfer parameters\r\n     * @return {Object} WaveSurfer instance\r\n     * @example const wavesurfer = WaveSurfer.create(params);\r\n     */\r\n    static create(params) {\r\n        const wavesurfer = new WaveSurfer(params);\r\n        return wavesurfer.init();\r\n    }\r\n\r\n    /**\r\n     * The library version number is available as a static property of the\r\n     * WaveSurfer class\r\n     *\r\n     * @type {String}\r\n     * @example\r\n     * console.log('Using wavesurfer.js ' + WaveSurfer.VERSION);\r\n     */\r\n    static VERSION = __VERSION__;\r\n\r\n    /**\r\n     * Functions in the `util` property are available as a prototype property to\r\n     * all instances\r\n     *\r\n     * @type {Object}\r\n     * @example\r\n     * const wavesurfer = WaveSurfer.create(params);\r\n     * wavesurfer.util.style(myElement, { background: 'blue' });\r\n     */\r\n    util = util;\r\n\r\n    /**\r\n     * Functions in the `util` property are available as a static property of the\r\n     * WaveSurfer class\r\n     *\r\n     * @type {Object}\r\n     * @example\r\n     * WaveSurfer.util.style(myElement, { background: 'blue' });\r\n     */\r\n    static util = util;\r\n\r\n    /**\r\n     * Initialise wavesurfer instance\r\n     *\r\n     * @param {WavesurferParams} params Instantiation options for wavesurfer\r\n     * @example\r\n     * const wavesurfer = new WaveSurfer(params);\r\n     * @returns {this} Wavesurfer instance\r\n     */\r\n    constructor(params) {\r\n        super();\r\n        /**\r\n         * Extract relevant parameters (or defaults)\r\n         * @private\r\n         */\r\n        this.params = Object.assign({}, this.defaultParams, params);\r\n        this.params.splitChannelsOptions = Object.assign(\r\n            {},\r\n            this.defaultParams.splitChannelsOptions,\r\n            params.splitChannelsOptions\r\n        );\r\n        /** @private */\r\n        this.container =\r\n            'string' == typeof params.container\r\n                ? document.querySelector(this.params.container)\r\n                : this.params.container;\r\n\r\n        if (!this.container) {\r\n            throw new Error('Container element not found');\r\n        }\r\n\r\n        if (this.params.mediaContainer == null) {\r\n            /** @private */\r\n            this.mediaContainer = this.container;\r\n        } else if (typeof this.params.mediaContainer == 'string') {\r\n            /** @private */\r\n            this.mediaContainer = document.querySelector(\r\n                this.params.mediaContainer\r\n            );\r\n        } else {\r\n            /** @private */\r\n            this.mediaContainer = this.params.mediaContainer;\r\n        }\r\n\r\n        if (!this.mediaContainer) {\r\n            throw new Error('Media Container element not found');\r\n        }\r\n\r\n        if (this.params.maxCanvasWidth <= 1) {\r\n            throw new Error('maxCanvasWidth must be greater than 1');\r\n        } else if (this.params.maxCanvasWidth % 2 == 1) {\r\n            throw new Error('maxCanvasWidth must be an even number');\r\n        }\r\n\r\n        if (this.params.rtl === true) {\r\n            if (this.params.vertical === true) {\r\n                util.style(this.container, { transform: 'rotateX(180deg)' });\r\n            } else {\r\n                util.style(this.container, { transform: 'rotateY(180deg)' });\r\n            }\r\n        }\r\n\r\n        if (this.params.backgroundColor) {\r\n            this.setBackgroundColor(this.params.backgroundColor);\r\n        }\r\n\r\n        /**\r\n         * @private Used to save the current volume when muting so we can\r\n         * restore once unmuted\r\n         * @type {number}\r\n         */\r\n        this.savedVolume = 0;\r\n\r\n        /**\r\n         * @private The current muted state\r\n         * @type {boolean}\r\n         */\r\n        this.isMuted = false;\r\n\r\n        /**\r\n         * @private Will hold a list of event descriptors that need to be\r\n         * canceled on subsequent loads of audio\r\n         * @type {Object[]}\r\n         */\r\n        this.tmpEvents = [];\r\n\r\n        /**\r\n         * @private Holds any running audio downloads\r\n         * @type {Observer}\r\n         */\r\n        this.currentRequest = null;\r\n        /** @private */\r\n        this.arraybuffer = null;\r\n        /** @private */\r\n        this.drawer = null;\r\n        /** @private */\r\n        this.backend = null;\r\n        /** @private */\r\n        this.peakCache = null;\r\n\r\n        // cache constructor objects\r\n        if (typeof this.params.renderer !== 'function') {\r\n            throw new Error('Renderer parameter is invalid');\r\n        }\r\n        /**\r\n         * @private The uninitialised Drawer class\r\n         */\r\n        this.Drawer = this.params.renderer;\r\n        /**\r\n         * @private The uninitialised Backend class\r\n         */\r\n        // Back compat\r\n        if (this.params.backend == 'AudioElement') {\r\n            this.params.backend = 'MediaElement';\r\n        }\r\n\r\n        if (\r\n            (this.params.backend == 'WebAudio' ||\r\n                this.params.backend === 'MediaElementWebAudio') &&\r\n            !WebAudio.prototype.supportsWebAudio.call(null)\r\n        ) {\r\n            this.params.backend = 'MediaElement';\r\n        }\r\n        this.Backend = this.backends[this.params.backend];\r\n\r\n        /**\r\n         * @private map of plugin names that are currently initialised\r\n         */\r\n        this.initialisedPluginList = {};\r\n        /** @private */\r\n        this.isDestroyed = false;\r\n\r\n        /**\r\n         * Get the current ready status.\r\n         *\r\n         * @example const isReady = wavesurfer.isReady;\r\n         * @return {boolean}\r\n         */\r\n        this.isReady = false;\r\n\r\n        // responsive debounced event listener. If this.params.responsive is not\r\n        // set, this is never called. Use 100ms or this.params.responsive as\r\n        // timeout for the debounce function.\r\n        let prevWidth = 0;\r\n        this._onResize = util.debounce(\r\n            () => {\r\n                if (\r\n                    prevWidth != this.drawer.wrapper.clientWidth &&\r\n                    !this.params.scrollParent\r\n                ) {\r\n                    prevWidth = this.drawer.wrapper.clientWidth;\r\n                    this.drawer.fireEvent('redraw');\r\n                }\r\n            },\r\n            typeof this.params.responsive === 'number'\r\n                ? this.params.responsive\r\n                : 100\r\n        );\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Initialise the wave\r\n     *\r\n     * @example\r\n     * var wavesurfer = new WaveSurfer(params);\r\n     * wavesurfer.init();\r\n     * @return {this} The wavesurfer instance\r\n     */\r\n    init() {\r\n        this.registerPlugins(this.params.plugins);\r\n        this.createDrawer();\r\n        this.createBackend();\r\n        this.createPeakCache();\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Add and initialise array of plugins (if `plugin.deferInit` is falsey),\r\n     * this function is called in the init function of wavesurfer\r\n     *\r\n     * @param {PluginDefinition[]} plugins An array of plugin definitions\r\n     * @emits {WaveSurfer#plugins-registered} Called with the array of plugin definitions\r\n     * @return {this} The wavesurfer instance\r\n     */\r\n    registerPlugins(plugins) {\r\n        // first instantiate all the plugins\r\n        plugins.forEach(plugin => this.addPlugin(plugin));\r\n\r\n        // now run the init functions\r\n        plugins.forEach(plugin => {\r\n            // call init function of the plugin if deferInit is falsey\r\n            // in that case you would manually use initPlugins()\r\n            if (!plugin.deferInit) {\r\n                this.initPlugin(plugin.name);\r\n            }\r\n        });\r\n        this.fireEvent('plugins-registered', plugins);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Get a map of plugin names that are currently initialised\r\n     *\r\n     * @example wavesurfer.getPlugins();\r\n     * @return {Object} Object with plugin names\r\n     */\r\n    getActivePlugins() {\r\n        return this.initialisedPluginList;\r\n    }\r\n\r\n    /**\r\n     * Add a plugin object to wavesurfer\r\n     *\r\n     * @param {PluginDefinition} plugin A plugin definition\r\n     * @emits {WaveSurfer#plugin-added} Called with the name of the plugin that was added\r\n     * @example wavesurfer.addPlugin(WaveSurfer.minimap());\r\n     * @return {this} The wavesurfer instance\r\n     */\r\n    addPlugin(plugin) {\r\n        if (!plugin.name) {\r\n            throw new Error('Plugin does not have a name!');\r\n        }\r\n        if (!plugin.instance) {\r\n            throw new Error(\r\n                `Plugin ${plugin.name} does not have an instance property!`\r\n            );\r\n        }\r\n\r\n        // staticProps properties are applied to wavesurfer instance\r\n        if (plugin.staticProps) {\r\n            Object.keys(plugin.staticProps).forEach(pluginStaticProp => {\r\n                /**\r\n                 * Properties defined in a plugin definition's `staticProps` property are added as\r\n                 * staticProps properties of the WaveSurfer instance\r\n                 */\r\n                this[pluginStaticProp] = plugin.staticProps[pluginStaticProp];\r\n            });\r\n        }\r\n\r\n        const Instance = plugin.instance;\r\n\r\n        // turn the plugin instance into an observer\r\n        const observerPrototypeKeys = Object.getOwnPropertyNames(\r\n            util.Observer.prototype\r\n        );\r\n        observerPrototypeKeys.forEach(key => {\r\n            Instance.prototype[key] = util.Observer.prototype[key];\r\n        });\r\n\r\n        /**\r\n         * Instantiated plugin classes are added as a property of the wavesurfer\r\n         * instance\r\n         * @type {Object}\r\n         */\r\n        this[plugin.name] = new Instance(plugin.params || {}, this);\r\n        this.fireEvent('plugin-added', plugin.name);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Initialise a plugin\r\n     *\r\n     * @param {string} name A plugin name\r\n     * @emits WaveSurfer#plugin-initialised\r\n     * @example wavesurfer.initPlugin('minimap');\r\n     * @return {this} The wavesurfer instance\r\n     */\r\n    initPlugin(name) {\r\n        if (!this[name]) {\r\n            throw new Error(`Plugin ${name} has not been added yet!`);\r\n        }\r\n        if (this.initialisedPluginList[name]) {\r\n            // destroy any already initialised plugins\r\n            this.destroyPlugin(name);\r\n        }\r\n        this[name].init();\r\n        this.initialisedPluginList[name] = true;\r\n        this.fireEvent('plugin-initialised', name);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Destroy a plugin\r\n     *\r\n     * @param {string} name A plugin name\r\n     * @emits WaveSurfer#plugin-destroyed\r\n     * @example wavesurfer.destroyPlugin('minimap');\r\n     * @returns {this} The wavesurfer instance\r\n     */\r\n    destroyPlugin(name) {\r\n        if (!this[name]) {\r\n            throw new Error(\r\n                `Plugin ${name} has not been added yet and cannot be destroyed!`\r\n            );\r\n        }\r\n        if (!this.initialisedPluginList[name]) {\r\n            throw new Error(\r\n                `Plugin ${name} is not active and cannot be destroyed!`\r\n            );\r\n        }\r\n        if (typeof this[name].destroy !== 'function') {\r\n            throw new Error(`Plugin ${name} does not have a destroy function!`);\r\n        }\r\n\r\n        this[name].destroy();\r\n        delete this.initialisedPluginList[name];\r\n        this.fireEvent('plugin-destroyed', name);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Destroy all initialised plugins. Convenience function to use when\r\n     * wavesurfer is removed\r\n     *\r\n     * @private\r\n     */\r\n    destroyAllPlugins() {\r\n        Object.keys(this.initialisedPluginList).forEach(name =>\r\n            this.destroyPlugin(name)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Create the drawer and draw the waveform\r\n     *\r\n     * @private\r\n     * @emits WaveSurfer#drawer-created\r\n     */\r\n    createDrawer() {\r\n        this.drawer = new this.Drawer(this.container, this.params);\r\n        this.drawer.init();\r\n        this.fireEvent('drawer-created', this.drawer);\r\n\r\n        if (this.params.responsive !== false) {\r\n            window.addEventListener('resize', this._onResize, true);\r\n            window.addEventListener('orientationchange', this._onResize, true);\r\n        }\r\n\r\n        this.drawer.on('redraw', () => {\r\n            this.drawBuffer();\r\n            this.drawer.progress(this.backend.getPlayedPercents());\r\n        });\r\n\r\n        // Click-to-seek\r\n        this.drawer.on('click', (e, progress) => {\r\n            setTimeout(() => this.seekTo(progress), 0);\r\n        });\r\n\r\n        // Relay the scroll event from the drawer\r\n        this.drawer.on('scroll', e => {\r\n            if (this.params.partialRender) {\r\n                this.drawBuffer();\r\n            }\r\n            this.fireEvent('scroll', e);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Create the backend\r\n     *\r\n     * @private\r\n     * @emits WaveSurfer#backend-created\r\n     */\r\n    createBackend() {\r\n        if (this.backend) {\r\n            this.backend.destroy();\r\n        }\r\n\r\n        this.backend = new this.Backend(this.params);\r\n        this.backend.init();\r\n        this.fireEvent('backend-created', this.backend);\r\n\r\n        this.backend.on('finish', () => {\r\n            this.drawer.progress(this.backend.getPlayedPercents());\r\n            this.fireEvent('finish');\r\n        });\r\n        this.backend.on('play', () => this.fireEvent('play'));\r\n        this.backend.on('pause', () => this.fireEvent('pause'));\r\n\r\n        this.backend.on('audioprocess', time => {\r\n            this.drawer.progress(this.backend.getPlayedPercents());\r\n            this.fireEvent('audioprocess', time);\r\n        });\r\n\r\n        // only needed for MediaElement and MediaElementWebAudio backend\r\n        if (\r\n            this.params.backend === 'MediaElement' ||\r\n            this.params.backend === 'MediaElementWebAudio'\r\n        ) {\r\n            this.backend.on('seek', () => {\r\n                this.drawer.progress(this.backend.getPlayedPercents());\r\n            });\r\n\r\n            this.backend.on('volume', () => {\r\n                let newVolume = this.getVolume();\r\n                this.fireEvent('volume', newVolume);\r\n\r\n                if (this.backend.isMuted !== this.isMuted) {\r\n                    this.isMuted = this.backend.isMuted;\r\n                    this.fireEvent('mute', this.isMuted);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create the peak cache\r\n     *\r\n     * @private\r\n     */\r\n    createPeakCache() {\r\n        if (this.params.partialRender) {\r\n            this.peakCache = new PeakCache();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the duration of the audio clip\r\n     *\r\n     * @example const duration = wavesurfer.getDuration();\r\n     * @return {number} Duration in seconds\r\n     */\r\n    getDuration() {\r\n        return this.backend.getDuration();\r\n    }\r\n\r\n    /**\r\n     * Get the current playback position\r\n     *\r\n     * @example const currentTime = wavesurfer.getCurrentTime();\r\n     * @return {number} Playback position in seconds\r\n     */\r\n    getCurrentTime() {\r\n        return this.backend.getCurrentTime();\r\n    }\r\n\r\n    /**\r\n     * Set the current play time in seconds.\r\n     *\r\n     * @param {number} seconds A positive number in seconds. E.g. 10 means 10\r\n     * seconds, 60 means 1 minute\r\n     */\r\n    setCurrentTime(seconds) {\r\n        if (seconds >= this.getDuration()) {\r\n            this.seekTo(1);\r\n        } else {\r\n            this.seekTo(seconds / this.getDuration());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Starts playback from the current position. Optional start and end\r\n     * measured in seconds can be used to set the range of audio to play.\r\n     *\r\n     * @param {?number} start Position to start at\r\n     * @param {?number} end Position to end at\r\n     * @emits WaveSurfer#interaction\r\n     * @return {Promise} Result of the backend play method\r\n     * @example\r\n     * // play from second 1 to 5\r\n     * wavesurfer.play(1, 5);\r\n     */\r\n    play(start, end) {\r\n        if (this.params.ignoreSilenceMode) {\r\n            // ignores device hardware silence mode\r\n            util.ignoreSilenceMode();\r\n        }\r\n\r\n        this.fireEvent('interaction', () => this.play(start, end));\r\n        return this.backend.play(start, end);\r\n    }\r\n\r\n    /**\r\n     * Set a point in seconds for playback to stop at.\r\n     *\r\n     * @param {number} position Position (in seconds) to stop at\r\n     * @version 3.3.0\r\n     */\r\n    setPlayEnd(position) {\r\n        this.backend.setPlayEnd(position);\r\n    }\r\n\r\n    /**\r\n     * Stops and pauses playback\r\n     *\r\n     * @example wavesurfer.pause();\r\n     * @return {Promise} Result of the backend pause method\r\n     */\r\n    pause() {\r\n        if (!this.backend.isPaused()) {\r\n            return this.backend.pause();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Toggle playback\r\n     *\r\n     * @example wavesurfer.playPause();\r\n     * @return {Promise} Result of the backend play or pause method\r\n     */\r\n    playPause() {\r\n        return this.backend.isPaused() ? this.play() : this.pause();\r\n    }\r\n\r\n    /**\r\n     * Get the current playback state\r\n     *\r\n     * @example const isPlaying = wavesurfer.isPlaying();\r\n     * @return {boolean} False if paused, true if playing\r\n     */\r\n    isPlaying() {\r\n        return !this.backend.isPaused();\r\n    }\r\n\r\n    /**\r\n     * Skip backward\r\n     *\r\n     * @param {?number} seconds Amount to skip back, if not specified `skipLength`\r\n     * is used\r\n     * @example wavesurfer.skipBackward();\r\n     */\r\n    skipBackward(seconds) {\r\n        this.skip(-seconds || -this.params.skipLength);\r\n    }\r\n\r\n    /**\r\n     * Skip forward\r\n     *\r\n     * @param {?number} seconds Amount to skip back, if not specified `skipLength`\r\n     * is used\r\n     * @example wavesurfer.skipForward();\r\n     */\r\n    skipForward(seconds) {\r\n        this.skip(seconds || this.params.skipLength);\r\n    }\r\n\r\n    /**\r\n     * Skip a number of seconds from the current position (use a negative value\r\n     * to go backwards).\r\n     *\r\n     * @param {number} offset Amount to skip back or forwards\r\n     * @example\r\n     * // go back 2 seconds\r\n     * wavesurfer.skip(-2);\r\n     */\r\n    skip(offset) {\r\n        const duration = this.getDuration() || 1;\r\n        let position = this.getCurrentTime() || 0;\r\n        position = Math.max(0, Math.min(duration, position + (offset || 0)));\r\n        this.seekAndCenter(position / duration);\r\n    }\r\n\r\n    /**\r\n     * Seeks to a position and centers the view\r\n     *\r\n     * @param {number} progress Between 0 (=beginning) and 1 (=end)\r\n     * @example\r\n     * // seek and go to the middle of the audio\r\n     * wavesurfer.seekTo(0.5);\r\n     */\r\n    seekAndCenter(progress) {\r\n        this.seekTo(progress);\r\n        this.drawer.recenter(progress);\r\n    }\r\n\r\n    /**\r\n     * Seeks to a position\r\n     *\r\n     * @param {number} progress Between 0 (=beginning) and 1 (=end)\r\n     * @emits WaveSurfer#interaction\r\n     * @emits WaveSurfer#seek\r\n     * @example\r\n     * // seek to the middle of the audio\r\n     * wavesurfer.seekTo(0.5);\r\n     */\r\n    seekTo(progress) {\r\n        // return an error if progress is not a number between 0 and 1\r\n        if (\r\n            typeof progress !== 'number' ||\r\n            !isFinite(progress) ||\r\n            progress < 0 ||\r\n            progress > 1\r\n        ) {\r\n            throw new Error(\r\n                'Error calling wavesurfer.seekTo, parameter must be a number between 0 and 1!'\r\n            );\r\n        }\r\n        this.fireEvent('interaction', () => this.seekTo(progress));\r\n\r\n        const isWebAudioBackend = this.params.backend === 'WebAudio';\r\n        const paused = this.backend.isPaused();\r\n\r\n        if (isWebAudioBackend && !paused) {\r\n            this.backend.pause();\r\n        }\r\n\r\n        // avoid small scrolls while paused seeking\r\n        const oldScrollParent = this.params.scrollParent;\r\n        this.params.scrollParent = false;\r\n        this.backend.seekTo(progress * this.getDuration());\r\n        this.drawer.progress(progress);\r\n\r\n        if (isWebAudioBackend && !paused) {\r\n            this.backend.play();\r\n        }\r\n\r\n        this.params.scrollParent = oldScrollParent;\r\n        this.fireEvent('seek', progress);\r\n    }\r\n\r\n    /**\r\n     * Stops and goes to the beginning.\r\n     *\r\n     * @example wavesurfer.stop();\r\n     */\r\n    stop() {\r\n        this.pause();\r\n        this.seekTo(0);\r\n        this.drawer.progress(0);\r\n    }\r\n\r\n    /**\r\n     * Sets the ID of the audio device to use for output and returns a Promise.\r\n     *\r\n     * @param {string} deviceId String value representing underlying output\r\n     * device\r\n     * @returns {Promise} `Promise` that resolves to `undefined` when there are\r\n     * no errors detected.\r\n     */\r\n    setSinkId(deviceId) {\r\n        return this.backend.setSinkId(deviceId);\r\n    }\r\n\r\n    /**\r\n     * Set the playback volume.\r\n     *\r\n     * @param {number} newVolume A value between 0 and 1, 0 being no\r\n     * volume and 1 being full volume.\r\n     * @emits WaveSurfer#volume\r\n     */\r\n    setVolume(newVolume) {\r\n        this.backend.setVolume(newVolume);\r\n        this.fireEvent('volume', newVolume);\r\n    }\r\n\r\n    /**\r\n     * Get the playback volume.\r\n     *\r\n     * @return {number} A value between 0 and 1, 0 being no\r\n     * volume and 1 being full volume.\r\n     */\r\n    getVolume() {\r\n        return this.backend.getVolume();\r\n    }\r\n\r\n    /**\r\n     * Set the playback rate.\r\n     *\r\n     * @param {number} rate A positive number. E.g. 0.5 means half the normal\r\n     * speed, 2 means double speed and so on.\r\n     * @example wavesurfer.setPlaybackRate(2);\r\n     */\r\n    setPlaybackRate(rate) {\r\n        this.backend.setPlaybackRate(rate);\r\n    }\r\n\r\n    /**\r\n     * Get the playback rate.\r\n     *\r\n     * @return {number} The current playback rate.\r\n     */\r\n    getPlaybackRate() {\r\n        return this.backend.getPlaybackRate();\r\n    }\r\n\r\n    /**\r\n     * Toggle the volume on and off. If not currently muted it will save the\r\n     * current volume value and turn the volume off. If currently muted then it\r\n     * will restore the volume to the saved value, and then rest the saved\r\n     * value.\r\n     *\r\n     * @example wavesurfer.toggleMute();\r\n     */\r\n    toggleMute() {\r\n        this.setMute(!this.isMuted);\r\n    }\r\n\r\n    /**\r\n     * Enable or disable muted audio\r\n     *\r\n     * @param {boolean} mute Specify `true` to mute audio.\r\n     * @emits WaveSurfer#volume\r\n     * @emits WaveSurfer#mute\r\n     * @example\r\n     * // unmute\r\n     * wavesurfer.setMute(false);\r\n     * console.log(wavesurfer.getMute()) // logs false\r\n     */\r\n    setMute(mute) {\r\n        // ignore all muting requests if the audio is already in that state\r\n        if (mute === this.isMuted) {\r\n            this.fireEvent('mute', this.isMuted);\r\n            return;\r\n        }\r\n\r\n        if (this.backend.setMute) {\r\n            // Backends such as the MediaElement backend have their own handling\r\n            // of mute, let them handle it.\r\n            this.backend.setMute(mute);\r\n            this.isMuted = mute;\r\n        } else {\r\n            if (mute) {\r\n                // If currently not muted then save current volume,\r\n                // turn off the volume and update the mute properties\r\n                this.savedVolume = this.backend.getVolume();\r\n                this.backend.setVolume(0);\r\n                this.isMuted = true;\r\n                this.fireEvent('volume', 0);\r\n            } else {\r\n                // If currently muted then restore to the saved volume\r\n                // and update the mute properties\r\n                this.backend.setVolume(this.savedVolume);\r\n                this.isMuted = false;\r\n                this.fireEvent('volume', this.savedVolume);\r\n            }\r\n        }\r\n        this.fireEvent('mute', this.isMuted);\r\n    }\r\n\r\n    /**\r\n     * Get the current mute status.\r\n     *\r\n     * @example const isMuted = wavesurfer.getMute();\r\n     * @return {boolean} Current mute status\r\n     */\r\n    getMute() {\r\n        return this.isMuted;\r\n    }\r\n\r\n    /**\r\n     * Get the list of current set filters as an array.\r\n     *\r\n     * Filters must be set with setFilters method first\r\n     *\r\n     * @return {array} List of enabled filters\r\n     */\r\n    getFilters() {\r\n        return this.backend.filters || [];\r\n    }\r\n\r\n    /**\r\n     * Toggles `scrollParent` and redraws\r\n     *\r\n     * @example wavesurfer.toggleScroll();\r\n     */\r\n    toggleScroll() {\r\n        this.params.scrollParent = !this.params.scrollParent;\r\n        this.drawBuffer();\r\n    }\r\n\r\n    /**\r\n     * Toggle mouse interaction\r\n     *\r\n     * @example wavesurfer.toggleInteraction();\r\n     */\r\n    toggleInteraction() {\r\n        this.params.interact = !this.params.interact;\r\n    }\r\n\r\n    /**\r\n     * Get the fill color of the waveform after the cursor.\r\n     *\r\n     * @param {?number} channelIdx Optional index of the channel to get its wave color if splitChannels is true\r\n     * @return {string|object} A CSS color string, or an array of CSS color strings.\r\n     */\r\n    getWaveColor(channelIdx = null) {\r\n        if (this.params.splitChannelsOptions.channelColors[channelIdx]) {\r\n            return this.params.splitChannelsOptions.channelColors[channelIdx].waveColor;\r\n        }\r\n        return this.params.waveColor;\r\n    }\r\n\r\n    /**\r\n     * Set the fill color of the waveform after the cursor.\r\n     *\r\n     * @param {string|object} color A CSS color string, or an array of CSS color strings.\r\n     * @param {?number} channelIdx Optional index of the channel to set its wave color if splitChannels is true\r\n     * @example wavesurfer.setWaveColor('#ddd');\r\n     */\r\n    setWaveColor(color, channelIdx = null) {\r\n        if (this.params.splitChannelsOptions.channelColors[channelIdx]) {\r\n            this.params.splitChannelsOptions.channelColors[channelIdx].waveColor = color;\r\n        } else {\r\n            this.params.waveColor = color;\r\n        }\r\n        this.drawBuffer();\r\n    }\r\n\r\n    /**\r\n     * Get the fill color of the waveform behind the cursor.\r\n     *\r\n     * @param {?number} channelIdx Optional index of the channel to get its progress color if splitChannels is true\r\n     * @return {string|object} A CSS color string, or an array of CSS color strings.\r\n     */\r\n    getProgressColor(channelIdx = null) {\r\n        if (this.params.splitChannelsOptions.channelColors[channelIdx]) {\r\n            return this.params.splitChannelsOptions.channelColors[channelIdx].progressColor;\r\n        }\r\n        return this.params.progressColor;\r\n    }\r\n\r\n    /**\r\n     * Set the fill color of the waveform behind the cursor.\r\n     *\r\n     * @param {string|object} color A CSS color string, or an array of CSS color strings.\r\n     * @param {?number} channelIdx Optional index of the channel to set its progress color if splitChannels is true\r\n     * @example wavesurfer.setProgressColor('#400');\r\n     */\r\n    setProgressColor(color, channelIdx) {\r\n        if (this.params.splitChannelsOptions.channelColors[channelIdx]) {\r\n            this.params.splitChannelsOptions.channelColors[channelIdx].progressColor = color;\r\n        } else {\r\n            this.params.progressColor = color;\r\n        }\r\n        this.drawBuffer();\r\n    }\r\n\r\n    /**\r\n     * Get the background color of the waveform container.\r\n     *\r\n     * @return {string} A CSS color string.\r\n     */\r\n    getBackgroundColor() {\r\n        return this.params.backgroundColor;\r\n    }\r\n\r\n    /**\r\n     * Set the background color of the waveform container.\r\n     *\r\n     * @param {string} color A CSS color string.\r\n     * @example wavesurfer.setBackgroundColor('#FF00FF');\r\n     */\r\n    setBackgroundColor(color) {\r\n        this.params.backgroundColor = color;\r\n        util.style(this.container, { background: this.params.backgroundColor });\r\n    }\r\n\r\n    /**\r\n     * Get the fill color of the cursor indicating the playhead\r\n     * position.\r\n     *\r\n     * @return {string} A CSS color string.\r\n     */\r\n    getCursorColor() {\r\n        return this.params.cursorColor;\r\n    }\r\n\r\n    /**\r\n     * Set the fill color of the cursor indicating the playhead\r\n     * position.\r\n     *\r\n     * @param {string} color A CSS color string.\r\n     * @example wavesurfer.setCursorColor('#222');\r\n     */\r\n    setCursorColor(color) {\r\n        this.params.cursorColor = color;\r\n        this.drawer.updateCursor();\r\n    }\r\n\r\n    /**\r\n     * Get the height of the waveform.\r\n     *\r\n     * @return {number} Height measured in pixels.\r\n     */\r\n    getHeight() {\r\n        return this.params.height;\r\n    }\r\n\r\n    /**\r\n     * Set the height of the waveform.\r\n     *\r\n     * @param {number} height Height measured in pixels.\r\n     * @example wavesurfer.setHeight(200);\r\n     */\r\n    setHeight(height) {\r\n        this.params.height = height;\r\n        this.drawer.setHeight(height * this.params.pixelRatio);\r\n        this.drawBuffer();\r\n    }\r\n\r\n    /**\r\n     * Hide channels from being drawn on the waveform if splitting channels.\r\n     *\r\n     * For example, if we want to draw only the peaks for the right stereo channel:\r\n     *\r\n     * const wavesurfer = new WaveSurfer.create({...splitChannels: true});\r\n     * wavesurfer.load('stereo_audio.mp3');\r\n     *\r\n     * wavesurfer.setFilteredChannel([0]); <-- hide left channel peaks.\r\n     *\r\n     * @param {array} channelIndices Channels to be filtered out from drawing.\r\n     * @version 4.0.0\r\n     */\r\n    setFilteredChannels(channelIndices) {\r\n        this.params.splitChannelsOptions.filterChannels = channelIndices;\r\n        this.drawBuffer();\r\n    }\r\n\r\n    /**\r\n     * Get the correct peaks for current wave view-port and render wave\r\n     *\r\n     * @private\r\n     * @emits WaveSurfer#redraw\r\n     */\r\n    drawBuffer() {\r\n        const nominalWidth = Math.round(\r\n            this.getDuration() *\r\n                this.params.minPxPerSec *\r\n                this.params.pixelRatio\r\n        );\r\n        const parentWidth = this.drawer.getWidth();\r\n        let width = nominalWidth;\r\n        // always start at 0 after zooming for scrolling : issue redraw left part\r\n        let start = 0;\r\n        let end = Math.max(start + parentWidth, width);\r\n        // Fill container\r\n        if (\r\n            this.params.fillParent &&\r\n            (!this.params.scrollParent || nominalWidth < parentWidth)\r\n        ) {\r\n            width = parentWidth;\r\n            start = 0;\r\n            end = width;\r\n        }\r\n\r\n        let peaks;\r\n        if (this.params.partialRender) {\r\n            const newRanges = this.peakCache.addRangeToPeakCache(\r\n                width,\r\n                start,\r\n                end\r\n            );\r\n            let i;\r\n            for (i = 0; i < newRanges.length; i++) {\r\n                peaks = this.backend.getPeaks(\r\n                    width,\r\n                    newRanges[i][0],\r\n                    newRanges[i][1]\r\n                );\r\n                this.drawer.drawPeaks(\r\n                    peaks,\r\n                    width,\r\n                    newRanges[i][0],\r\n                    newRanges[i][1]\r\n                );\r\n            }\r\n        } else {\r\n            peaks = this.backend.getPeaks(width, start, end);\r\n            this.drawer.drawPeaks(peaks, width, start, end);\r\n        }\r\n        this.fireEvent('redraw', peaks, width);\r\n    }\r\n\r\n    /**\r\n     * Horizontally zooms the waveform in and out. It also changes the parameter\r\n     * `minPxPerSec` and enables the `scrollParent` option. Calling the function\r\n     * with a falsey parameter will reset the zoom state.\r\n     *\r\n     * @param {?number} pxPerSec Number of horizontal pixels per second of\r\n     * audio, if none is set the waveform returns to unzoomed state\r\n     * @emits WaveSurfer#zoom\r\n     * @example wavesurfer.zoom(20);\r\n     */\r\n    zoom(pxPerSec) {\r\n        if (!pxPerSec) {\r\n            this.params.minPxPerSec = this.defaultParams.minPxPerSec;\r\n            this.params.scrollParent = false;\r\n        } else {\r\n            this.params.minPxPerSec = pxPerSec;\r\n            this.params.scrollParent = true;\r\n        }\r\n\r\n        this.drawBuffer();\r\n        this.drawer.progress(this.backend.getPlayedPercents());\r\n\r\n        this.drawer.recenter(this.getCurrentTime() / this.getDuration());\r\n        this.fireEvent('zoom', pxPerSec);\r\n    }\r\n\r\n    /**\r\n     * Decode buffer and load\r\n     *\r\n     * @private\r\n     * @param {ArrayBuffer} arraybuffer Buffer to process\r\n     */\r\n    loadArrayBuffer(arraybuffer) {\r\n        this.decodeArrayBuffer(arraybuffer, data => {\r\n            if (!this.isDestroyed) {\r\n                this.loadDecodedBuffer(data);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Directly load an externally decoded AudioBuffer\r\n     *\r\n     * @private\r\n     * @param {AudioBuffer} buffer Buffer to process\r\n     * @emits WaveSurfer#ready\r\n     */\r\n    loadDecodedBuffer(buffer) {\r\n        this.backend.load(buffer);\r\n        this.drawBuffer();\r\n        this.isReady = true;\r\n        this.fireEvent('ready');\r\n    }\r\n\r\n    /**\r\n     * Loads audio data from a Blob or File object\r\n     *\r\n     * @param {Blob|File} blob Audio data\r\n     * @example\r\n     */\r\n    loadBlob(blob) {\r\n        // Create file reader\r\n        const reader = new FileReader();\r\n        reader.addEventListener('progress', e => this.onProgress(e));\r\n        reader.addEventListener('load', e =>\r\n            this.loadArrayBuffer(e.target.result)\r\n        );\r\n        reader.addEventListener('error', () =>\r\n            this.fireEvent('error', 'Error reading file')\r\n        );\r\n        reader.readAsArrayBuffer(blob);\r\n        this.empty();\r\n    }\r\n\r\n    /**\r\n     * Loads audio and re-renders the waveform.\r\n     *\r\n     * @param {string|HTMLMediaElement} url The url of the audio file or the\r\n     * audio element with the audio\r\n     * @param {number[]|Number.<Array[]>} peaks Wavesurfer does not have to decode\r\n     * the audio to render the waveform if this is specified\r\n     * @param {?string} preload (Use with backend `MediaElement` and `MediaElementWebAudio`)\r\n     * `'none'|'metadata'|'auto'` Preload attribute for the media element\r\n     * @param {?number} duration The duration of the audio. This is used to\r\n     * render the peaks data in the correct size for the audio duration (as\r\n     * befits the current `minPxPerSec` and zoom value) without having to decode\r\n     * the audio.\r\n     * @returns {void}\r\n     * @throws Will throw an error if the `url` argument is empty.\r\n     * @example\r\n     * // uses fetch or media element to load file (depending on backend)\r\n     * wavesurfer.load('http://example.com/demo.wav');\r\n     *\r\n     * // setting preload attribute with media element backend and supplying\r\n     * // peaks\r\n     * wavesurfer.load(\r\n     *   'http://example.com/demo.wav',\r\n     *   [0.0218, 0.0183, 0.0165, 0.0198, 0.2137, 0.2888],\r\n     *   true\r\n     * );\r\n     */\r\n    load(url, peaks, preload, duration) {\r\n        if (!url) {\r\n            throw new Error('url parameter cannot be empty');\r\n        }\r\n        this.empty();\r\n        if (preload) {\r\n            // check whether the preload attribute will be usable and if not log\r\n            // a warning listing the reasons why not and nullify the variable\r\n            const preloadIgnoreReasons = {\r\n                \"Preload is not 'auto', 'none' or 'metadata'\":\r\n                    ['auto', 'metadata', 'none'].indexOf(preload) === -1,\r\n                'Peaks are not provided': !peaks,\r\n                \"Backend is not of type 'MediaElement' or 'MediaElementWebAudio'\":\r\n                    ['MediaElement', 'MediaElementWebAudio'].indexOf(\r\n                        this.params.backend\r\n                    ) === -1,\r\n                'Url is not of type string': typeof url !== 'string'\r\n            };\r\n            const activeReasons = Object.keys(preloadIgnoreReasons).filter(\r\n                reason => preloadIgnoreReasons[reason]\r\n            );\r\n            if (activeReasons.length) {\r\n                // eslint-disable-next-line no-console\r\n                console.warn(\r\n                    'Preload parameter of wavesurfer.load will be ignored because:\\n\\t- ' +\r\n                        activeReasons.join('\\n\\t- ')\r\n                );\r\n                // stop invalid values from being used\r\n                preload = null;\r\n            }\r\n        }\r\n\r\n        // loadBuffer(url, peaks, duration) requires that url is a string\r\n        // but users can pass in a HTMLMediaElement to WaveSurfer\r\n        if (this.params.backend === 'WebAudio' && url instanceof HTMLMediaElement) {\r\n            url = url.src;\r\n        }\r\n\r\n        switch (this.params.backend) {\r\n            case 'WebAudio':\r\n                return this.loadBuffer(url, peaks, duration);\r\n            case 'MediaElement':\r\n            case 'MediaElementWebAudio':\r\n                return this.loadMediaElement(url, peaks, preload, duration);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Loads audio using Web Audio buffer backend.\r\n     *\r\n     * @private\r\n     * @emits WaveSurfer#waveform-ready\r\n     * @param {string} url URL of audio file\r\n     * @param {number[]|Number.<Array[]>} peaks Peaks data\r\n     * @param {?number} duration Optional duration of audio file\r\n     * @returns {void}\r\n     */\r\n    loadBuffer(url, peaks, duration) {\r\n        const load = action => {\r\n            if (action) {\r\n                this.tmpEvents.push(this.once('ready', action));\r\n            }\r\n            return this.getArrayBuffer(url, data => this.loadArrayBuffer(data));\r\n        };\r\n\r\n        if (peaks) {\r\n            this.backend.setPeaks(peaks, duration);\r\n            this.drawBuffer();\r\n            this.fireEvent('waveform-ready');\r\n            this.tmpEvents.push(this.once('interaction', load));\r\n        } else {\r\n            return load();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Either create a media element, or load an existing media element.\r\n     *\r\n     * @private\r\n     * @emits WaveSurfer#waveform-ready\r\n     * @param {string|HTMLMediaElement} urlOrElt Either a path to a media file, or an\r\n     * existing HTML5 Audio/Video Element\r\n     * @param {number[]|Number.<Array[]>} peaks Array of peaks. Required to bypass web audio\r\n     * dependency\r\n     * @param {?boolean} preload Set to true if the preload attribute of the\r\n     * audio element should be enabled\r\n     * @param {?number} duration Optional duration of audio file\r\n     */\r\n    loadMediaElement(urlOrElt, peaks, preload, duration) {\r\n        let url = urlOrElt;\r\n\r\n        if (typeof urlOrElt === 'string') {\r\n            this.backend.load(url, this.mediaContainer, peaks, preload);\r\n        } else {\r\n            const elt = urlOrElt;\r\n            this.backend.loadElt(elt, peaks);\r\n\r\n            // If peaks are not provided,\r\n            // url = element.src so we can get peaks with web audio\r\n            url = elt.src;\r\n        }\r\n\r\n        this.tmpEvents.push(\r\n            this.backend.once('canplay', () => {\r\n                // ignore when backend was already destroyed\r\n                if (!this.backend.destroyed) {\r\n                    this.drawBuffer();\r\n                    this.isReady = true;\r\n                    this.fireEvent('ready');\r\n                }\r\n            }),\r\n            this.backend.once('error', err => this.fireEvent('error', err))\r\n        );\r\n\r\n        // If peaks are provided, render them and fire the `waveform-ready` event.\r\n        if (peaks) {\r\n            this.backend.setPeaks(peaks, duration);\r\n            this.drawBuffer();\r\n            this.fireEvent('waveform-ready');\r\n        }\r\n\r\n        // If no pre-decoded peaks are provided, or are provided with\r\n        // forceDecode flag, attempt to download the audio file and decode it\r\n        // with Web Audio.\r\n        if (\r\n            (!peaks || this.params.forceDecode) &&\r\n            this.backend.supportsWebAudio()\r\n        ) {\r\n            this.getArrayBuffer(url, arraybuffer => {\r\n                this.decodeArrayBuffer(arraybuffer, buffer => {\r\n                    this.backend.buffer = buffer;\r\n                    this.backend.setPeaks(null);\r\n                    this.drawBuffer();\r\n                    this.fireEvent('waveform-ready');\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Decode an array buffer and pass data to a callback\r\n     *\r\n     * @private\r\n     * @param {Object} arraybuffer The array buffer to decode\r\n     * @param {function} callback The function to call on complete\r\n     */\r\n    decodeArrayBuffer(arraybuffer, callback) {\r\n        if (!this.isDestroyed) {\r\n            this.arraybuffer = arraybuffer;\r\n            this.backend.decodeArrayBuffer(\r\n                arraybuffer,\r\n                data => {\r\n                    // Only use the decoded data if we haven't been destroyed or\r\n                    // another decode started in the meantime\r\n                    if (!this.isDestroyed && this.arraybuffer == arraybuffer) {\r\n                        callback(data);\r\n                        this.arraybuffer = null;\r\n                    }\r\n                },\r\n                () => this.fireEvent('error', 'Error decoding audiobuffer')\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Load an array buffer using fetch and pass the result to a callback\r\n     *\r\n     * @param {string} url The URL of the file object\r\n     * @param {function} callback The function to call on complete\r\n     * @returns {util.fetchFile} fetch call\r\n     * @private\r\n     */\r\n    getArrayBuffer(url, callback) {\r\n        let options = Object.assign(\r\n            {\r\n                url: url,\r\n                responseType: 'arraybuffer'\r\n            },\r\n            this.params.xhr\r\n        );\r\n        const request = util.fetchFile(options);\r\n\r\n        this.currentRequest = request;\r\n\r\n        this.tmpEvents.push(\r\n            request.on('progress', e => {\r\n                this.onProgress(e);\r\n            }),\r\n            request.on('success', data => {\r\n                callback(data);\r\n                this.currentRequest = null;\r\n            }),\r\n            request.on('error', e => {\r\n                this.fireEvent('error', e);\r\n                this.currentRequest = null;\r\n            })\r\n        );\r\n\r\n        return request;\r\n    }\r\n\r\n    /**\r\n     * Called while the audio file is loading\r\n     *\r\n     * @private\r\n     * @param {Event} e Progress event\r\n     * @emits WaveSurfer#loading\r\n     */\r\n    onProgress(e) {\r\n        let percentComplete;\r\n        if (e.lengthComputable) {\r\n            percentComplete = e.loaded / e.total;\r\n        } else {\r\n            // Approximate progress with an asymptotic\r\n            // function, and assume downloads in the 1-3 MB range.\r\n            percentComplete = e.loaded / (e.loaded + 1000000);\r\n        }\r\n        this.fireEvent('loading', Math.round(percentComplete * 100), e.target);\r\n    }\r\n\r\n    /**\r\n     * Exports PCM data into a JSON array and optionally opens in a new window\r\n     * as valid JSON Blob instance.\r\n     *\r\n     * @param {number} length=1024 The scale in which to export the peaks\r\n     * @param {number} accuracy=10000\r\n     * @param {?boolean} noWindow Set to true to disable opening a new\r\n     * window with the JSON\r\n     * @param {number} start Start index\r\n     * @param {number} end End index\r\n     * @return {Promise} Promise that resolves with array of peaks\r\n     */\r\n    exportPCM(length, accuracy, noWindow, start, end) {\r\n        length = length || 1024;\r\n        start = start || 0;\r\n        accuracy = accuracy || 10000;\r\n        noWindow = noWindow || false;\r\n        const peaks = this.backend.getPeaks(length, start, end);\r\n        const arr = [].map.call(\r\n            peaks,\r\n            val => Math.round(val * accuracy) / accuracy\r\n        );\r\n\r\n        return new Promise((resolve, reject) => {\r\n            if (!noWindow){\r\n                const blobJSON = new Blob(\r\n                    [JSON.stringify(arr)],\r\n                    {type: 'application/json;charset=utf-8'}\r\n                );\r\n                const objURL = URL.createObjectURL(blobJSON);\r\n                window.open(objURL);\r\n                URL.revokeObjectURL(objURL);\r\n            }\r\n            resolve(arr);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Save waveform image as data URI.\r\n     *\r\n     * The default format is `'image/png'`. Other supported types are\r\n     * `'image/jpeg'` and `'image/webp'`.\r\n     *\r\n     * @param {string} format='image/png' A string indicating the image format.\r\n     * The default format type is `'image/png'`.\r\n     * @param {number} quality=1 A number between 0 and 1 indicating the image\r\n     * quality to use for image formats that use lossy compression such as\r\n     * `'image/jpeg'`` and `'image/webp'`.\r\n     * @param {string} type Image data type to return. Either 'dataURL' (default)\r\n     * or 'blob'.\r\n     * @return {string|string[]|Promise} When using `'dataURL'` type this returns\r\n     * a single data URL or an array of data URLs, one for each canvas. When using\r\n     * `'blob'` type this returns a `Promise` resolving with an array of `Blob`\r\n     * instances, one for each canvas.\r\n     */\r\n    exportImage(format, quality, type) {\r\n        if (!format) {\r\n            format = 'image/png';\r\n        }\r\n        if (!quality) {\r\n            quality = 1;\r\n        }\r\n        if (!type) {\r\n            type = 'dataURL';\r\n        }\r\n\r\n        return this.drawer.getImage(format, quality, type);\r\n    }\r\n\r\n    /**\r\n     * Cancel any fetch request currently in progress\r\n     */\r\n    cancelAjax() {\r\n        if (this.currentRequest && this.currentRequest.controller) {\r\n            // If the current request has a ProgressHandler, then its ReadableStream might need to be cancelled too\r\n            // See: Wavesurfer issue #2042\r\n            // See Firefox bug: https://bugzilla.mozilla.org/show_bug.cgi?id=1583815\r\n            if (this.currentRequest._reader) {\r\n                // Ignoring exceptions thrown by call to cancel()\r\n                this.currentRequest._reader.cancel().catch(err => {});\r\n            }\r\n\r\n            this.currentRequest.controller.abort();\r\n            this.currentRequest = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    clearTmpEvents() {\r\n        this.tmpEvents.forEach(e => e.un());\r\n    }\r\n\r\n    /**\r\n     * Display empty waveform.\r\n     */\r\n    empty() {\r\n        if (!this.backend.isPaused()) {\r\n            this.stop();\r\n            this.backend.disconnectSource();\r\n        }\r\n        this.isReady = false;\r\n        this.cancelAjax();\r\n        this.clearTmpEvents();\r\n\r\n        // empty drawer\r\n        this.drawer.progress(0);\r\n        this.drawer.setWidth(0);\r\n        this.drawer.drawPeaks({ length: this.drawer.getWidth() }, 0);\r\n    }\r\n\r\n    /**\r\n     * Remove events, elements and disconnect WebAudio nodes.\r\n     *\r\n     * @emits WaveSurfer#destroy\r\n     */\r\n    destroy() {\r\n        this.destroyAllPlugins();\r\n        this.fireEvent('destroy');\r\n        this.cancelAjax();\r\n        this.clearTmpEvents();\r\n        this.unAll();\r\n        if (this.params.responsive !== false) {\r\n            window.removeEventListener('resize', this._onResize, true);\r\n            window.removeEventListener(\r\n                'orientationchange',\r\n                this._onResize,\r\n                true\r\n            );\r\n        }\r\n        if (this.backend) {\r\n            this.backend.destroy();\r\n            // clears memory usage\r\n            this.backend = null;\r\n        }\r\n        if (this.drawer) {\r\n            this.drawer.destroy();\r\n        }\r\n        this.isDestroyed = true;\r\n        this.isReady = false;\r\n        this.arraybuffer = null;\r\n    }\r\n}\r\n"],"names":["style","getId","CanvasEntry","constructor","wave","waveCtx","progress","progressCtx","start","end","id","name","toLowerCase","canvasContextAttributes","initWave","element","getContext","initProgress","updateDimensions","elementWidth","totalWidth","width","height","offsetLeft","elementSize","hasProgressCanvas","clearWave","clearRect","canvas","setFillStyles","waveColor","progressColor","fillStyle","getFillStyle","ctx","color","CanvasGradient","waveGradient","createLinearGradient","forEach","value","index","addColorStop","length","applyCanvasTransforms","vertical","setTransform","fillRects","x","y","radius","fillRectToContext","drawRoundedRect","fillRect","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","fill","drawLines","peaks","absmax","halfH","offsetY","drawLineToContext","first","Math","round","last","canvasStart","canvasEnd","scale","halfOffset","absmaxHalf","i","peak","h","halfPixel","j","destroy","getImage","format","quality","type","Promise","resolve","toBlob","toDataURL","util","Drawer","Observer","container","params","withOrientation","pixelRatio","lastPos","wrapper","el","styles","createWrapper","appendChild","document","createElement","display","position","userSelect","webkitUserSelect","fillParent","scrollParent","cursor","hideCursor","overflowX","hideScrollbar","overflowY","setupWrapperEvents","handleEvent","e","noPrevent","preventDefault","clientX","targetTouches","bbox","getBoundingClientRect","nominalWidth","parentWidth","getWidth","progressPixels","getProgressPixels","scrollLeft","scrollWidth","clamp","wrapperBbox","rtl","right","left","addEventListener","orientedEvent","scrollbarHeight","offsetHeight","clientHeight","clientY","bottom","interact","fireEvent","drawPeaks","setWidth","barWidth","drawBars","drawWave","resetScroll","recenter","percent","recenterOnPosition","immediate","half","clientWidth","maxScroll","target","offset","rate","autoCenterRate","max","min","getScrollX","newWidth","updateSize","setHeight","minPxDelta","pos","autoCenter","newPos","autoCenterImmediately","updateProgress","unAll","parentNode","domElement","removeChild","updateCursor","channelIndex","MultiCanvas","maxCanvasWidth","maxCanvasElementWidth","canvases","progressWave","EntryClass","drawingContextAttributes","overlap","ceil","barRadius","init","createElements","zIndex","top","overflow","boxSizing","borderRightStyle","pointerEvents","addCanvas","borderRightWidth","cursorWidth","borderRightColor","cursorColor","requiredCanvases","removeCanvas","canvasWidth","lastCanvas","entry","leftOffset","push","lastEntry","parentElement","pop","frame","prepareDraw","hasMinVals","ch","undefined","peakIndexScale","bar","gap","barGap","step","peakIndex","peakIndexRange","floor","peakIndexEnd","newPeak","abs","barMinHeight","reflectedPeaks","len","drawLine","splitChannelsOptions","channelColors","startCanvas","endCanvas","intersection","x1","y1","x2","y2","hideChannel","splitChannels","filterChannels","includes","fn","drawIndex","normalizedMax","Array","channels","filteredChannels","filter","c","overlay","overallAbsMax","relativeNormalization","map","channelPeaks","absMax","indexOf","barHeight","normalize","some","call","val","all","images","MediaElement","MediaElementWebAudio","sourceMediaElement","setPlaybackRate","audioRate","createTimer","createVolumeNode","createScriptNode","createAnalyserNode","_load","media","preload","createMediaElementSource","mediaElement","ac","connect","analyser","play","resumeAudioContext","destroyWebAudio","WebAudio","currentTime","duration","paused","playbackRate","pause","volume","mediaType","elementPosition","isMuted","buffer","onPlayEnd","mediaListeners","_setupMediaListeners","error","canplay","ended","seeked","event","volumechange","muted","Object","keys","removeEventListener","onAudioProcess","isPaused","getCurrentTime","on","load","url","controls","mediaControls","autoplay","src","prevMedia","querySelector","loadElt","elt","HTMLMediaElement","Error","setVolume","getDuration","explicitDuration","Infinity","seekable","getPlayedPercents","getPlaybackRate","seekTo","isNaN","clearPlayEnd","promise","setPlayEnd","_onPlayEnd","time","un","getPeaks","setSinkId","deviceId","reject","getVolume","setMute","destroyed","removeMediaElementOnDestroy","PeakCache","clearPeakCache","peakCacheRanges","peakCacheLength","addRangeToPeakCache","uncachedRanges","item","arr","concat","sort","a","b","uncachedRangePairs","getCacheRanges","peakCacheRangePairs","utilMax","utilmin","values","ProgressHandler","instance","contentLength","response","_reader","body","getReader","total","parseInt","loaded","controller","read","then","done","onProgress","lengthComputable","close","byteLength","enqueue","catch","fetchFile","options","fetchHeaders","Headers","fetchRequest","Request","AbortController","requestHeaders","header","append","key","responseType","fetchOptions","method","headers","mode","credentials","cache","redirect","referrer","signal","fetch","progressAvailable","get","Response","ReadableStream","errMsg","ok","arrayBuffer","json","blob","text","status","reqAnimationFrame","func","args","prefix","random","toString","substring","default","requestAnimationFrame","debounce","preventClick","ignoreSilenceMode","largest","smallest","Number","_disabledEventEmissions","handlers","callback","splice","once","handler","apply","setTimeout","setDisabledEventEmissions","eventNames","_isDisabledEventEmission","verticalPropMap","offsetTop","offsetWidth","mapProp","prop","prototype","hasOwnProperty","isProxy","Symbol","Proxy","obj","receiver","bind","set","preventClickHandler","stopPropagation","window","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","audioData","tmp","innerHTML","audioSilentMode","children","disableRemotePlayback","remove","PLAYING","PAUSED","FINISHED","scriptBufferSize","audioContext","offlineAudioContext","stateBehaviors","addOnAudioProcess","startPosition","getPlayedTime","removeOnAudioProcess","supportsWebAudio","AudioContext","webkitAudioContext","getAudioContext","WaveSurferAudioContext","getOfflineAudioContext","sampleRate","WaveSurferOfflineAudioContext","OfflineAudioContext","webkitOfflineAudioContext","lastPlay","scheduledPause","states","create","filters","gainNode","mergedPeaks","offlineAc","scriptNode","source","splitPeaks","state","setState","setLength","disconnectFilters","disconnect","setFilter","setFilters","reduce","prev","curr","audioScriptProcessor","createScriptProcessor","createJavaScriptNode","destination","onaudioprocess","createAnalyser","createGain","createGainNode","audio","Audio","dest","createMediaStreamDestination","srcObject","stream","gain","setValueAtTime","decodeArrayBuffer","arraybuffer","errback","decodeAudioData","data","err","setPeaks","numberOfChannels","newBuffer","createBuffer","sampleSize","sampleStep","chan","getChannelData","disconnectSource","closeAudioContext","createSource","createBufferSource","noteGrainOn","stop","noteOff","resume","adjustedTime","PluginClass","ws","WaveSurfer","defaultParams","backend","backgroundColor","dragSelection","desynchronized","forceDecode","loopSelection","mediaContainer","minPxPerSec","partialRender","devicePixelRatio","screen","deviceXDPI","logicalXDPI","plugins","renderer","responsive","skipLength","xhr","backends","wavesurfer","VERSION","__VERSION__","assign","transform","setBackgroundColor","savedVolume","tmpEvents","currentRequest","drawer","peakCache","Backend","initialisedPluginList","isDestroyed","isReady","prevWidth","_onResize","registerPlugins","createDrawer","createBackend","createPeakCache","plugin","addPlugin","deferInit","initPlugin","getActivePlugins","staticProps","pluginStaticProp","Instance","observerPrototypeKeys","getOwnPropertyNames","destroyPlugin","destroyAllPlugins","drawBuffer","newVolume","setCurrentTime","seconds","playPause","isPlaying","skipBackward","skip","skipForward","seekAndCenter","isFinite","isWebAudioBackend","oldScrollParent","toggleMute","mute","getMute","getFilters","toggleScroll","toggleInteraction","getWaveColor","channelIdx","setWaveColor","getProgressColor","setProgressColor","getBackgroundColor","background","getCursorColor","setCursorColor","getHeight","setFilteredChannels","channelIndices","newRanges","zoom","pxPerSec","loadArrayBuffer","loadDecodedBuffer","loadBlob","reader","FileReader","result","readAsArrayBuffer","empty","preloadIgnoreReasons","activeReasons","reason","console","warn","join","loadBuffer","loadMediaElement","action","getArrayBuffer","urlOrElt","request","percentComplete","exportPCM","accuracy","noWindow","blobJSON","Blob","JSON","stringify","objURL","URL","createObjectURL","open","revokeObjectURL","exportImage","cancelAjax","cancel","abort","clearTmpEvents"],"sourceRoot":""}