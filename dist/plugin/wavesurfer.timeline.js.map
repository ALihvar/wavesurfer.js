{"version":3,"file":"wavesurfer.timeline.js","mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C,CAAC;AACD;;UCVA;UACA;;;;;WCDA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMA,cAAN,CAAqB;EAChC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACiB,OAANC,MAAM,CAACC,MAAD,EAAS;IAClB,OAAO;MACHC,IAAI,EAAE,UADH;MAEHC,SAAS,EAAEF,MAAM,IAAIA,MAAM,CAACE,SAAjB,GAA6BF,MAAM,CAACE,SAApC,GAAgD,KAFxD;MAGHF,MAAM,EAAEA,MAHL;MAIHG,QAAQ,EAAEL;IAJP,CAAP;EAMH,CAjB+B,CAmBhC;;;EACAM,SAAS,GAAG,MAAM;IACd,IAAI,KAAKC,OAAL,IAAgB,KAAKC,MAAL,CAAYD,OAAhC,EAAyC;MACrC,KAAKA,OAAL,CAAaE,UAAb,GAA0B,KAAKD,MAAL,CAAYD,OAAZ,CAAoBE,UAA9C;IACH;EACJ,CAJQ;EAMT;AACJ;AACA;;EACIC,SAAS,GAAG,MAAM,KAAKC,MAAL,EAAT;EAETC,QAAQ,GAAG,MAAM;IACb,MAAMC,EAAE,GAAG,KAAKC,UAAhB;IACA,KAAKN,MAAL,GAAcK,EAAE,CAACL,MAAjB;IACA,KAAKO,UAAL,GAAkBF,EAAE,CAACL,MAAH,CAAUN,MAAV,CAAiBa,UAAnC;IACA,KAAKC,cAAL,GAAsBH,EAAE,CAACL,MAAH,CAAUQ,cAAV,IAA4BH,EAAE,CAACL,MAAH,CAAUS,KAA5D;IACA,KAAKC,qBAAL,GACIL,EAAE,CAACL,MAAH,CAAUU,qBAAV,IACAC,IAAI,CAACC,KAAL,CAAW,KAAKJ,cAAL,GAAsB,KAAKD,UAAtC,CAFJ,CALa,CASb;;IACAF,EAAE,CAACL,MAAH,CAAUD,OAAV,CAAkBc,gBAAlB,CAAmC,QAAnC,EAA6C,KAAKf,SAAlD;IACAO,EAAE,CAACS,EAAH,CAAM,QAAN,EAAgB,KAAKZ,SAArB;IACAG,EAAE,CAACS,EAAH,CAAM,MAAN,EAAc,KAAKC,OAAnB;IAEA,KAAKZ,MAAL;EACH,CAfO;EAiBR;AACJ;AACA;;EACIa,eAAe,GAAGC,CAAC,IAAI;IACnBA,CAAC,CAACC,cAAF;IACA,MAAMC,IAAI,GAAG,aAAaF,CAAb,GAAiBA,CAAC,CAACG,OAAnB,GAA6BH,CAAC,CAACI,MAA5C;IACA,KAAKC,SAAL,CAAe,OAAf,EAAwBH,IAAI,GAAG,KAAKpB,OAAL,CAAawB,WAApB,IAAmC,CAA3D;EACH,CAJc;EAMf;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;EACIC,WAAW,CAAC9B,MAAD,EAASW,EAAT,EAAa;IACpB,KAAKoB,SAAL,GACI,YAAY,OAAO/B,MAAM,CAAC+B,SAA1B,GACMC,QAAQ,CAACC,aAAT,CAAuBjC,MAAM,CAAC+B,SAA9B,CADN,GAEM/B,MAAM,CAAC+B,SAHjB;;IAKA,IAAI,CAAC,KAAKA,SAAV,EAAqB;MACjB,MAAM,IAAIG,KAAJ,CAAU,sCAAV,CAAN;IACH;;IAED,KAAKtB,UAAL,GAAkBD,EAAlB;IACA,KAAKwB,IAAL,GAAYxB,EAAE,CAACwB,IAAf;IACA,KAAKnC,MAAL,GAAcoC,MAAM,CAACC,MAAP,CACV,EADU,EAEV;MACIC,MAAM,EAAE,EADZ;MAEIC,kBAAkB,EAAE,EAFxB;MAGIC,YAAY,EAAE,CAHlB;MAIIC,mBAAmB,EAAE,SAJzB;MAKIC,YAAY,EAAE,MALlB;MAMIC,cAAc,EAAE,SANpB;MAOIC,gBAAgB,EAAE,MAPtB;MAQIC,kBAAkB,EAAE,MARxB;MASIC,UAAU,EAAE,OAThB;MAUIC,QAAQ,EAAE,EAVd;MAWIC,QAAQ,EAAE,IAXd;MAYIC,YAAY,EAAE,KAZlB;MAaIC,kBAAkB,EAAE,KAAKC,yBAb7B;MAcIC,YAAY,EAAE,KAAKC,mBAdvB;MAeIC,oBAAoB,EAAE,KAAKC,2BAf/B;MAgBIC,sBAAsB,EAAE,KAAKC,6BAhBjC;MAiBIC,MAAM,EAAE;IAjBZ,CAFU,EAqBV1D,MArBU,CAAd;IAwBA,KAAK2D,QAAL,GAAgB,EAAhB;IACA,KAAKtD,OAAL,GAAe,IAAf;IACA,KAAKC,MAAL,GAAc,IAAd;IACA,KAAKO,UAAL,GAAkB,IAAlB;IACA,KAAKC,cAAL,GAAsB,IAAtB;IACA,KAAKE,qBAAL,GAA6B,IAA7B;IACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IACQ,KAAKK,OAAL,GAAe,KAAKrB,MAAL,CAAYiD,YAAZ,GACT,KAAKrC,UAAL,CAAgBuB,IAAhB,CAAqByB,QAArB,CACE,MAAM,KAAKnD,MAAL,EADR,EAEE,KAAKT,MAAL,CAAYiD,YAFd,CADS,GAKT,MAAM,KAAKxC,MAAL,EALZ;EAMH;EAED;AACJ;AACA;;;EACIoD,IAAI,GAAG;IACH;IACA,IAAI,KAAKjD,UAAL,CAAgBkD,OAApB,EAA6B;MACzB,KAAKpD,QAAL;IACH,CAFD,MAEO;MACH,KAAKE,UAAL,CAAgBmD,IAAhB,CAAqB,OAArB,EAA8B,KAAKrD,QAAnC;IACH;EACJ;EAED;AACJ;AACA;;;EACIsD,OAAO,GAAG;IACN,KAAKC,KAAL;IACA,KAAKrD,UAAL,CAAgBsD,EAAhB,CAAmB,QAAnB,EAA6B,KAAK1D,SAAlC;IACA,KAAKI,UAAL,CAAgBsD,EAAhB,CAAmB,MAAnB,EAA2B,KAAK7C,OAAhC;IACA,KAAKT,UAAL,CAAgBsD,EAAhB,CAAmB,OAAnB,EAA4B,KAAKxD,QAAjC;IACA,KAAKE,UAAL,CAAgBN,MAAhB,CAAuBD,OAAvB,CAA+B8D,mBAA/B,CACI,QADJ,EAEI,KAAK/D,SAFT;;IAIA,IAAI,KAAKC,OAAL,IAAgB,KAAKA,OAAL,CAAa+D,UAAjC,EAA6C;MACzC,KAAK/D,OAAL,CAAa8D,mBAAb,CAAiC,OAAjC,EAA0C,KAAK7C,eAA/C;MACA,KAAKjB,OAAL,CAAa+D,UAAb,CAAwBC,WAAxB,CAAoC,KAAKhE,OAAzC;MACA,KAAKA,OAAL,GAAe,IAAf;IACH;EACJ;EAED;AACJ;AACA;AACA;;;EACIiE,aAAa,GAAG;IACZ,MAAMC,QAAQ,GAAG,KAAK3D,UAAL,CAAgBZ,MAAjC;IACA,KAAK+B,SAAL,CAAeyC,SAAf,GAA2B,EAA3B;IACA,KAAKnE,OAAL,GAAe,KAAK0B,SAAL,CAAe0C,WAAf,CACXzC,QAAQ,CAAC0C,aAAT,CAAuB,UAAvB,CADW,CAAf;IAGA,KAAKvC,IAAL,CAAUwC,KAAV,CAAgB,KAAKtE,OAArB,EAA8B;MAC1BuE,OAAO,EAAE,OADiB;MAE1BC,QAAQ,EAAE,UAFgB;MAG1BC,UAAU,EAAE,MAHc;MAI1BC,gBAAgB,EAAE,MAJQ;MAK1BzC,MAAM,EAAG,GAAE,KAAKtC,MAAL,CAAYsC,MAAO;IALJ,CAA9B;;IAQA,IAAIiC,QAAQ,CAACS,UAAT,IAAuBT,QAAQ,CAACU,YAApC,EAAkD;MAC9C,KAAK9C,IAAL,CAAUwC,KAAV,CAAgB,KAAKtE,OAArB,EAA8B;QAC1BU,KAAK,EAAE,MADmB;QAE1BmE,SAAS,EAAE,QAFe;QAG1BC,SAAS,EAAE;MAHe,CAA9B;IAKH;;IAED,KAAK9E,OAAL,CAAac,gBAAb,CAA8B,OAA9B,EAAuC,KAAKG,eAA5C;EACH;EAED;AACJ;AACA;AACA;;;EACIb,MAAM,GAAG;IACL,IAAI,CAAC,KAAKJ,OAAV,EAAmB;MACf,KAAKiE,aAAL;IACH;;IACD,KAAKc,cAAL;IACA,KAAKC,yBAAL;IACA,KAAKC,cAAL;EACH;EAED;AACJ;AACA;AACA;;;EACIC,SAAS,GAAG;IACR,MAAMC,MAAM,GAAG,KAAKnF,OAAL,CAAaoE,WAAb,CACXzC,QAAQ,CAAC0C,aAAT,CAAuB,QAAvB,CADW,CAAf;IAGA,KAAKf,QAAL,CAAc8B,IAAd,CAAmBD,MAAnB;IACA,KAAKrD,IAAL,CAAUwC,KAAV,CAAgBa,MAAhB,EAAwB;MACpBX,QAAQ,EAAE,UADU;MAEpBa,MAAM,EAAE;IAFY,CAAxB;EAIH;EAED;AACJ;AACA;AACA;;;EACIC,YAAY,GAAG;IACX,MAAMH,MAAM,GAAG,KAAK7B,QAAL,CAAciC,GAAd,EAAf;IACAJ,MAAM,CAACK,aAAP,CAAqBxB,WAArB,CAAiCmB,MAAjC;EACH;EAED;AACJ;AACA;AACA;AACA;;;EACIJ,cAAc,GAAG;IACb,MAAMU,UAAU,GAAG7E,IAAI,CAACC,KAAL,CAAW,KAAKZ,MAAL,CAAYD,OAAZ,CAAoBwB,WAA/B,CAAnB;IACA,MAAMkE,gBAAgB,GAAG9E,IAAI,CAAC+E,IAAL,CACrBF,UAAU,GAAG,KAAK9E,qBADG,CAAzB;;IAIA,OAAO,KAAK2C,QAAL,CAAcsC,MAAd,GAAuBF,gBAA9B,EAAgD;MAC5C,KAAKR,SAAL;IACH;;IAED,OAAO,KAAK5B,QAAL,CAAcsC,MAAd,GAAuBF,gBAA9B,EAAgD;MAC5C,KAAKJ,YAAL;IACH;EACJ;EAED;AACJ;AACA;AACA;;;EACIN,yBAAyB,GAAG;IACxB;IACA,MAAMa,cAAc,GAAG,KAAKvC,QAAL,CAAcsC,MAArC;IACA,KAAKtC,QAAL,CAAcwC,OAAd,CAAsB,CAACX,MAAD,EAASY,CAAT,KAAe;MACjC;MACA;MACA,MAAMC,WAAW,GACbD,CAAC,KAAKF,cAAc,GAAG,CAAvB,GACM,KAAK5F,MAAL,CAAYD,OAAZ,CAAoBwB,WAApB,GACA,KAAKb,qBAAL,IAA8BkF,cAAc,GAAG,CAA/C,CAFN,GAGM,KAAKlF,qBAJf,CAHiC,CAQjC;;MACAwE,MAAM,CAACzE,KAAP,GAAesF,WAAW,GAAG,KAAKxF,UAAlC,CATiC,CAUjC;MACA;;MACA2E,MAAM,CAAClD,MAAP,GAAgB,CAAC,KAAKtC,MAAL,CAAYsC,MAAZ,GAAqB,CAAtB,IAA2B,KAAKzB,UAAhD;MACA,KAAKsB,IAAL,CAAUwC,KAAV,CAAgBa,MAAhB,EAAwB;QACpBzE,KAAK,EAAG,GAAEsF,WAAY,IADF;QAEpB/D,MAAM,EAAG,GAAE,KAAKtC,MAAL,CAAYsC,MAAO,IAFV;QAGpBgE,IAAI,EAAG,GAAEF,CAAC,GAAG,KAAKpF,qBAAsB;MAHpB,CAAxB;IAKH,CAlBD;EAmBH;EAED;AACJ;AACA;AACA;;;EACIsE,cAAc,GAAG;IACb,MAAMtC,QAAQ,GACV,KAAKhD,MAAL,CAAYgD,QAAZ,IACA,KAAKpC,UAAL,CAAgB2F,OAAhB,CAAwBC,WAAxB,EAFJ;;IAIA,IAAIxD,QAAQ,IAAI,CAAhB,EAAmB;MACf;IACH;;IACD,MAAMuB,QAAQ,GAAG,KAAK3D,UAAL,CAAgBZ,MAAjC;IACA,MAAM+C,QAAQ,GAAG,KAAK/C,MAAL,CAAY+C,QAAZ,GAAuBwB,QAAQ,CAAC1D,UAAjD;IACA,MAAM4F,YAAY,GAAGC,QAAQ,CAAC1D,QAAD,EAAW,EAAX,CAAR,GAAyB,CAA9C;IACA,MAAMjC,KAAK,GACPwD,QAAQ,CAACS,UAAT,IAAuB,CAACT,QAAQ,CAACU,YAAjC,GACM,KAAK3E,MAAL,CAAYqG,QAAZ,EADN,GAEM,KAAKrG,MAAL,CAAYD,OAAZ,CAAoBwB,WAApB,GAAkC0C,QAAQ,CAAC1D,UAHrD;IAIA,MAAM+F,OAAO,GAAG,KAAK5G,MAAL,CAAYsC,MAAZ,GAAqB,KAAKzB,UAA1C;IACA,MAAMgG,OAAO,GACT,KAAK7G,MAAL,CAAYsC,MAAZ,IACC,KAAKtC,MAAL,CAAYuC,kBAAZ,GAAiC,GADlC,IAEA,KAAK1B,UAHT;IAIA,MAAMiG,eAAe,GAAG/F,KAAK,GAAGiC,QAAhC;IAEA,MAAM+D,UAAU,GAAG,KAAK/G,MAAL,CAAYkD,kBAA/B,CAtBa,CAuBb;IACA;;IACA,MAAM8D,eAAe,GAAGC,MAAM,IAC1B,OAAOA,MAAP,KAAkB,UAAlB,GAA+BA,MAAM,CAACH,eAAD,CAArC,GAAyDG,MAD7D;;IAEA,MAAM7D,YAAY,GAAG4D,eAAe,CAAC,KAAKhH,MAAL,CAAYoD,YAAb,CAApC;IACA,MAAME,oBAAoB,GAAG0D,eAAe,CACxC,KAAKhH,MAAL,CAAYsD,oBAD4B,CAA5C;IAGA,MAAME,sBAAsB,GAAGwD,eAAe,CAC1C,KAAKhH,MAAL,CAAYwD,sBAD8B,CAA9C;IAIA,IAAI0D,QAAQ,GAAGJ,eAAe,GAAG,KAAK9G,MAAL,CAAY0D,MAA7C;IACA,IAAIyD,UAAU,GAAG,CAAjB;IACA,IAAIf,CAAJ,CArCa,CAsCb;IACA;;IACA,MAAMgB,WAAW,GAAG,EAApB,CAxCa,CA0Cb;;IACA,MAAMC,aAAa,GAAI,KAAKrH,MAAL,CAAY0D,MAAZ,GAAqB,CAAtB,GAChB+C,YAAY,GAAG,KAAKzG,MAAL,CAAY0D,MADX,GAEhB+C,YAFN;;IAIA,KAAKL,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGiB,aAAa,GAAGjE,YAAhC,EAA8CgD,CAAC,EAA/C,EAAmD;MAC/CgB,WAAW,CAAC3B,IAAZ,CAAiB,CAACW,CAAD,EAAIe,UAAJ,EAAgBD,QAAhB,CAAjB;MACAC,UAAU,IAAI/D,YAAd;MACA8D,QAAQ,IAAIJ,eAAe,GAAG1D,YAA9B;IACH,CAnDY,CAqDb;;;IACA,MAAMkE,eAAe,GAAGC,EAAE,IAAI;MAC1BH,WAAW,CAACjB,OAAZ,CAAoBqB,GAAG,IAAI;QACvBD,EAAE,CAACC,GAAG,CAAC,CAAD,CAAJ,EAASA,GAAG,CAAC,CAAD,CAAZ,EAAiBA,GAAG,CAAC,CAAD,CAApB,CAAF;MACH,CAFD;IAGH,CAJD,CAtDa,CA4Db;;;IACA,KAAKC,aAAL,CAAmB,KAAKzH,MAAL,CAAY0C,YAA/B;IACA,KAAKgF,QAAL,CAAe,GAAE3E,QAAS,MAAK,KAAK/C,MAAL,CAAY8C,UAAW,EAAtD;IACA,KAAK2E,aAAL,CAAmB,KAAKzH,MAAL,CAAY4C,gBAA/B;IACA0E,eAAe,CAAC,CAAClB,CAAD,EAAIe,UAAJ,EAAgBD,QAAhB,KAA6B;MACzC,IAAId,CAAC,GAAG9C,oBAAJ,KAA6B,CAAjC,EAAoC;QAChC,KAAKqE,QAAL,CAAcT,QAAd,EAAwB,CAAxB,EAA2B,CAA3B,EAA8BN,OAA9B;QACA,KAAKgB,QAAL,CACIb,UAAU,CAACI,UAAD,EAAaL,eAAb,CADd,EAEII,QAAQ,GAAG,KAAKlH,MAAL,CAAYwC,YAAZ,GAA2B,KAAK3B,UAF/C,EAGI+F,OAHJ;MAKH;IACJ,CATc,CAAf,CAhEa,CA2Eb;;IACA,KAAKa,aAAL,CAAmB,KAAKzH,MAAL,CAAY2C,cAA/B;IACA,KAAK+E,QAAL,CAAe,GAAE3E,QAAS,MAAK,KAAK/C,MAAL,CAAY8C,UAAW,EAAtD;IACA,KAAK2E,aAAL,CAAmB,KAAKzH,MAAL,CAAY6C,kBAA/B;IACAyE,eAAe,CAAC,CAAClB,CAAD,EAAIe,UAAJ,EAAgBD,QAAhB,KAA6B;MACzC,IAAId,CAAC,GAAG5C,sBAAJ,KAA+B,CAAnC,EAAsC;QAClC,KAAKmE,QAAL,CAAcT,QAAd,EAAwB,CAAxB,EAA2B,CAA3B,EAA8BN,OAA9B;QACA,KAAKgB,QAAL,CACIb,UAAU,CAACI,UAAD,EAAaL,eAAb,CADd,EAEII,QAAQ,GAAG,KAAKlH,MAAL,CAAYwC,YAAZ,GAA2B,KAAK3B,UAF/C,EAGI+F,OAHJ;MAKH;IACJ,CATc,CAAf,CA/Ea,CA0Fb;;IACA,KAAKa,aAAL,CAAmB,KAAKzH,MAAL,CAAYyC,mBAA/B;IACA6E,eAAe,CAAC,CAAClB,CAAD,EAAIe,UAAJ,EAAgBD,QAAhB,KAA6B;MACzC,IACId,CAAC,GAAG5C,sBAAJ,KAA+B,CAA/B,IACA4C,CAAC,GAAG9C,oBAAJ,KAA6B,CAFjC,EAGE;QACE,KAAKqE,QAAL,CAAcT,QAAd,EAAwB,CAAxB,EAA2B,CAA3B,EAA8BL,OAA9B;MACH;IACJ,CAPc,CAAf;EAQH;EAED;AACJ;AACA;AACA;AACA;AACA;;;EACIY,aAAa,CAACI,SAAD,EAAY;IACrB,KAAKlE,QAAL,CAAcwC,OAAd,CAAsBX,MAAM,IAAI;MAC5B,MAAMsC,OAAO,GAAGtC,MAAM,CAACuC,UAAP,CAAkB,IAAlB,CAAhB;;MACA,IAAID,OAAJ,EAAa;QACTA,OAAO,CAACD,SAAR,GAAoBA,SAApB;MACH;IACJ,CALD;EAMH;EAED;AACJ;AACA;AACA;AACA;;;EACIH,QAAQ,CAACM,IAAD,EAAO;IACX,KAAKrE,QAAL,CAAcwC,OAAd,CAAsBX,MAAM,IAAI;MAC5B,MAAMsC,OAAO,GAAGtC,MAAM,CAACuC,UAAP,CAAkB,IAAlB,CAAhB;;MACA,IAAID,OAAJ,EAAa;QACTA,OAAO,CAACE,IAAR,GAAeA,IAAf;MACH;IACJ,CALD;EAMH;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIL,QAAQ,CAACM,CAAD,EAAIC,CAAJ,EAAOnH,KAAP,EAAcuB,MAAd,EAAsB;IAC1B,KAAKqB,QAAL,CAAcwC,OAAd,CAAsB,CAACX,MAAD,EAASY,CAAT,KAAe;MACjC,MAAM+B,UAAU,GAAG/B,CAAC,GAAG,KAAKtF,cAA5B;MAEA,MAAMsH,YAAY,GAAG;QACjBC,EAAE,EAAEpH,IAAI,CAACqH,GAAL,CAASL,CAAT,EAAY7B,CAAC,GAAG,KAAKtF,cAArB,CADa;QAEjByH,EAAE,EAAEL,CAFa;QAGjBM,EAAE,EAAEvH,IAAI,CAACwH,GAAL,CAASR,CAAC,GAAGlH,KAAb,EAAoBqF,CAAC,GAAG,KAAKtF,cAAT,GAA0B0E,MAAM,CAACzE,KAArD,CAHa;QAIjB2H,EAAE,EAAER,CAAC,GAAG5F;MAJS,CAArB;;MAOA,IAAI8F,YAAY,CAACC,EAAb,GAAkBD,YAAY,CAACI,EAAnC,EAAuC;QACnC,MAAMV,OAAO,GAAGtC,MAAM,CACjBuC,UADW,CACA,IADA,CAAhB;;QAEA,IAAID,OAAJ,EAAa;UACTA,OAAO,CACFH,QADL,CAEQS,YAAY,CAACC,EAAb,GAAkBF,UAF1B,EAGQC,YAAY,CAACG,EAHrB,EAIQH,YAAY,CAACI,EAAb,GAAkBJ,YAAY,CAACC,EAJvC,EAKQD,YAAY,CAACM,EAAb,GAAkBN,YAAY,CAACG,EALvC;QAOH;MACJ;IACJ,CAvBD;EAwBH;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACIX,QAAQ,CAACe,IAAD,EAAOV,CAAP,EAAUC,CAAV,EAAa;IACjB,IAAIU,SAAJ;IACA,IAAIC,OAAO,GAAG,CAAd;IAEA,KAAKlF,QAAL,CAAcwC,OAAd,CAAsBX,MAAM,IAAI;MAC5B,MAAMsC,OAAO,GAAGtC,MAAM,CAACuC,UAAP,CAAkB,IAAlB,CAAhB;;MACA,IAAID,OAAJ,EAAa;QACT,MAAMzB,WAAW,GAAGyB,OAAO,CAACtC,MAAR,CAAezE,KAAnC;;QAEA,IAAI8H,OAAO,GAAGZ,CAAC,GAAGW,SAAlB,EAA6B;UACzB;QACH;;QAED,IAAIC,OAAO,GAAGxC,WAAV,GAAwB4B,CAAxB,IAA6BH,OAAjC,EAA0C;UACtCc,SAAS,GAAGd,OAAO,CAACgB,WAAR,CAAoBH,IAApB,EAA0B5H,KAAtC;UACA+G,OAAO,CAACF,QAAR,CAAiBe,IAAjB,EAAuBV,CAAC,GAAGY,OAA3B,EAAoCX,CAApC;QACH;;QAEDW,OAAO,IAAIxC,WAAX;MACH;IACJ,CAhBD;EAiBH;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACIlD,yBAAyB,CAAC4F,OAAD,EAAUC,QAAV,EAAoB;IACzC,IAAID,OAAO,GAAG,EAAV,GAAe,CAAnB,EAAsB;MAClB;MACA,MAAME,OAAO,GAAGvC,QAAQ,CAACqC,OAAO,GAAG,EAAX,EAAe,EAAf,CAAxB;MACAA,OAAO,GAAGrC,QAAQ,CAACqC,OAAO,GAAG,EAAX,EAAe,EAAf,CAAlB,CAHkB,CAIlB;;MACAA,OAAO,GAAGA,OAAO,GAAG,EAAV,GAAe,MAAMA,OAArB,GAA+BA,OAAzC;MACA,OAAQ,GAAEE,OAAQ,IAAGF,OAAQ,EAA7B;IACH;;IACD,OAAO9H,IAAI,CAACC,KAAL,CAAW6H,OAAO,GAAG,IAArB,IAA6B,IAApC;EACH;EAED;AACJ;AACA;AACA;AACA;AACA;;;EACI1F,mBAAmB,CAAC2F,QAAD,EAAW;IAC1B,IAAIA,QAAQ,IAAI,EAAhB,EAAoB;MAChB,OAAO,CAAP;IACH,CAFD,MAEO,IAAIA,QAAQ,GAAG,CAAX,IAAgB,EAApB,EAAwB;MAC3B,OAAO,CAAP;IACH,CAFM,MAEA,IAAIA,QAAQ,GAAG,EAAX,IAAiB,EAArB,EAAyB;MAC5B,OAAO,EAAP;IACH;;IACD,OAAO/H,IAAI,CAAC+E,IAAL,CAAU,MAAMgD,QAAhB,IAA4B,EAAnC;EACH;EAED;AACJ;AACA;AACA;AACA;AACA;;;EACIzF,2BAA2B,CAACyF,QAAD,EAAW;IAClC,IAAIA,QAAQ,IAAI,EAAhB,EAAoB;MAChB,OAAO,EAAP;IACH,CAFD,MAEO,IAAIA,QAAQ,GAAG,CAAX,IAAgB,EAApB,EAAwB;MAC3B,OAAO,CAAP;IACH,CAFM,MAEA,IAAIA,QAAQ,GAAG,EAAX,IAAiB,EAArB,EAAyB;MAC5B,OAAO,CAAP;IACH;;IACD,OAAO,CAAP;EACH;EAED;AACJ;AACA;AACA;AACA;AACA;;;EACIvF,6BAA6B,CAACuF,QAAD,EAAW;IACpC,IAAIA,QAAQ,IAAI,EAAhB,EAAoB;MAChB,OAAO,CAAP;IACH,CAFD,MAEO,IAAIA,QAAQ,GAAG,CAAX,IAAgB,EAApB,EAAwB;MAC3B,OAAO,CAAP;IACH,CAFM,MAEA,IAAIA,QAAQ,GAAG,EAAX,IAAiB,EAArB,EAAyB;MAC5B,OAAO,CAAP;IACH;;IACD,OAAO,CAAP;EACH;;AA3hB+B","sources":["webpack://WaveSurfer/webpack/universalModuleDefinition","webpack://WaveSurfer/webpack/bootstrap","webpack://WaveSurfer/webpack/runtime/define property getters","webpack://WaveSurfer/webpack/runtime/hasOwnProperty shorthand","webpack://WaveSurfer/webpack/runtime/make namespace object","webpack://WaveSurfer/./src/plugin/timeline/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"WaveSurfer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WaveSurfer\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = root[\"WaveSurfer\"] || {}, root[\"WaveSurfer\"][\"timeline\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\r\n * @typedef {Object} TimelinePluginParams\r\n * @desc Extends the `WavesurferParams` wavesurfer was initialised with\r\n * @property {!string|HTMLElement} container CSS selector or HTML element where\r\n * the timeline should be drawn. This is the only required parameter.\r\n * @property {number} notchPercentHeight=90 Height of notches in percent\r\n * @property {string} unlabeledNotchColor='#c0c0c0' The colour of the notches\r\n * that do not have labels\r\n * @property {string} primaryColor='#000' The colour of the main notches\r\n * @property {string} secondaryColor='#c0c0c0' The colour of the secondary\r\n * notches\r\n * @property {string} primaryFontColor='#000' The colour of the labels next to\r\n * the main notches\r\n * @property {string} secondaryFontColor='#000' The colour of the labels next to\r\n * the secondary notches\r\n * @property {number} labelPadding=5 The padding between the label and the notch\r\n * @property {?number} zoomDebounce A debounce timeout to increase rendering\r\n * performance for large files\r\n * @property {string} fontFamily='Arial'\r\n * @property {number} fontSize=10 Font size of labels in pixels\r\n * @property {?number} duration Length of the track in seconds. Overrides\r\n * getDuration() for setting length of timeline\r\n * @property {function} formatTimeCallback (sec, pxPerSec) -> label\r\n * @property {function} timeInterval (pxPerSec) -> seconds between notches\r\n * @property {function} primaryLabelInterval (pxPerSec) -> cadence between\r\n * labels in primary color\r\n * @property {function} secondaryLabelInterval (pxPerSec) -> cadence between\r\n * labels in secondary color\r\n * @property {?number} offset Offset for the timeline start in seconds. May also be\r\n * negative.\r\n * @property {?boolean} deferInit Set to true to manually call\r\n * `initPlugin('timeline')`\r\n */\r\n\r\n/**\r\n * Adds a timeline to the waveform.\r\n *\r\n * @implements {PluginClass}\r\n * @extends {Observer}\r\n * @example\r\n * // es6\r\n * import TimelinePlugin from 'wavesurfer.timeline.js';\r\n *\r\n * // commonjs\r\n * var TimelinePlugin = require('wavesurfer.timeline.js');\r\n *\r\n * // if you are using <script> tags\r\n * var TimelinePlugin = window.WaveSurfer.timeline;\r\n *\r\n * // ... initialising wavesurfer with the plugin\r\n * var wavesurfer = WaveSurfer.create({\r\n *   // wavesurfer options ...\r\n *   plugins: [\r\n *     TimelinePlugin.create({\r\n *       // plugin options ...\r\n *     })\r\n *   ]\r\n * });\r\n */\r\nexport default class TimelinePlugin {\r\n    /**\r\n     * Timeline plugin definition factory\r\n     *\r\n     * This function must be used to create a plugin definition which can be\r\n     * used by wavesurfer to correctly instantiate the plugin.\r\n     *\r\n     * @param  {TimelinePluginParams} params parameters use to initialise the plugin\r\n     * @return {PluginDefinition} an object representing the plugin\r\n     */\r\n    static create(params) {\r\n        return {\r\n            name: 'timeline',\r\n            deferInit: params && params.deferInit ? params.deferInit : false,\r\n            params: params,\r\n            instance: TimelinePlugin\r\n        };\r\n    }\r\n\r\n    // event handlers\r\n    _onScroll = () => {\r\n        if (this.wrapper && this.drawer.wrapper) {\r\n            this.wrapper.scrollLeft = this.drawer.wrapper.scrollLeft;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @returns {void}\r\n     */\r\n    _onRedraw = () => this.render();\r\n\r\n    _onReady = () => {\r\n        const ws = this.wavesurfer;\r\n        this.drawer = ws.drawer;\r\n        this.pixelRatio = ws.drawer.params.pixelRatio;\r\n        this.maxCanvasWidth = ws.drawer.maxCanvasWidth || ws.drawer.width;\r\n        this.maxCanvasElementWidth =\r\n            ws.drawer.maxCanvasElementWidth ||\r\n            Math.round(this.maxCanvasWidth / this.pixelRatio);\r\n\r\n        // add listeners\r\n        ws.drawer.wrapper.addEventListener('scroll', this._onScroll);\r\n        ws.on('redraw', this._onRedraw);\r\n        ws.on('zoom', this._onZoom);\r\n\r\n        this.render();\r\n    };\r\n\r\n    /**\r\n     * @param {object} e Click event\r\n     */\r\n    _onWrapperClick = e => {\r\n        e.preventDefault();\r\n        const relX = 'offsetX' in e ? e.offsetX : e.layerX;\r\n        this.fireEvent('click', relX / this.wrapper.scrollWidth || 0);\r\n    };\r\n\r\n    /**\r\n     * Creates an instance of TimelinePlugin.\r\n     *\r\n     * You probably want to use TimelinePlugin.create()\r\n     *\r\n     * @param {TimelinePluginParams} params Plugin parameters\r\n     * @param {object} ws Wavesurfer instance\r\n     */\r\n    constructor(params, ws) {\r\n        this.container =\r\n            'string' == typeof params.container\r\n                ? document.querySelector(params.container)\r\n                : params.container;\r\n\r\n        if (!this.container) {\r\n            throw new Error('No container for wavesurfer timeline');\r\n        }\r\n\r\n        this.wavesurfer = ws;\r\n        this.util = ws.util;\r\n        this.params = Object.assign(\r\n            {},\r\n            {\r\n                height: 20,\r\n                notchPercentHeight: 90,\r\n                labelPadding: 5,\r\n                unlabeledNotchColor: '#c0c0c0',\r\n                primaryColor: '#000',\r\n                secondaryColor: '#c0c0c0',\r\n                primaryFontColor: '#000',\r\n                secondaryFontColor: '#000',\r\n                fontFamily: 'Arial',\r\n                fontSize: 10,\r\n                duration: null,\r\n                zoomDebounce: false,\r\n                formatTimeCallback: this.defaultFormatTimeCallback,\r\n                timeInterval: this.defaultTimeInterval,\r\n                primaryLabelInterval: this.defaultPrimaryLabelInterval,\r\n                secondaryLabelInterval: this.defaultSecondaryLabelInterval,\r\n                offset: 0\r\n            },\r\n            params\r\n        );\r\n\r\n        this.canvases = [];\r\n        this.wrapper = null;\r\n        this.drawer = null;\r\n        this.pixelRatio = null;\r\n        this.maxCanvasWidth = null;\r\n        this.maxCanvasElementWidth = null;\r\n        /**\r\n         * This event handler has to be in the constructor function because it\r\n         * relies on the debounce function which is only available after\r\n         * instantiation\r\n         *\r\n         * Use a debounced function if `params.zoomDebounce` is defined\r\n         *\r\n         * @returns {void}\r\n         */\r\n        this._onZoom = this.params.zoomDebounce\r\n            ? this.wavesurfer.util.debounce(\r\n                () => this.render(),\r\n                this.params.zoomDebounce\r\n            )\r\n            : () => this.render();\r\n    }\r\n\r\n    /**\r\n     * Initialisation function used by the plugin API\r\n     */\r\n    init() {\r\n        // Check if ws is ready\r\n        if (this.wavesurfer.isReady) {\r\n            this._onReady();\r\n        } else {\r\n            this.wavesurfer.once('ready', this._onReady);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Destroy function used by the plugin API\r\n     */\r\n    destroy() {\r\n        this.unAll();\r\n        this.wavesurfer.un('redraw', this._onRedraw);\r\n        this.wavesurfer.un('zoom', this._onZoom);\r\n        this.wavesurfer.un('ready', this._onReady);\r\n        this.wavesurfer.drawer.wrapper.removeEventListener(\r\n            'scroll',\r\n            this._onScroll\r\n        );\r\n        if (this.wrapper && this.wrapper.parentNode) {\r\n            this.wrapper.removeEventListener('click', this._onWrapperClick);\r\n            this.wrapper.parentNode.removeChild(this.wrapper);\r\n            this.wrapper = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create a timeline element to wrap the canvases drawn by this plugin\r\n     *\r\n     */\r\n    createWrapper() {\r\n        const wsParams = this.wavesurfer.params;\r\n        this.container.innerHTML = '';\r\n        this.wrapper = this.container.appendChild(\r\n            document.createElement('timeline')\r\n        );\r\n        this.util.style(this.wrapper, {\r\n            display: 'block',\r\n            position: 'relative',\r\n            userSelect: 'none',\r\n            webkitUserSelect: 'none',\r\n            height: `${this.params.height}px`\r\n        });\r\n\r\n        if (wsParams.fillParent || wsParams.scrollParent) {\r\n            this.util.style(this.wrapper, {\r\n                width: '100%',\r\n                overflowX: 'hidden',\r\n                overflowY: 'hidden'\r\n            });\r\n        }\r\n\r\n        this.wrapper.addEventListener('click', this._onWrapperClick);\r\n    }\r\n\r\n    /**\r\n     * Render the timeline (also updates the already rendered timeline)\r\n     *\r\n     */\r\n    render() {\r\n        if (!this.wrapper) {\r\n            this.createWrapper();\r\n        }\r\n        this.updateCanvases();\r\n        this.updateCanvasesPositioning();\r\n        this.renderCanvases();\r\n    }\r\n\r\n    /**\r\n     * Add new timeline canvas\r\n     *\r\n     */\r\n    addCanvas() {\r\n        const canvas = this.wrapper.appendChild(\r\n            document.createElement('canvas')\r\n        );\r\n        this.canvases.push(canvas);\r\n        this.util.style(canvas, {\r\n            position: 'absolute',\r\n            zIndex: 4\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Remove timeline canvas\r\n     *\r\n     */\r\n    removeCanvas() {\r\n        const canvas = this.canvases.pop();\r\n        canvas.parentElement.removeChild(canvas);\r\n    }\r\n\r\n    /**\r\n     * Make sure the correct of timeline canvas elements exist and are cached in\r\n     * this.canvases\r\n     *\r\n     */\r\n    updateCanvases() {\r\n        const totalWidth = Math.round(this.drawer.wrapper.scrollWidth);\r\n        const requiredCanvases = Math.ceil(\r\n            totalWidth / this.maxCanvasElementWidth\r\n        );\r\n\r\n        while (this.canvases.length < requiredCanvases) {\r\n            this.addCanvas();\r\n        }\r\n\r\n        while (this.canvases.length > requiredCanvases) {\r\n            this.removeCanvas();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Update the dimensions and positioning style for all the timeline canvases\r\n     *\r\n     */\r\n    updateCanvasesPositioning() {\r\n        // cache length for performance\r\n        const canvasesLength = this.canvases.length;\r\n        this.canvases.forEach((canvas, i) => {\r\n            // canvas width is the max element width, or if it is the last the\r\n            // required width\r\n            const canvasWidth =\r\n                i === canvasesLength - 1\r\n                    ? this.drawer.wrapper.scrollWidth -\r\n                      this.maxCanvasElementWidth * (canvasesLength - 1)\r\n                    : this.maxCanvasElementWidth;\r\n            // set dimensions and style\r\n            canvas.width = canvasWidth * this.pixelRatio;\r\n            // on certain pixel ratios the canvas appears cut off at the bottom,\r\n            // therefore leave 1px extra\r\n            canvas.height = (this.params.height + 1) * this.pixelRatio;\r\n            this.util.style(canvas, {\r\n                width: `${canvasWidth}px`,\r\n                height: `${this.params.height}px`,\r\n                left: `${i * this.maxCanvasElementWidth}px`\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Render the timeline labels and notches\r\n     *\r\n     */\r\n    renderCanvases() {\r\n        const duration =\r\n            this.params.duration ||\r\n            this.wavesurfer.backend.getDuration();\r\n\r\n        if (duration <= 0) {\r\n            return;\r\n        }\r\n        const wsParams = this.wavesurfer.params;\r\n        const fontSize = this.params.fontSize * wsParams.pixelRatio;\r\n        const totalSeconds = parseInt(duration, 10) + 1;\r\n        const width =\r\n            wsParams.fillParent && !wsParams.scrollParent\r\n                ? this.drawer.getWidth()\r\n                : this.drawer.wrapper.scrollWidth * wsParams.pixelRatio;\r\n        const height1 = this.params.height * this.pixelRatio;\r\n        const height2 =\r\n            this.params.height *\r\n            (this.params.notchPercentHeight / 100) *\r\n            this.pixelRatio;\r\n        const pixelsPerSecond = width / duration;\r\n\r\n        const formatTime = this.params.formatTimeCallback;\r\n        // if parameter is function, call the function with\r\n        // pixelsPerSecond, otherwise simply take the value as-is\r\n        const intervalFnOrVal = option =>\r\n            typeof option === 'function' ? option(pixelsPerSecond) : option;\r\n        const timeInterval = intervalFnOrVal(this.params.timeInterval);\r\n        const primaryLabelInterval = intervalFnOrVal(\r\n            this.params.primaryLabelInterval\r\n        );\r\n        const secondaryLabelInterval = intervalFnOrVal(\r\n            this.params.secondaryLabelInterval\r\n        );\r\n\r\n        let curPixel = pixelsPerSecond * this.params.offset;\r\n        let curSeconds = 0;\r\n        let i;\r\n        // build an array of position data with index, second and pixel data,\r\n        // this is then used multiple times below\r\n        const positioning = [];\r\n\r\n        // render until end in case we have a negative offset\r\n        const renderSeconds = (this.params.offset < 0)\r\n            ? totalSeconds - this.params.offset\r\n            : totalSeconds;\r\n\r\n        for (i = 0; i < renderSeconds / timeInterval; i++) {\r\n            positioning.push([i, curSeconds, curPixel]);\r\n            curSeconds += timeInterval;\r\n            curPixel += pixelsPerSecond * timeInterval;\r\n        }\r\n\r\n        // iterate over each position\r\n        const renderPositions = cb => {\r\n            positioning.forEach(pos => {\r\n                cb(pos[0], pos[1], pos[2]);\r\n            });\r\n        };\r\n\r\n        // render primary labels\r\n        this.setFillStyles(this.params.primaryColor);\r\n        this.setFonts(`${fontSize}px ${this.params.fontFamily}`);\r\n        this.setFillStyles(this.params.primaryFontColor);\r\n        renderPositions((i, curSeconds, curPixel) => {\r\n            if (i % primaryLabelInterval === 0) {\r\n                this.fillRect(curPixel, 0, 1, height1);\r\n                this.fillText(\r\n                    formatTime(curSeconds, pixelsPerSecond),\r\n                    curPixel + this.params.labelPadding * this.pixelRatio,\r\n                    height1\r\n                );\r\n            }\r\n        });\r\n\r\n        // render secondary labels\r\n        this.setFillStyles(this.params.secondaryColor);\r\n        this.setFonts(`${fontSize}px ${this.params.fontFamily}`);\r\n        this.setFillStyles(this.params.secondaryFontColor);\r\n        renderPositions((i, curSeconds, curPixel) => {\r\n            if (i % secondaryLabelInterval === 0) {\r\n                this.fillRect(curPixel, 0, 1, height1);\r\n                this.fillText(\r\n                    formatTime(curSeconds, pixelsPerSecond),\r\n                    curPixel + this.params.labelPadding * this.pixelRatio,\r\n                    height1\r\n                );\r\n            }\r\n        });\r\n\r\n        // render the actual notches (when no labels are used)\r\n        this.setFillStyles(this.params.unlabeledNotchColor);\r\n        renderPositions((i, curSeconds, curPixel) => {\r\n            if (\r\n                i % secondaryLabelInterval !== 0 &&\r\n                i % primaryLabelInterval !== 0\r\n            ) {\r\n                this.fillRect(curPixel, 0, 1, height2);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Set the canvas fill style\r\n     *\r\n     * @param {DOMString|CanvasGradient|CanvasPattern} fillStyle Fill style to\r\n     * use\r\n     */\r\n    setFillStyles(fillStyle) {\r\n        this.canvases.forEach(canvas => {\r\n            const context = canvas.getContext('2d');\r\n            if (context) {\r\n                context.fillStyle = fillStyle;\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Set the canvas font\r\n     *\r\n     * @param {DOMString} font Font to use\r\n     */\r\n    setFonts(font) {\r\n        this.canvases.forEach(canvas => {\r\n            const context = canvas.getContext('2d');\r\n            if (context) {\r\n                context.font = font;\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Draw a rectangle on the canvases\r\n     *\r\n     * (it figures out the offset for each canvas)\r\n     *\r\n     * @param {number} x X-position\r\n     * @param {number} y Y-position\r\n     * @param {number} width Width\r\n     * @param {number} height Height\r\n     */\r\n    fillRect(x, y, width, height) {\r\n        this.canvases.forEach((canvas, i) => {\r\n            const leftOffset = i * this.maxCanvasWidth;\r\n\r\n            const intersection = {\r\n                x1: Math.max(x, i * this.maxCanvasWidth),\r\n                y1: y,\r\n                x2: Math.min(x + width, i * this.maxCanvasWidth + canvas.width),\r\n                y2: y + height\r\n            };\r\n\r\n            if (intersection.x1 < intersection.x2) {\r\n                const context = canvas\r\n                    .getContext('2d');\r\n                if (context) {\r\n                    context\r\n                        .fillRect(\r\n                            intersection.x1 - leftOffset,\r\n                            intersection.y1,\r\n                            intersection.x2 - intersection.x1,\r\n                            intersection.y2 - intersection.y1\r\n                        );\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Fill a given text on the canvases\r\n     *\r\n     * @param {string} text Text to render\r\n     * @param {number} x X-position\r\n     * @param {number} y Y-position\r\n     */\r\n    fillText(text, x, y) {\r\n        let textWidth;\r\n        let xOffset = 0;\r\n\r\n        this.canvases.forEach(canvas => {\r\n            const context = canvas.getContext('2d');\r\n            if (context) {\r\n                const canvasWidth = context.canvas.width;\r\n\r\n                if (xOffset > x + textWidth) {\r\n                    return;\r\n                }\r\n\r\n                if (xOffset + canvasWidth > x && context) {\r\n                    textWidth = context.measureText(text).width;\r\n                    context.fillText(text, x - xOffset, y);\r\n                }\r\n\r\n                xOffset += canvasWidth;\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Turn the time into a suitable label for the time.\r\n     *\r\n     * @param {number} seconds Seconds to format\r\n     * @param {number} pxPerSec Pixels per second\r\n     * @returns {number} Time\r\n     */\r\n    defaultFormatTimeCallback(seconds, pxPerSec) {\r\n        if (seconds / 60 > 1) {\r\n            // calculate minutes and seconds from seconds count\r\n            const minutes = parseInt(seconds / 60, 10);\r\n            seconds = parseInt(seconds % 60, 10);\r\n            // fill up seconds with zeroes\r\n            seconds = seconds < 10 ? '0' + seconds : seconds;\r\n            return `${minutes}:${seconds}`;\r\n        }\r\n        return Math.round(seconds * 1000) / 1000;\r\n    }\r\n\r\n    /**\r\n     * Return how many seconds should be between each notch\r\n     *\r\n     * @param {number} pxPerSec Pixels per second\r\n     * @returns {number} Time\r\n     */\r\n    defaultTimeInterval(pxPerSec) {\r\n        if (pxPerSec >= 25) {\r\n            return 1;\r\n        } else if (pxPerSec * 5 >= 25) {\r\n            return 5;\r\n        } else if (pxPerSec * 15 >= 25) {\r\n            return 15;\r\n        }\r\n        return Math.ceil(0.5 / pxPerSec) * 60;\r\n    }\r\n\r\n    /**\r\n     * Return the cadence of notches that get labels in the primary color.\r\n     *\r\n     * @param {number} pxPerSec Pixels per second\r\n     * @returns {number} Cadence\r\n     */\r\n    defaultPrimaryLabelInterval(pxPerSec) {\r\n        if (pxPerSec >= 25) {\r\n            return 10;\r\n        } else if (pxPerSec * 5 >= 25) {\r\n            return 6;\r\n        } else if (pxPerSec * 15 >= 25) {\r\n            return 4;\r\n        }\r\n        return 4;\r\n    }\r\n\r\n    /**\r\n     * Return the cadence of notches that get labels in the secondary color.\r\n     *\r\n     * @param {number} pxPerSec Pixels per second\r\n     * @returns {number} Cadence\r\n     */\r\n    defaultSecondaryLabelInterval(pxPerSec) {\r\n        if (pxPerSec >= 25) {\r\n            return 5;\r\n        } else if (pxPerSec * 5 >= 25) {\r\n            return 2;\r\n        } else if (pxPerSec * 15 >= 25) {\r\n            return 2;\r\n        }\r\n        return 2;\r\n    }\r\n}\r\n"],"names":["TimelinePlugin","create","params","name","deferInit","instance","_onScroll","wrapper","drawer","scrollLeft","_onRedraw","render","_onReady","ws","wavesurfer","pixelRatio","maxCanvasWidth","width","maxCanvasElementWidth","Math","round","addEventListener","on","_onZoom","_onWrapperClick","e","preventDefault","relX","offsetX","layerX","fireEvent","scrollWidth","constructor","container","document","querySelector","Error","util","Object","assign","height","notchPercentHeight","labelPadding","unlabeledNotchColor","primaryColor","secondaryColor","primaryFontColor","secondaryFontColor","fontFamily","fontSize","duration","zoomDebounce","formatTimeCallback","defaultFormatTimeCallback","timeInterval","defaultTimeInterval","primaryLabelInterval","defaultPrimaryLabelInterval","secondaryLabelInterval","defaultSecondaryLabelInterval","offset","canvases","debounce","init","isReady","once","destroy","unAll","un","removeEventListener","parentNode","removeChild","createWrapper","wsParams","innerHTML","appendChild","createElement","style","display","position","userSelect","webkitUserSelect","fillParent","scrollParent","overflowX","overflowY","updateCanvases","updateCanvasesPositioning","renderCanvases","addCanvas","canvas","push","zIndex","removeCanvas","pop","parentElement","totalWidth","requiredCanvases","ceil","length","canvasesLength","forEach","i","canvasWidth","left","backend","getDuration","totalSeconds","parseInt","getWidth","height1","height2","pixelsPerSecond","formatTime","intervalFnOrVal","option","curPixel","curSeconds","positioning","renderSeconds","renderPositions","cb","pos","setFillStyles","setFonts","fillRect","fillText","fillStyle","context","getContext","font","x","y","leftOffset","intersection","x1","max","y1","x2","min","y2","text","textWidth","xOffset","measureText","seconds","pxPerSec","minutes"],"sourceRoot":""}